(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    289461,       5848]
NotebookOptionsPosition[    284029,       5758]
NotebookOutlinePosition[    284544,       5777]
CellTagsIndexPosition[    284501,       5774]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {
    GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxd102ITWEYwPGbZGFFzMaObBVZWIh3oWgkC8nXhnxshBELYZRmR2jSNAuK
U2QlamKIt6YmkzJRRs2MhjsfivWUDQu599x+b73v7U7Tr9M55/7vnea5z9rj
PftOLWk0Gn9aP+3fV1c/2zV/ZSA06sfcyLJ3Tyb6Lz5P/rX97fXp/W+Sf95e
uef3pdHkQ71jB3vH3id/OH35xNJVH5MfPB3csnPj5+SpR+e3LZ/6krzi/u4d
n65NJnffXd96fk3uu/Fv74HxmeT2q1lzoZn8d+vhDT235pLru83OJ2+uHz+S
9X4bPjvTeqZe1st6WS/rZb2sl/WyXtbLelkv62W9rPd1zcnUy3pZL+tlvayX
9bJe1st6WS/rZb2sl/UOtG/TPZF6WS/rZb2sl/WyXtbLelkv62W9rJf1st7Z
+vMeT72sl/WyXtbLelkv62W9rJf1sl7Wy3pZ72DdP5p6WS/rZb2sl/WyXtbL
elkv62W9rJf1st57tYdSL+tlvayX9bJe1st6WS/rZb2sl/WyXs7nURXzeVTF
fB5VMZ9HVcznURXzeVTFfB5VMZ9HVcznURXzeVTFfB5VMZ9HVcznURXzeVTF
fB5VUe/NTn/Qy3pZL+tlvayX9bJe1st6WS/rZb2sl/Xe6fx9p17Wy3pZL+tl
vayX9bJe1st6WS/rZb2sd6rz/yv1sl7Wy3pZL+tlvayX9bJe1st6WS/rZb39
nfmUelkv62W9rJf1sl7Wy3pZL+tlvayX9bLeF53vH6mX9bJe1st6WS/rZb2s
l/WyXtbLelkv653ufL9MvayX9bJe1st6WS/rZb2sl/WyXtbLernYj0KxH4Vi
PwrFfhSK/SgU+1Eo9qNQ7Eeh2I9SLxf7USj2o1DsR6HYj0I+j+bCujrocTjX
rh/+nuYxn3wZN/XdWEh2Pjv/TMfp/WPnly7vb18rjo8Ux9Prd71ji11HF7se
hlf1x9ccaX0YQ0eaC8mOdz7eZnCcvd7yfPd3fnl/5xfH0/vjeq5f3t/1/gMq
O1pF
       "], {
        {GrayLevel[0.8], EdgeForm[None], 
         GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
           "]]]}, {}, {}, {}, {}},
       VertexColors->CompressedData["
1:eJztmHswlfsax6lERXRxtmxFCt3s7ZaK6umOSiFtS1SySXIpQsrOrRKdEIoi
5ZpCcr+GRdENrdzvZ7mtW6xXJbuU7Zizn7PeM+/MmfbZM/ucM2fOmln/PPOb
d37vM9/3O5/vd7H1CRPbKUJCQp8m/1OF/v4bhoDFrmNnN/IgTTmwWHITHf4/
/2PmgfY+88a/4cHNbzVee/6JnMsfGHXY/IwLj/v1hZJ9ywXzgp1OTy56csE0
XPUQrbFMMDfU7Zd7sYwL/TD30axl5Lx/pYX77DYOuA+NLij3KhXMveTqa02C
ODA9puO066tHgvk8CQPlqHUciNKnNyktIeep4+XeHVw2LBtN0mzzKBHMN/G1
W+Sj2VCYGBR25UWxYN7S/eB7m51sMDB2JmAROT/xamngvTEWtP9iYvjepUgw
n06PYQ6mssAhfU3a3apCwTw2c+46dQsWfDGXm3FgATnXig8Kc5/FgmBRYTsJ
pwLB/GWYEK+oZAAW5g08odPzBXO9LDO+Ep8L/Bf25pfqyX1qJIWwy/S4sP7G
L83Dx8m9LYqqYprFc+CybYTpgank3mZc/tI2PMaGNo1l9Y9jyD2M/KTZEGTK
BiWh0r2qWuT7Mk8cr1HMYIFbrXFtZA15/5fW8VUloiyojGbtFLIl71+wv7XM
9MgASB3zemY/nieYJ+hLFg4V98PB1VI7Gq7ngp6dS4FdPwHu5wyqGcV98Lop
NXy5cg4oPT347s9PCdDg1qreyO8Fu1Z17cX5WTBVZadqZioBhKnJ9cPZPfCl
vbBNZkcm9AZoH2sMJiCV3vxFOYMJCiU+YwrpD4DOUkz8eJKAOlr+s859f4Fd
9ODNUjWpcHuHZLecKQF6auVRDru6wKMqJnDiTYrgno0uwp6Vk7q9qJ7QVeJH
7pn+6GILp5EDlRnWE89cyX2mic5cI9nDhomVSxY3/0juM8okJHL1EAvW3+/b
0mdK6sQ/du6oxacBOKOcZDO8ndybMydyv7/IAOQn2gSMa+dBiHaeI6ePABna
yKhpfh/YLTi1pl4+B/r1p2jfLiJgT0Kaw8TaXhisrjL2mZYFOhZ7J/aFEnBh
0Jp5v4QJfRy1Vlr9A7jqdOvZDFsC3Jy0Uu/91A38rc3iOTH3YcCHG1auQ0C3
cGLEuF8HjN722ixhmwy64doW7lIE7I6cc87kUitMG1PwsPsuHg7mrhQdMOeD
u+e0H+TzmmBUj1Xu13oL1m1QM60IGoIUjt08Q149XHPUiZvRGQXS1VrxsUWD
0EJ7yTgrzwC1sBDfsL+EC953yp7PEuqpXGheSPd/AOSeXR8tTxI5zQFhJkOc
lUJ+vz0raDrtW9mgmtATuUiK1KfRzQBGhhQLzG3eKZh5kvssF807er6rHy4q
T00LZeZC/oeWwPHXBERbqux9Mr8PGiOtAox1s6GbsUah8BYBITler+y1eiA9
zZXBUnkIoulRBa52BMyQjruz6F435C9fem1F231Qu/TzHlUNAkYq9ePs2e1Q
mtJk5nw5CbJ5A2trn/Mhhv2a77q6BUpfVm6oC7gDer7x12IfD4FyXLXl1KwG
KE3fGdOz8SZ0Sh8cdiodhExayYuIVQwoDa7/ODIaDifTZHZvLHgDpxWtXPSN
noNPV2661KEgENncmDI7iwdXIgwM7fUqQQiCXjnfOgM9abTihmoO3KJJHDWX
KIGc820ffnjuIdjD0ZzGpgcRXOBk23uISpJ7DutR2MdU50AhM8H07Fxyz48k
nRhzGSy4PLtTY0ia1C1rQ5HhducBOLBeeo7Vgnxgnu4fEZ7U5xp/sVrtjD54
m1cmYTY/B4xeBK26m0xA+tNjJ4kLk9+pnrdDk0gmVMhN2ukxAkA2XMWooBsk
cr3CU/j3QeNEYwx/BQHLk02cK2zaQal1zDDpdSJY7mXOMfPmg3hZYoeBRjPI
BXqlTCuMhV0yh2LMjYbARWdwXFmpHsa4pru+eEWCTk/HUkvFQbjrZL9JTK0G
UqMsu9k+IbA81Tzj0AgPHI+OXaiUfgI2FpLKLaK+oMzujr8uxoVLK7Krdj0u
ARnVCV56hju48dgZ2dosKPzO3annQw5o33Fw62X5An1ouOSVTR9U2J5cwTe6
B+wUs1POowGC/RzZPp0zeJELTbd1WXvekj7sv2PKrARRDgybS69SLyD9IVHv
F1WzINakvgiXeedIX32iP2YkPmsAljCeFXzYkgeK9zR5HTUElNuGrfZh9cJy
eg2H+SkLSt+07gi9TIBp9UqP1KtMOPNMWbaI9gBo33snbtEnoMHwilOaeyck
SuVaZ5behUUVpQaHRvmQOYMd4FfXAgvVXe9K7o6D3X37r0hmTu5TtPV9u1MD
pFZKMkaqb8BZEX4d3X4Qjs4MrzgmWwdyS3T3vfhwFe6pBMxxXfIGOCJuMd+a
V4GMaG06GPjD9XGLK182cqFjC2TWmz+CobdrGuqfuMF16QbfjxossFmnuz3s
TQ5czq7bNsD3hQjVne4jyn3AOOyce2fsLixxFFY44nUJwrZX2A/LMuFHzZtn
TnkGQrGS1udO0RDBfkyEH+4x9OOCZ/xpDWM2ueeKS2K5zp/YYDxy+LDfDXLP
6rOtF1x1YcEKPf0rWQbknuOulXhncfthSrRaUc9YLuTS1bvtqwgo7LH61jKx
F450y0oORWdBKI0l5uZHgMU2XaPgjUw4sF/f0u1kOhwfjtb03kDAuOHKmedy
OuDd0IHo2WnJIFXkpqJZxIdCydhK5y/NsM567Y1xhTvwOFC8sOD4EBhXWy3P
86mH5FfT5LIWRsFpWpL+erlBaPykr/CzSA0sPJsAz7VCYOWy9W30Wh6I2TGG
zos/Bs59jxAry59gwDUnM/oQB86vDYv9OFgECceFnpsHecJBx7Oa4jD5fTKs
ypL1s8B3dcaZZZ/9odF2c/45+cn3+ds8Hh6u7pydlBUEkWVSrt0TXWDR8Khv
furF9W9lReolta7+Zj3z/016NkM9M1DPcRQ9P0Q9y6Ged6GeT6CeU1DPZ1DP
Vqjnb1DPKajnftSz1Ff0HIF6Pox6DkE9h6Gen6KelVDPoahnQD2XUvT8n/Ln
NPTnz1/xZ3X0ZxX0Z0X0Zwv055nozzIUfz6B/vwz+vM69OcE9OdEij8fQ3+2
RH9eiv7sj/4sj/58Cv05F/15HfpzGfpzEfozj+LP/4w3XJA3hCi8wUTeWEXh
jb3IGzQKb5Qhb/gjb+Qhb9xA3nhN4Y1g5I17FN4QQd7IpPDGMPJGAfJGFvLG
deSNbOSN7cgb8sgb2cgb7cgbqcgbOcgbzsgb9sgbR5E3piJveCNv1G38lTe6
kDdCkTeqKbzxe/l5nMLPkcjPOhR+9kN+9qDwsxPycw6Fn+cjP1tT+HkX8jOb
ws9+yM/tyM+hyM8OyM+9FH5uRX4eovDzNuTnj59+5WcL5GdH5Gc28rM28vNt
5OcLyM9zkZ9rkJ/lKPz8r+bBhZgHgyh5UAzzYDMlD77HPKhIyYPdmAddKHnw
OebBUkoezMU8OJOSB+MwD5pjHtyBedAF8+BLzINLMQ+qYh48TMmDXMyDHzAP
9mAeTMY8OAfzYDnmwceYB9dT8qAO5kEbSh78Wr9RSek38rDfMKb0G7ux3+il
9Bt92G+4UvqNM9hvCFP6jTnYb0RQ+o0U7DcUKf3GRuw3cij9RhP2G1sp/YYD
9hv1lH5jCvYb1pR+4yb2G+8p/cb32G+cp/Qb1dhvzKX0G/9tvdb/6vxpoPu7
F7I8KPSrcPddQM79a0/Jvl/Fg8BZWg8Xqf7D+eCE3vwtHPgwDTZ1aZN6EzdI
Kg5R48C+t+a1cZLkvBqfX/Abn1+Fz39Lef4fvYeZeP89lPtLeOv2J2rwIEH6
ad42TfK8Y/3WCF8aF2KKt9xWDi376vnjeP4G5XxnGW96hjYPpqbT5ySs+f33
vxV27aSHKRdagveyHALKvno+Fs+3U87/1vv8FbG6K5M=
        "]], 
      StyleBox[
       InsetBox["\<\"A.Dargys and A.Acus, \\\"Multivector \
handbook\\\"\\!\\(\\*\\nStyleBox[\\\" \\\",\\nFontSlant->\\\"Italic\\\"]\\)\"\
\>", {0, 0.2}, {-1.25, 1.5}],
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->20,
       FontWeight->Bold], 
      StyleBox[InsetBox["\<\"electronic supplement\"\>", {0, 0.2}, {-9, 4}],
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->18,
       FontWeight->Bold]},
     AspectRatio->NCache[
       Rational[1, 15], 0.06666666666666667],
     AxesLabel->{None, None},
     DisplayFunction->Identity,
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImageSize->{1400, 140},
     Method->{
      "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "ScalingFunctions" -> None},
     PlotRange->{{0.02, 0.6}, {-0.5, 0.5}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}},
     Ticks->{Automatic, Automatic},
     ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsfXecHcWVddPd1eH1i5M0o4yQAElkyYADSMbZOJCzpCFng3Fa2yCEI044
4ARGEsbY4Gyvs0EawOSco6Rx2HUkCiUwqL57bnXf7nrTbyQBu98/q9+vSq+r
c033Offce6v6nUe//6TjTz/6/Scfe/Tkt5x19JknnXzs+ya/+YyzqMnbynHC
fR3HuWqy49NvTT+3rDrAcf5vy//b8v+2/L8t/2/L/40tp3GD1vdM/gQq+nV3
ofLTX3eZaiGqbQs7ni37hLJlgOp8re+cTGvvnERtd0wKUNGv2/Hrdvy6bdJs
VHtisXjE1+CIR+Ngf8NxJuE478FxvoBD/BWbX4AdG1rfOukcqibSdrdMpLU3
T/yi1jdNPBq/ikcchyOegiMulCMuwBFn44gLccSFOOIROOJUHHEhjrgQx1mI
I1J14wSqbkB1/YQPav2HCSfiV/EsCmeZh7PMlbPsh7OcibPMwlnOwFmaOMsC
nOUMnGU2znIGznIGznIGzjILxz4aZ6Gb/MN4uvvrxtNRrh1PK64ZP1/rIVTX
jK/jV/Ea3ozTv1lO34PTHy2nH5TT74fTz8bpB3H6QZx+Fk5/tJx+fzn9IE4/
G6cfxEl7cdJ9qRpHbcvHUduycbTH1ePoD3vVOPpzXjU2wq/Z0rYH2oqXuTsu
89X8KMll8t9if1wmPxY7yt9if1zmLFzm/rhMx6PrnIhrRXF2Rb2/XPUb5Kpn
4ar3x1XPlqt+Ha56Fq76APuq98UV0na/H0t7/G7sDK1/OzamaoAu4zcDNfyq
S9tstFH//nqgeE/b4p5m456m4p565Z72wT3Nkq7ne9pH7ukN0vX74CZm4yZm
2Texj30Tk3ATr8dNTMZN0HM3/N1+nb7UXIYu6HEq6bpF82vSPrnf49Z95L53
wn3vg/uejfve077HfXCP9OtXA2O1/uXAAFX9dAm/6O/Gr9n49Sqt/7O/2A19
6IZZ6IbJ8qedJU9gWzfwE7gbumF2yZ92F9Sz5U87VXplNnpllrwPfeiVifKn
nY173M2+RYVbRE99Z4zdU5/rRk/ROl8vmlfoqTHeODTPQq/MRK9E6JVZ6JVZ
0ivj0St90he7oS/o18/76Vn5Wf80qsZQ20/HUNtPxtDGPx5T7CnGyxn2u7o9
empnu6e6paf4gdkGPTUbXbMbumaqdE0TXbMjuma6dA0/MD3omh2la7aRrtlR
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
yJfZbQp2G5Cv5gP+EsCfC/ir6PXAwPWw4AgDY2BgoNcBCNe9lzBw3Zm0cYaB
VWCgCwyM9drTk0SvPQ1hxjWnJXrNqVzITqG6qdecklD7yUmNqkpDrzmpQm0n
ojqh4uo1x1faPH53YrjGncDKO1DdDlNxBH72dMLPOuoeOxbM+DlG8LMJ/AyB
n1Xb99dv42cT+NlV4vsbEPzkrMsI+NkCfo4pCYk0JD+xBvxMSjItWuIF7AeS
tjgO6WV+O3a4haiRNoB8w++h+i6qy5EIiwjbxsuQl3hZzwAwtQVMTUygf+MS
GJdLuhEhg6flku5qiZQiW8lPm4tmkwHfi9ub52yrsmb62XaQi7tZRtkYCNtr
1adaudlVh+OnYHb5rMNgNaEQEmbNluvoHTHbXiz47Nd7+Vk1x09tLxypAF6q
xCQz+PENyENCQxsojHXWCfJgaLkpSsL4KqCVy0joA/HawDOVfzC/z6gxyKWF
0dAYXiHbaMVTwRAjA0yvPK8B2LwQFtdXSiDPT5uxbWFfN0VCQj7rsARQwOIv
8ymPbLt52hZouPCteWh9+Wk12HzsbXO59tsBL2sG9kmHTPUNPNpbEwT63Bzi
p3XyzJCcs01uF9PvzLjksuyUqtjF9Bs4KiXfz9PzXxVw24qP1OVGlp1cBeSi
AJ0/z+jcyh+v+bPpRgiOs+0XvinCIgq2/yy2nzPFL27vpc3Fwyx8YwRDl01e
wu3RrN2k3dolaEdx2PmYAOQTgHxNnI81OB9p24WE5f8+Bxrh32fXYO2iOFxX
IdgTCPYqMD8B5lcA965Yu03AfRPWLlXvI+Anme4D7hOYvHQ/ZPPC5M0Km74J
YJ9OSLiv15pCVvlaWMJrYQkTAdCvU5NQrz2FKoJ9QvdTgPMnVxLAvgLsh/rZ
E2nx2RMqdKhnj6/o1abQoaiu6dXH0R6rj63QRaw+pqKfyUuVqripnzka1SBB
zTML4iJ1uGJ659TRAnUoUEfDjhMxdbTAFS1wRavEn9pjcwUcDHArLIczoRgn
6gVXtMAVLXBF3fYt5OHzxOaKFriiJZnzXeJb6BWu4GRZOFX7qmCIGhiiKr4F
xG36xoAXeuFbqAglxKAEJFiAA4pm9gAooQFKiEEJbAknoIQKsF8BpQPECSuI
EzrskTc5E4SfMde+BZcEbqV2JIxU01y0Iw1Cfr38INxsCdI9Q7ekWQ7iZbJX
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
d8rIxaY92CmR7JR17JTdbsabd8oadsqau1N2e/JHq9gp67JTGJtGskkYltaw
SUDvtIe4hk2yKgmjWA9FeQ47hRzEHFtjB7bGOrbGmviFM5fjWb+wwNZAETtt
A9oaM2yNmeyKURuVm2JXzLArxm0anTHOM2ySieS5LRgpieC0gtHY4zCWrsPI
YDTCJomxSabYJCH2yARbY4atMcPWGGFrKA1B33wfbaZvvhfam58ZJfMT4Hgn
gEMn/gVO78HJ7IoSu6IA+MTYFSV2RYJdQXQMie1j8BUJaCbzo++kTXIUW+Po
DfTEUYDMUYAM7Yox8CUCvuTYFaVnV+RmV1xTNCQddRRYw9pex9pOZW2vYm2v
uWt7TdY2K3pTrO11QQHrd5Wytvdgba951vaqiwLrWNvrWNvrWNsjWdsrggLr
EsSwa3uXCNPoic/uyYT9rGOBr4vftSqpCm7asIIFviqD7NYBAusITO5ApwY4
WshV/DYfQV55YDo6OcMqn2GVzyQ6mcoqH7tCjplr+6euj8WrvOiU8LLLNfNA
QcPlGrVBwUiggGOUU4ECjl/MXJcrNt2lPzTmmGSs5brfxFL/JgjSN2/CCbMQ
vvlecsNoqU+x1GcAgFADwAnkRk8wLTpONOn4T/ER8JlOwAOCgpkLBVNAwQhQ
wN5VDigIAQUKUKCw6JttSB7cjyWMAzUyD+zPXZfGLuYpFvMuLOZ116VZx2Je
xWJewWJGzyks4Q0uDWfg9mAxr2Mxr7uLmUnETqHyiSzmNVnMpVB5SyLsYt6J
xbxLEv3rsph3ymJew2JeqeYz3r5b5jNOxG6zc7OOZb2GFT3Fip5gRU+wokMs
6GnVaeq3V6XT1ATnmbusJ9J8pGG8p2K8Zx6Xho33xDXeUafxth7ORIw3ezgz
WdbTNuM9c5f1TJhEpI3332Nt//2HcYKb8/cfIq+HlvUMy3oqxrvUvWtpWY/d
ZT2TZT2VhJzCsp7AghNj/ylas5UFb7jXD+6ftllXzA/dtwMLcl0W5JpHOrdb
1ufJneuzlFDTWtv6PBnrc61tfZ7sOhK8PtexPtewPpWsTza2667LzST3ZDG2
U6xPqOawAm/HWjSrkgVz6IRGrkJFcqc6C0RLkwerzTxN0MY4r3gsbikkdyp5
Yc4HsXOxQ+LEmLOGHJFZnw1qa9bnP/7Kyg7PgmQ7W4g3wQtyKguS1tjPYwUa
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
A0xbv/I=\
\>"]]},
   {
    RowBox[{
     ButtonBox[
      RowBox[{"Previous", " ", "notebook"}],
      Appearance->{Automatic, "DialogBox"},
      BaseStyle->"Hyperlink",
      ButtonData:>{"11_LinearTransformations.nb", None},
      ButtonNote->"Previous notebook"], "\t\t", 
     ButtonBox["Content",
      Appearance->{Automatic, "DialogBox"},
      BaseStyle->"Hyperlink",
      ButtonData:>{"00_Content.nb", None},
      ButtonNote->"Multivector handbook"], "\t\t", 
     ButtonBox[
      RowBox[{"Next", " ", "notebook"}],
      Appearance->{Automatic, "DialogBox"},
      BaseStyle->"Hyperlink",
      ButtonData:>{"13_CoordinateSystems.nb", None},
      ButtonNote->"Next notebook"]}]}
  },
  GridBoxItemSize->{
   "Columns" -> {{All}}, "ColumnsIndexed" -> {}, "Rows" -> {{0}}, 
    "RowsIndexed" -> {}},
  GridBoxSpacings->{"Columns" -> {
      Offset[0.27999999999999997`], {
       Offset[0.5599999999999999]}, 
      Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
      Offset[0.2], {
       Offset[-0.8]}, 
      Offset[0.2]}, "RowsIndexed" -> {}}]],
 Editable->False,
 PageWidth->DirectedInfinity[1],
 ShowCellBracket->True,
 CellMargins->{{-30, 0}, {0, 0}},
 Deployed->True,
 GeneratedCell->True,
 CellAutoOverwrite->True,
 ShowCellLabel->False,
 CellChangeTimes->{3.674888404214503*^9},
 FontFamily->"Verdana",
 FontSize->14,
 Background->RGBColor[
  0.9882352941176471, 0.7725490196078432, 
   1.],ExpressionUUID->"4d2653ff-482c-4210-80ab-abe83adb06f6"],

Cell[CellGroupData[{

Cell[TextData[{
 "1. Introduction to Clifford algebra calculus operations (",
 StyleBox["will change significantly",
  FontColor->RGBColor[1, 0, 0]],
 ")"
}], "Section",ExpressionUUID->"12e3f015-6a95-4081-999c-690d7638afc6"],

Cell[TextData[{
 "Version ",
 StyleBox["(2023-11-04)",
  FontSize->16],
 " "
}], "Text",ExpressionUUID->"7aeb1ba3-38a1-4e81-882b-de2ba4d7a620"],

Cell[CellGroupData[{

Cell["Load main notebook", "Subsection",
 CellChangeTimes->{{3.673769332785334*^9, 
  3.673769364045045*^9}},ExpressionUUID->"0f6ffdb4-291c-414d-bef4-\
8be88320e9ec"],

Cell[TextData[{
 "Load package. ",
 StyleBox["WAIT",
  FontWeight->"Bold"],
 " until evaluation of cell is finished to be sure that no errors were \
produced."
}], "Text",
 CellChangeTimes->{{3.673769371013993*^9, 3.673769372484621*^9}, {
  3.674660788617659*^9, 3.674660794168119*^9}, {3.681017989424097*^9, 
  3.681018049612899*^9}},ExpressionUUID->"2af2f46b-a932-4178-a424-\
d9202a6684a1"],

Cell[BoxData[
 RowBox[{"NotebookEvaluate", "[", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ParentDirectory", "[", 
      RowBox[{"NotebookDirectory", "[", 
       RowBox[{"EvaluationNotebook", "[", "]"}], "]"}], "]"}], ",", 
     "\"\<GA.nb\>\""}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.673770020900804*^9, 3.673770052959599*^9}, {
   3.67377255744574*^9, 3.673772560984225*^9}, {3.673772957194665*^9, 
   3.673772964956344*^9}, {3.673773010571767*^9, 3.673773014511329*^9}, {
   3.673834864366583*^9, 3.673834875805387*^9}, {3.6755759491498175`*^9, 
   3.6755760152374797`*^9}, {3.736246092415019*^9, 3.736246093168438*^9}, 
   3.750330997042767*^9, 3.750337192359868*^9, {3.7621497056275167`*^9, 
   3.762149706871374*^9}, {3.767611544913014*^9, 3.7676115463165293`*^9}, {
   3.7757868119144077`*^9, 3.775786812920247*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"65da44db-a4b4-4f2c-be27-ce3928fb520f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["First steps for calculus", "Subsection",ExpressionUUID->"8ef18f9a-720f-4412-86dd-c009466c60a7"],

Cell[TextData[{
 "Calculus requires proper Clifford algebra along with corresponding \
orthonormal basis to be specified. We have to choose algebra which is \
compatible with manifold parametrization we want to parametrize (explicit \
surface/coordinate system parametrization is required). For example we want \
to work on surface in Euclidean 3D, we have to choose ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["C", "TI"], 
         SubscriptBox[
          StyleBox["l", "TI"], 
          RowBox[{"3", ",", "0"}]]}], TraditionalForm], "errors" -> {}, 
     "input" -> "Cl_{3,0}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "00bb56d4-c7a0-4b24-a73b-90fc3305cd55"],
 " algebra."
}], "Text",ExpressionUUID->"1bcd8f16-71fc-4bab-b0c5-bd489a41a9e5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testAlgebra", "=", 
   RowBox[{"Cl", "[", 
    RowBox[{"3", ",", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"gaDefineOrthonormalBasis", "[", "testAlgebra", "]"}]}], "Input",
 CellChangeTimes->{{3.798447197254615*^9, 3.7984472105617657`*^9}, {
  3.7984479559764967`*^9, 3.7984479568666763`*^9}, {3.849247979099585*^9, 
  3.8492479817617817`*^9}, {3.849249743776145*^9, 3.8492497588922853`*^9}, {
  3.8496853858768463`*^9, 3.849685396768197*^9}, {3.849685441120096*^9, 
  3.849685486785718*^9}, {3.849690695944079*^9, 3.849690724433175*^9}, {
  3.851143182385306*^9, 3.8511431901861877`*^9}, {3.8521915700500517`*^9, 
  3.852191575988068*^9}, {3.852191647248097*^9, 3.8521916512154903`*^9}, {
  3.8762159820998993`*^9, 3.876215982984215*^9}, {3.876889919214703*^9, 
  3.8768899201511517`*^9}, {3.8768900564989967`*^9, 3.876890057300804*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"67d2764e-7520-4278-8fed-45e09373adcd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Basis vectors are stored in \"\>",
   "EchoLabel"], "  ", 
  TagBox[
   RowBox[{"gaOrthonormalBasis", "[", 
    RowBox[{
     TemplateBox[{"3", "0", "0"},
      "Cl",
      DisplayFunction->(SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ),
      Tooltip->None], ",", "\<\"InvDeg[Lex]\"\>"}], "]"}],
   HoldForm]}]], "Echo",ExpressionUUID->"2d658779-bbef-4b96-b323-\
5b32e2784a16"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Running algebra is: gaRunningAlgebra=\"\>",
   "EchoLabel"], "  ", 
  TemplateBox[{"3", "0", "0"},
   "Cl",
   DisplayFunction->(SubscriptBox[
     StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
     RowBox[{#, ",", #2}]]& ),
   Tooltip->None]}]], "Echo",ExpressionUUID->"ceaf95b7-d04d-4863-bdd0-\
8146138362af"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   TemplateBox[{
     TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
        RowBox[{
          AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
        FontTracking -> "Condensed", AutoSpacing -> False]& ), 
      InterpretationFunction :> (ReleaseHold[
        RowBox[{"mvDownUp", "@@", 
          MakeExpression[{
            Take[{
              SlotSequence[1]}, 
             Length[{1}]], 
            Take[{
              SlotSequence[1]}, {Length[{1}] + 1, 
              Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
      Tooltip -> "mvDownUp[{1}, {}]"], 
     TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
    "\[DoubleStruckE]",
    DisplayFunction:>(StyleBox[
      RowBox[{
        StyleBox["\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
      AutoSpacing -> False, FontTracking -> "Condensed"]& ),
    InterpretationFunction:>(
     RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
    SyntaxForm->"fish",
    Tooltip->"Cl[3, 0, 0]"], ",", 
   TemplateBox[{
     TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
        RowBox[{
          AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
        FontTracking -> "Condensed", AutoSpacing -> False]& ), 
      InterpretationFunction :> (ReleaseHold[
        RowBox[{"mvDownUp", "@@", 
          MakeExpression[{
            Take[{
              SlotSequence[1]}, 
             Length[{2}]], 
            Take[{
              SlotSequence[1]}, {Length[{2}] + 1, 
              Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
      Tooltip -> "mvDownUp[{2}, {}]"], 
     TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
    "\[DoubleStruckE]",
    DisplayFunction:>(StyleBox[
      RowBox[{
        StyleBox["\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
      AutoSpacing -> False, FontTracking -> "Condensed"]& ),
    InterpretationFunction:>(
     RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
    SyntaxForm->"fish",
    Tooltip->"Cl[3, 0, 0]"], ",", 
   TemplateBox[{
     TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
        RowBox[{
          AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
        FontTracking -> "Condensed", AutoSpacing -> False]& ), 
      InterpretationFunction :> (ReleaseHold[
        RowBox[{"mvDownUp", "@@", 
          MakeExpression[{
            Take[{
              SlotSequence[1]}, 
             Length[{3}]], 
            Take[{
              SlotSequence[1]}, {Length[{3}] + 1, 
              Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
      Tooltip -> "mvDownUp[{3}, {}]"], 
     TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
    "\[DoubleStruckE]",
    DisplayFunction:>(StyleBox[
      RowBox[{
        StyleBox["\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
      AutoSpacing -> False, FontTracking -> "Condensed"]& ),
    InterpretationFunction:>(
     RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
    SyntaxForm->"fish",
    Tooltip->"Cl[3, 0, 0]"], ",", 
   TemplateBox[{
     TemplateBox[{"1", "2"}, "mvDownUp", DisplayFunction :> (StyleBox[
        RowBox[{
          AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
          AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> Small, 
        FontTracking -> "Condensed", AutoSpacing -> False]& ), 
      InterpretationFunction :> (ReleaseHold[
        RowBox[{"mvDownUp", "@@", 
          MakeExpression[{
            Take[{
              SlotSequence[1]}, 
             Length[{1, 2}]], 
            Take[{
              SlotSequence[1]}, {Length[{1, 2}] + 1, 
              Length[{1, 2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
      Tooltip -> "mvDownUp[{1, 2}, {}]"], 
     TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
    "\[DoubleStruckE]",
    DisplayFunction:>(StyleBox[
      RowBox[{
        StyleBox["\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
      AutoSpacing -> False, FontTracking -> "Condensed"]& ),
    InterpretationFunction:>(
     RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
    SyntaxForm->"fish",
    Tooltip->"Cl[3, 0, 0]"], ",", 
   TemplateBox[{
     TemplateBox[{"1", "3"}, "mvDownUp", DisplayFunction :> (StyleBox[
        RowBox[{
          AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
          AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> Small, 
        FontTracking -> "Condensed", AutoSpacing -> False]& ), 
      InterpretationFunction :> (ReleaseHold[
        RowBox[{"mvDownUp", "@@", 
          MakeExpression[{
            Take[{
              SlotSequence[1]}, 
             Length[{1, 3}]], 
            Take[{
              SlotSequence[1]}, {Length[{1, 3}] + 1, 
              Length[{1, 3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
      Tooltip -> "mvDownUp[{1, 3}, {}]"], 
     TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
    "\[DoubleStruckE]",
    DisplayFunction:>(StyleBox[
      RowBox[{
        StyleBox["\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
      AutoSpacing -> False, FontTracking -> "Condensed"]& ),
    InterpretationFunction:>(
     RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
    SyntaxForm->"fish",
    Tooltip->"Cl[3, 0, 0]"], ",", 
   TemplateBox[{
     TemplateBox[{"2", "3"}, "mvDownUp", DisplayFunction :> (StyleBox[
        RowBox[{
          AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
          AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> Small, 
        FontTracking -> "Condensed", AutoSpacing -> False]& ), 
      InterpretationFunction :> (ReleaseHold[
        RowBox[{"mvDownUp", "@@", 
          MakeExpression[{
            Take[{
              SlotSequence[1]}, 
             Length[{2, 3}]], 
            Take[{
              SlotSequence[1]}, {Length[{2, 3}] + 1, 
              Length[{2, 3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
      Tooltip -> "mvDownUp[{2, 3}, {}]"], 
     TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
    "\[DoubleStruckE]",
    DisplayFunction:>(StyleBox[
      RowBox[{
        StyleBox["\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
      AutoSpacing -> False, FontTracking -> "Condensed"]& ),
    InterpretationFunction:>(
     RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
    SyntaxForm->"fish",
    Tooltip->"Cl[3, 0, 0]"], ",", 
   TemplateBox[{
     TemplateBox[{"1", "2", "3"}, "mvDownUp", DisplayFunction :> (StyleBox[
        RowBox[{
          AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
          AdjustmentBox[#2, BoxBaselineShift -> 1], ",", 
          AdjustmentBox[#3, BoxBaselineShift -> 1]}], FontSize -> Small, 
        FontTracking -> "Condensed", AutoSpacing -> False]& ), 
      InterpretationFunction :> (ReleaseHold[
        RowBox[{"mvDownUp", "@@", 
          MakeExpression[{
            Take[{
              SlotSequence[1]}, 
             Length[{1, 2, 3}]], 
            Take[{
              SlotSequence[1]}, {Length[{1, 2, 3}] + 1, 
              Length[{1, 2, 3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
       Tooltip -> "mvDownUp[{1, 2, 3}, {}]"], 
     TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
    "\[DoubleStruckE]",
    DisplayFunction:>(StyleBox[
      RowBox[{
        StyleBox["\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
      AutoSpacing -> False, FontTracking -> "Condensed"]& ),
    InterpretationFunction:>(
     RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
    SyntaxForm->"fish",
    Tooltip->"Cl[3, 0, 0]"]}], "}"}]], "Output",
 CellLabel->"Out[3]=",ExpressionUUID->"47d1eb78-2856-4676-aa94-8e0bcd1b15fe"]
}, Open  ]],

Cell["\<\
Next step is to provide parametrization the manifold itself. As a first \
example, let\[CloseCurlyQuote]s choose saddle surface, parametrized by \
\>", "Text",ExpressionUUID->"338f73ef-6ae3-4db7-b71f-3e809b1e1297"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gaDefinePositionVector", "[", 
  RowBox[{"\"\<Saddle\>\"", ",", 
   RowBox[{"Piecewise", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"u", "\[GeometricProduct]", 
          RowBox[{"\[DoubleStruckE]", "[", "1", "]"}]}], "+", 
         RowBox[{"v", "\[GeometricProduct]", 
          RowBox[{"\[DoubleStruckE]", "[", "2", "]"}]}], "+", 
         RowBox[{"u", "\[GeometricProduct]", "v", "\[GeometricProduct]", 
          RowBox[{"\[DoubleStruckE]", "[", "3", "]"}]}]}], ",", 
        RowBox[{"Element", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"u", ",", "v"}], "}"}], ",", "Reals"}], "]"}]}], "}"}], 
      "}"}], ",", "$Failed"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "v"}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"Simplify", "->", "FullSimplify"}], ",", 
   RowBox[{"Quiet", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.875695196510495*^9, 3.87569519910124*^9}, 
   3.8756953743834352`*^9, {3.875695443334181*^9, 3.875695464185605*^9}, {
   3.875696676070529*^9, 3.875696682380587*^9}, {3.875697919344063*^9, 
   3.8756979208858557`*^9}, {3.875698769613315*^9, 3.875698773707685*^9}, {
   3.875699493007145*^9, 3.87569951901729*^9}, 3.875699934375698*^9, {
   3.876215992974568*^9, 3.876216170400057*^9}, {3.87621621909278*^9, 
   3.876216221349428*^9}, {3.876889926671273*^9, 3.876890165816999*^9}, 
   3.876890197547408*^9, {3.8768902542201147`*^9, 3.8768902652118263`*^9}, {
   3.876890336856797*^9, 3.8768903532159653`*^9}, {3.877168952183505*^9, 
   3.877168958410149*^9}, {3.877769824291103*^9, 3.877770010631237*^9}, {
   3.8873400082591763`*^9, 3.887340012959363*^9}, {3.888376688104051*^9, 
   3.888376698673712*^9}, {3.8883856980388308`*^9, 3.88838571266171*^9}, 
   3.8883857445361547`*^9, {3.888467127918911*^9, 3.888467131359537*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"3b55591c-57b4-4017-8cf1-fc41270614be"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ManifoldName\"\>", "\[Rule]", "\<\"Saddle\"\>"}], ",", 
   RowBox[{"\<\"GA\"\>", "\[Rule]", 
    TemplateBox[{"3", "0", "0"},
     "Cl",
     DisplayFunction->(SubscriptBox[
       StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
       RowBox[{#, ",", #2}]]& ),
     Tooltip->None]}], ",", 
   RowBox[{"\<\"Dimension\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"Patches\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"gaRunningPatch\"\>", "\[Rule]", "\<\"Patch1\"\>"}], ",", 
   RowBox[{"\<\"ParameterRangeAssumptions\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"Parameters\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"StandardCoordinateNames\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v"}], "}"}]}], ",", 
   RowBox[{"\<\"Patch1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"PointVector\"\>", "\[Rule]", 
       RowBox[{
        RowBox[{"u", " ", 
         TemplateBox[{
           TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
              RowBox[{
                AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
              FontTracking -> "Condensed", AutoSpacing -> False]& ), 
            InterpretationFunction :> (ReleaseHold[
              RowBox[{"mvDownUp", "@@", 
                MakeExpression[{
                  Take[{
                    SlotSequence[1]}, 
                   Length[{1}]], 
                  Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
             Tooltip -> "mvDownUp[{1}, {}]"], 
           TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
              StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
              RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
          "\[DoubleStruckE]",
          DisplayFunction:>(StyleBox[
            RowBox[{
              StyleBox[
              "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
            AutoSpacing -> False, FontTracking -> "Condensed"]& ),
          
          InterpretationFunction:>(
           RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
          SyntaxForm->"fish",
          Tooltip->"Cl[3, 0, 0]"]}], "+", 
        RowBox[{"v", " ", 
         TemplateBox[{
           TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
              RowBox[{
                AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
              FontTracking -> "Condensed", AutoSpacing -> False]& ), 
            InterpretationFunction :> (ReleaseHold[
              RowBox[{"mvDownUp", "@@", 
                MakeExpression[{
                  Take[{
                    SlotSequence[1]}, 
                   Length[{2}]], 
                  Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
             Tooltip -> "mvDownUp[{2}, {}]"], 
           TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
              StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
              RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
          "\[DoubleStruckE]",
          DisplayFunction:>(StyleBox[
            RowBox[{
              StyleBox[
              "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
            AutoSpacing -> False, FontTracking -> "Condensed"]& ),
          
          InterpretationFunction:>(
           RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
          SyntaxForm->"fish",
          Tooltip->"Cl[3, 0, 0]"]}], "+", 
        RowBox[{"u", " ", "v", " ", 
         TemplateBox[{
           TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
              RowBox[{
                AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
              FontTracking -> "Condensed", AutoSpacing -> False]& ), 
            InterpretationFunction :> (ReleaseHold[
              RowBox[{"mvDownUp", "@@", 
                MakeExpression[{
                  Take[{
                    SlotSequence[1]}, 
                   Length[{3}]], 
                  Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
             Tooltip -> "mvDownUp[{3}, {}]"], 
           TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
              StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
              RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
          "\[DoubleStruckE]",
          DisplayFunction:>(StyleBox[
            RowBox[{
              StyleBox[
              "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
            AutoSpacing -> False, FontTracking -> "Condensed"]& ),
          
          InterpretationFunction:>(
           RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
          SyntaxForm->"fish",
          Tooltip->"Cl[3, 0, 0]"]}]}]}], ",", 
      RowBox[{"\<\"CoordinateRangeAssumptions\"\>", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"u", "|", "v"}], ")"}], "\[Element]", 
        TemplateBox[{},
         "Reals"]}]}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[4]=",ExpressionUUID->"aee03146-456f-473c-b7e7-c9c05656bc0c"]
}, Open  ]],

Cell["\<\
When surface is parametrized,  we can define coordinate system on that surface\
\>", "Text",ExpressionUUID->"7acdb459-2f17-483a-9445-7ba18b025001"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gaDefineCoordinateChart", "[", 
  RowBox[{"\"\<SaddleSurfaceCS\>\"", ",", 
   RowBox[{"gaPositionVector", "[", "\"\<Saddle\>\"", "]"}]}], "]"}]], "Input",\

 CellLabel->"In[37]:=",ExpressionUUID->"946ce42b-03af-4ce2-8921-43477022457c"],

Cell[BoxData[
 TemplateBox[{
  "gaDefineCoordinateChart", "dimension", 
   "\"Info. Length of variable list \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"u\
\\\", \\\",\\\", \\\"v\\\"}], \\\"}\\\"}]\\) does not match the geometric \
algebra \\!\\(\\*TemplateBox[List[\\\"3\\\", \\\"0\\\", \\\"0\\\"], \
\\\"Cl\\\", Rule[DisplayFunction, Function[SubscriptBox[StyleBox[\\\"Cl\\\", \
List[Rule[FontColor, RGBColor[0.`, 0.`, 1.`]]]], RowBox[List[Slot[1], \\\",\\\
\", Slot[2]]]]]], Rule[Tooltip, None]]\\) dimension. Assuming surface in a \
higher dimension space, setting flag surfaceCase=True.\"", 2, 37, 16, 
   17040064863631212018, "Local", "GeometricAlgebra`gaDefineCoordinateChart"},
  
  "MessageTemplate2"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"34d2bba9-5254-42c8-99e2-82c16ef103df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Computing the property:\"\>",
   "EchoLabel"], "  ", "\<\"PrimaryVectors\"\>"}]], "Echo",ExpressionUUID->\
"07177e89-a8c2-4895-8138-51de4755c744"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Computing and simplifying the property:\"\>",
   "EchoLabel"], "  ", "\<\"Metric\"\>"}]], "Echo",ExpressionUUID->"703bb24f-\
97d5-4eb7-8720-2535d9e81ee9"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Computing and simplifying the property:\"\>",
   "EchoLabel"], "  ", "\<\"ScaleFactors\"\>"}]], "Echo",ExpressionUUID->\
"a4ad1ccc-5d04-4d49-a636-48b3ba4a225f"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Computing the property:\"\>",
   "EchoLabel"], "  ", "\<\"InverseMetric\"\>"}]], "Echo",ExpressionUUID->\
"6e011c4f-61d4-4126-bccd-69351ac70776"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Computing the property:\"\>",
   "EchoLabel"], "  ", "\<\"ReciprocalVectors\"\>"}]], "Echo",ExpressionUUID->\
"393dba14-8588-4957-84b4-a4ee82769c65"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Computing and simplifying the property:\"\>",
   "EchoLabel"], "  ", "\<\"FullBasis\"\>"}]], "Echo",ExpressionUUID->\
"a14c1e52-08a5-4846-9177-59ed58390d0f"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Computing the property:\"\>",
   "EchoLabel"], "  ", "\<\"ToBasisElementRules\"\>"}]], "Echo",ExpressionUUID\
->"f1738ed1-b992-421d-b77d-bb550ebf0bc5"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Applying simplify function in ToBasisElementRules:\"\>",
   "EchoLabel"], "  ", "Identity"}]], "Echo",ExpressionUUID->"3cfd7b61-4c2b-\
4c64-a58f-ff30cf614191"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Computing normal to the surface in outer space:\"\>",
   "EchoLabel"], "  ", "\<\"NormalToSurface\"\>"}]], "Echo",ExpressionUUID->\
"1e7f2864-7e8c-4894-9476-aea7f338543d"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "gaNormalize", "symbolic", 
   "\"Warning. Symbolic answer. Will remove Abs[] from final rezult.\"", 2, 
   37, 17, 17040064863631212018, "Local", "GeometricAlgebra`gaNormalize"},
  "MessageTemplate2"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"6937165b-6464-4e3f-b55b-df79e61ad88f"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Computing all symmetric (torsion free) Christoffel symbols of \
the second kind: \"\>",
   "EchoLabel"], "  ", "\<\"ChristoffelSymbolsOfSecondKind\"\>"}]], "Echo",Exp\
ressionUUID->"27c574b1-43aa-47a9-81ba-1d182112a3f2"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ChartName\"\>", "\[Rule]", "\<\"SaddleSurfaceCS\"\>"}], ",", 
   RowBox[{"\<\"ManifoldName\"\>", "\[Rule]", "\<\"Saddle\"\>"}], ",", 
   RowBox[{"\<\"GA\"\>", "\[Rule]", 
    TemplateBox[{"3", "0", "0"},
     "Cl",
     DisplayFunction->(SubscriptBox[
       StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
       RowBox[{#, ",", #2}]]& ),
     Tooltip->None]}], ",", 
   RowBox[{"\<\"Dimension\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"Patches\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"gaRunningPatch\"\>", "\[Rule]", "\<\"Patch1\"\>"}], ",", 
   RowBox[{"\<\"ParameterRangeAssumptions\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"Parameters\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"StandardCoordinateNames\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v"}], "}"}]}], ",", 
   RowBox[{"\<\"Patch1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"PointVector\"\>", "\[Rule]", 
       RowBox[{
        RowBox[{"u", " ", 
         TemplateBox[{
           TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
              RowBox[{
                AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
              FontTracking -> "Condensed", AutoSpacing -> False]& ), 
            InterpretationFunction :> (ReleaseHold[
              RowBox[{"mvDownUp", "@@", 
                MakeExpression[{
                  Take[{
                    SlotSequence[1]}, 
                   Length[{1}]], 
                  Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
             Tooltip -> "mvDownUp[{1}, {}]"], 
           TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
              StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
              RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
          "\[DoubleStruckE]",
          DisplayFunction:>(StyleBox[
            RowBox[{
              StyleBox[
              "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
            AutoSpacing -> False, FontTracking -> "Condensed"]& ),
          
          InterpretationFunction:>(
           RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
          SyntaxForm->"fish",
          Tooltip->"Cl[3, 0, 0]"]}], "+", 
        RowBox[{"v", " ", 
         TemplateBox[{
           TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
              RowBox[{
                AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
              FontTracking -> "Condensed", AutoSpacing -> False]& ), 
            InterpretationFunction :> (ReleaseHold[
              RowBox[{"mvDownUp", "@@", 
                MakeExpression[{
                  Take[{
                    SlotSequence[1]}, 
                   Length[{2}]], 
                  Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
             Tooltip -> "mvDownUp[{2}, {}]"], 
           TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
              StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
              RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
          "\[DoubleStruckE]",
          DisplayFunction:>(StyleBox[
            RowBox[{
              StyleBox[
              "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
            AutoSpacing -> False, FontTracking -> "Condensed"]& ),
          
          InterpretationFunction:>(
           RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
          SyntaxForm->"fish",
          Tooltip->"Cl[3, 0, 0]"]}], "+", 
        RowBox[{"u", " ", "v", " ", 
         TemplateBox[{
           TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
              RowBox[{
                AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
              FontTracking -> "Condensed", AutoSpacing -> False]& ), 
            InterpretationFunction :> (ReleaseHold[
              RowBox[{"mvDownUp", "@@", 
                MakeExpression[{
                  Take[{
                    SlotSequence[1]}, 
                   Length[{3}]], 
                  Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
             Tooltip -> "mvDownUp[{3}, {}]"], 
           TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
              StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
              RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
          "\[DoubleStruckE]",
          DisplayFunction:>(StyleBox[
            RowBox[{
              StyleBox[
              "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
            AutoSpacing -> False, FontTracking -> "Condensed"]& ),
          
          InterpretationFunction:>(
           RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
          SyntaxForm->"fish",
          Tooltip->"Cl[3, 0, 0]"]}]}]}], ",", 
      RowBox[{"\<\"CoordinateRangeAssumptions\"\>", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"u", "|", "v"}], ")"}], "\[Element]", 
        TemplateBox[{},
         "Reals"]}]}], ",", 
      RowBox[{"\<\"PrimaryVectors\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{
            TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
               RowBox[{
                 AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small,
                FontTracking -> "Condensed", AutoSpacing -> False]& ), 
             InterpretationFunction :> (ReleaseHold[
               RowBox[{"mvDownUp", "@@", 
                 MakeExpression[{
                   Take[{
                    SlotSequence[1]}, 
                    Length[{1}]], 
                   Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
              Tooltip -> "mvDownUp[{1}, {}]"], 
            
            TemplateBox[{"3", "0", "0"}, "Cl", 
             DisplayFunction -> (SubscriptBox[
               StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
               RowBox[{#, ",", #2}]]& ), Tooltip -> None], 
            "\"SaddleSurfaceCS\"", 
            
            TemplateBox[{"u", "v"}, "mvPoint", 
             InterpretationFunction -> (RowBox[{"mvPoint", "[", 
                RowBox[{"{", 
                  RowBox[{
                    TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
             DisplayFunction -> (RowBox[{
                TemplateSlotSequence[1, ","]}]& ), Tooltip -> 
             "SaddleSurfaceCS"]},
           "\[DoubleStruckE]",
           DisplayFunction:>(StyleBox[
             RowBox[{
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               
               RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
             "Condensed"]& ),
           
           InterpretationFunction:>(
            RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", 
              "[", #4, "]"}]& ),
           SyntaxForm->"fish",
           Tooltip->"Cl[3, 0, 0]"], "\[RuleDelayed]", 
          RowBox[{
           TemplateBox[{
             TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
                RowBox[{
                  AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
              InterpretationFunction :> (ReleaseHold[
                RowBox[{"mvDownUp", "@@", 
                  MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{1}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
               Tooltip -> "mvDownUp[{1}, {}]"], 
             
             TemplateBox[{"3", "0", "0"}, "Cl", 
              DisplayFunction -> (SubscriptBox[
                StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
            "\[DoubleStruckE]",
            DisplayFunction:>(StyleBox[
              RowBox[{
                StyleBox[
                "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
              AutoSpacing -> False, FontTracking -> "Condensed"]& ),
            
            InterpretationFunction:>(
             RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
            SyntaxForm->"fish",
            Tooltip->"Cl[3, 0, 0]"], "+", 
           RowBox[{"v", " ", 
            TemplateBox[{
              TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                Tooltip -> "mvDownUp[{3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}]}]}], ",", 
         RowBox[{
          TemplateBox[{
            TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
               RowBox[{
                 AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small,
                FontTracking -> "Condensed", AutoSpacing -> False]& ), 
             InterpretationFunction :> (ReleaseHold[
               RowBox[{"mvDownUp", "@@", 
                 MakeExpression[{
                   Take[{
                    SlotSequence[1]}, 
                    Length[{2}]], 
                   Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
              Tooltip -> "mvDownUp[{2}, {}]"], 
            
            TemplateBox[{"3", "0", "0"}, "Cl", 
             DisplayFunction -> (SubscriptBox[
               StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
               RowBox[{#, ",", #2}]]& ), Tooltip -> None], 
            "\"SaddleSurfaceCS\"", 
            
            TemplateBox[{"u", "v"}, "mvPoint", 
             InterpretationFunction -> (RowBox[{"mvPoint", "[", 
                RowBox[{"{", 
                  RowBox[{
                    TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
             DisplayFunction -> (RowBox[{
                TemplateSlotSequence[1, ","]}]& ), Tooltip -> 
             "SaddleSurfaceCS"]},
           "\[DoubleStruckE]",
           DisplayFunction:>(StyleBox[
             RowBox[{
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               
               RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
             "Condensed"]& ),
           
           InterpretationFunction:>(
            RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", 
              "[", #4, "]"}]& ),
           SyntaxForm->"fish",
           Tooltip->"Cl[3, 0, 0]"], "\[RuleDelayed]", 
          RowBox[{
           TemplateBox[{
             TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
                RowBox[{
                  AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
              InterpretationFunction :> (ReleaseHold[
                RowBox[{"mvDownUp", "@@", 
                  MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{2}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
               Tooltip -> "mvDownUp[{2}, {}]"], 
             
             TemplateBox[{"3", "0", "0"}, "Cl", 
              DisplayFunction -> (SubscriptBox[
                StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
            "\[DoubleStruckE]",
            DisplayFunction:>(StyleBox[
              RowBox[{
                StyleBox[
                "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
              AutoSpacing -> False, FontTracking -> "Condensed"]& ),
            
            InterpretationFunction:>(
             RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
            SyntaxForm->"fish",
            Tooltip->"Cl[3, 0, 0]"], "+", 
           RowBox[{"u", " ", 
            TemplateBox[{
              TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                Tooltip -> "mvDownUp[{3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}]}]}]}], "}"}]}], ",", 
      RowBox[{"\<\"Metric\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "+", 
            SuperscriptBox["v", "2"]}], ",", 
           RowBox[{"u", " ", "v"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"u", " ", "v"}], ",", 
           RowBox[{"1", "+", 
            SuperscriptBox["u", "2"]}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"ScaleFactors\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         SqrtBox[
          RowBox[{"1", "+", 
           SuperscriptBox["v", "2"]}]], ",", 
         SqrtBox[
          RowBox[{"1", "+", 
           SuperscriptBox["u", "2"]}]]}], "}"}]}], ",", 
      RowBox[{"\<\"VolumeFactor\"\>", "\[Rule]", 
       RowBox[{
        TemplateBox[{
          TemplateBox[{"1", "2"}, "mvDownUp", DisplayFunction :> (StyleBox[
             RowBox[{
               AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
               AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> Small, 
             FontTracking -> "Condensed", AutoSpacing -> False]& ), 
           InterpretationFunction :> (ReleaseHold[
             RowBox[{"mvDownUp", "@@", 
               MakeExpression[{
                 Take[{
                   SlotSequence[1]}, 
                  Length[{1, 2}]], 
                 Take[{
                   SlotSequence[1]}, {Length[{1, 2}] + 1, 
                   Length[{1, 2}]}]}, StandardForm]}]]& ), SyntaxForm -> 
           "fish", Tooltip -> "mvDownUp[{1, 2}, {}]"], 
          
          TemplateBox[{"3", "0", "0"}, "Cl", 
           DisplayFunction -> (SubscriptBox[
             StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
             RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
         "\[DoubleStruckE]",
         DisplayFunction:>(StyleBox[
           RowBox[{
             StyleBox[
             "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
           AutoSpacing -> False, FontTracking -> "Condensed"]& ),
         InterpretationFunction:>(
          RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
         SyntaxForm->"fish",
         Tooltip->"Cl[3, 0, 0]"], "+", 
        RowBox[{"u", " ", 
         TemplateBox[{
           TemplateBox[{"1", "3"}, "mvDownUp", DisplayFunction :> (StyleBox[
              RowBox[{
                AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
                AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> Small,
               FontTracking -> "Condensed", AutoSpacing -> False]& ), 
            InterpretationFunction :> (ReleaseHold[
              RowBox[{"mvDownUp", "@@", 
                MakeExpression[{
                  Take[{
                    SlotSequence[1]}, 
                   Length[{1, 3}]], 
                  Take[{
                    SlotSequence[1]}, {Length[{1, 3}] + 1, 
                    Length[{1, 3}]}]}, StandardForm]}]]& ), SyntaxForm -> 
            "fish", Tooltip -> "mvDownUp[{1, 3}, {}]"], 
           TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
              StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
              RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
          "\[DoubleStruckE]",
          DisplayFunction:>(StyleBox[
            RowBox[{
              StyleBox[
              "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
            AutoSpacing -> False, FontTracking -> "Condensed"]& ),
          
          InterpretationFunction:>(
           RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
          SyntaxForm->"fish",
          Tooltip->"Cl[3, 0, 0]"]}], "-", 
        RowBox[{"v", " ", 
         TemplateBox[{
           TemplateBox[{"2", "3"}, "mvDownUp", DisplayFunction :> (StyleBox[
              RowBox[{
                AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
                AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> Small,
               FontTracking -> "Condensed", AutoSpacing -> False]& ), 
            InterpretationFunction :> (ReleaseHold[
              RowBox[{"mvDownUp", "@@", 
                MakeExpression[{
                  Take[{
                    SlotSequence[1]}, 
                   Length[{2, 3}]], 
                  Take[{
                    SlotSequence[1]}, {Length[{2, 3}] + 1, 
                    Length[{2, 3}]}]}, StandardForm]}]]& ), SyntaxForm -> 
            "fish", Tooltip -> "mvDownUp[{2, 3}, {}]"], 
           TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
              StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
              RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
          "\[DoubleStruckE]",
          DisplayFunction:>(StyleBox[
            RowBox[{
              StyleBox[
              "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
            AutoSpacing -> False, FontTracking -> "Condensed"]& ),
          
          InterpretationFunction:>(
           RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
          SyntaxForm->"fish",
          Tooltip->"Cl[3, 0, 0]"]}]}]}], ",", 
      RowBox[{"\<\"InverseMetric\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox[
            RowBox[{"1", "+", 
             SuperscriptBox["u", "2"]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["u", "2"], "+", 
             SuperscriptBox["v", "2"]}]], ",", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"u", " ", "v"}], 
             RowBox[{"1", "+", 
              SuperscriptBox["u", "2"], "+", 
              SuperscriptBox["v", "2"]}]]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"u", " ", "v"}], 
             RowBox[{"1", "+", 
              SuperscriptBox["u", "2"], "+", 
              SuperscriptBox["v", "2"]}]]}], ",", 
           FractionBox[
            RowBox[{"1", "+", 
             SuperscriptBox["v", "2"]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["u", "2"], "+", 
             SuperscriptBox["v", "2"]}]]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"ReciprocalVectors\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           TemplateBox[{
             TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
                RowBox[{
                  AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
              InterpretationFunction :> (ReleaseHold[
                RowBox[{"mvDownUp", "@@", 
                  MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{1}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
               Tooltip -> "mvDownUp[{1}, {}]"], 
             
             TemplateBox[{"3", "0", "0"}, "Cl", 
              DisplayFunction -> (SubscriptBox[
                StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
            "\[DoubleStruckE]",
            DisplayFunction:>(StyleBox[
              RowBox[{
                StyleBox[
                "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
              AutoSpacing -> False, FontTracking -> "Condensed"]& ),
            
            InterpretationFunction:>(
             RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
            SyntaxForm->"fish",
            Tooltip->"Cl[3, 0, 0]"], "+", 
           RowBox[{"v", " ", 
            TemplateBox[{
              TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                Tooltip -> "mvDownUp[{3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}]}], "\[Rule]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"u", " ", "v", " ", 
              RowBox[{"(", 
               RowBox[{
                TemplateBox[{
                  
                  TemplateBox[{"2"}, "mvDownUp", 
                   DisplayFunction :> (StyleBox[
                    RowBox[{
                    AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                    Small, FontTracking -> "Condensed", AutoSpacing -> 
                    False]& ), InterpretationFunction :> (ReleaseHold[
                    RowBox[{"mvDownUp", "@@", 
                    MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{2}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                    Tooltip -> "mvDownUp[{2}, {}]"], 
                  
                  TemplateBox[{"3", "0", "0"}, "Cl", 
                   DisplayFunction -> (SubscriptBox[
                    StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                    RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
                 "\[DoubleStruckE]",
                 DisplayFunction:>(StyleBox[
                   RowBox[{
                    StyleBox[
                    "\[DoubleStruckE]", FontColor -> 
                    RGBColor[0., 0., 1.]], #}], AutoSpacing -> False, 
                   FontTracking -> "Condensed"]& ),
                 
                 InterpretationFunction:>(
                  RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
                 SyntaxForm->"fish",
                 Tooltip->"Cl[3, 0, 0]"], "+", 
                RowBox[{"u", " ", 
                 TemplateBox[{
                   TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                    RowBox[{
                    AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                    Small, FontTracking -> "Condensed", AutoSpacing -> 
                    False]& ), InterpretationFunction :> (ReleaseHold[
                    RowBox[{"mvDownUp", "@@", 
                    MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                     Tooltip -> "mvDownUp[{3}, {}]"], 
                   
                   TemplateBox[{"3", "0", "0"}, "Cl", 
                    DisplayFunction -> (SubscriptBox[
                    StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                    RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
                  "\[DoubleStruckE]",
                  DisplayFunction:>(StyleBox[
                    RowBox[{
                    StyleBox[
                    "\[DoubleStruckE]", FontColor -> 
                    RGBColor[0., 0., 1.]], #}], AutoSpacing -> False, 
                    FontTracking -> "Condensed"]& ),
                  
                  InterpretationFunction:>(
                   RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
                  SyntaxForm->"fish",
                  Tooltip->"Cl[3, 0, 0]"]}]}], ")"}]}], 
             RowBox[{"1", "+", 
              SuperscriptBox["u", "2"], "+", 
              SuperscriptBox["v", "2"]}]]}], "+", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["u", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               TemplateBox[{
                 TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
                    RowBox[{
                    AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                    Small, FontTracking -> "Condensed", AutoSpacing -> 
                    False]& ), InterpretationFunction :> (ReleaseHold[
                    RowBox[{"mvDownUp", "@@", 
                    MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{1}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                   Tooltip -> "mvDownUp[{1}, {}]"], 
                 
                 TemplateBox[{"3", "0", "0"}, "Cl", 
                  DisplayFunction -> (SubscriptBox[
                    StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                    RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
                "\[DoubleStruckE]",
                DisplayFunction:>(StyleBox[
                  RowBox[{
                    StyleBox[
                    "\[DoubleStruckE]", FontColor -> 
                    RGBColor[0., 0., 1.]], #}], AutoSpacing -> False, 
                  FontTracking -> "Condensed"]& ),
                
                InterpretationFunction:>(
                 RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
                SyntaxForm->"fish",
                Tooltip->"Cl[3, 0, 0]"], "+", 
               RowBox[{"v", " ", 
                TemplateBox[{
                  
                  TemplateBox[{"3"}, "mvDownUp", 
                   DisplayFunction :> (StyleBox[
                    RowBox[{
                    AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                    Small, FontTracking -> "Condensed", AutoSpacing -> 
                    False]& ), InterpretationFunction :> (ReleaseHold[
                    RowBox[{"mvDownUp", "@@", 
                    MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                    Tooltip -> "mvDownUp[{3}, {}]"], 
                  
                  TemplateBox[{"3", "0", "0"}, "Cl", 
                   DisplayFunction -> (SubscriptBox[
                    StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                    RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
                 "\[DoubleStruckE]",
                 DisplayFunction:>(StyleBox[
                   RowBox[{
                    StyleBox[
                    "\[DoubleStruckE]", FontColor -> 
                    RGBColor[0., 0., 1.]], #}], AutoSpacing -> False, 
                   FontTracking -> "Condensed"]& ),
                 
                 InterpretationFunction:>(
                  RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
                 SyntaxForm->"fish",
                 Tooltip->"Cl[3, 0, 0]"]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["u", "2"], "+", 
             SuperscriptBox["v", "2"]}]]}]}], ",", 
         RowBox[{
          RowBox[{
           TemplateBox[{
             TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
                RowBox[{
                  AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
              InterpretationFunction :> (ReleaseHold[
                RowBox[{"mvDownUp", "@@", 
                  MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{2}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
               Tooltip -> "mvDownUp[{2}, {}]"], 
             
             TemplateBox[{"3", "0", "0"}, "Cl", 
              DisplayFunction -> (SubscriptBox[
                StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
            "\[DoubleStruckE]",
            DisplayFunction:>(StyleBox[
              RowBox[{
                StyleBox[
                "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
              AutoSpacing -> False, FontTracking -> "Condensed"]& ),
            
            InterpretationFunction:>(
             RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
            SyntaxForm->"fish",
            Tooltip->"Cl[3, 0, 0]"], "+", 
           RowBox[{"u", " ", 
            TemplateBox[{
              TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                Tooltip -> "mvDownUp[{3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}]}], "\[Rule]", 
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["v", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               TemplateBox[{
                 TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
                    RowBox[{
                    AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                    Small, FontTracking -> "Condensed", AutoSpacing -> 
                    False]& ), InterpretationFunction :> (ReleaseHold[
                    RowBox[{"mvDownUp", "@@", 
                    MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{2}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                   Tooltip -> "mvDownUp[{2}, {}]"], 
                 
                 TemplateBox[{"3", "0", "0"}, "Cl", 
                  DisplayFunction -> (SubscriptBox[
                    StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                    RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
                "\[DoubleStruckE]",
                DisplayFunction:>(StyleBox[
                  RowBox[{
                    StyleBox[
                    "\[DoubleStruckE]", FontColor -> 
                    RGBColor[0., 0., 1.]], #}], AutoSpacing -> False, 
                  FontTracking -> "Condensed"]& ),
                
                InterpretationFunction:>(
                 RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
                SyntaxForm->"fish",
                Tooltip->"Cl[3, 0, 0]"], "+", 
               RowBox[{"u", " ", 
                TemplateBox[{
                  
                  TemplateBox[{"3"}, "mvDownUp", 
                   DisplayFunction :> (StyleBox[
                    RowBox[{
                    AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                    Small, FontTracking -> "Condensed", AutoSpacing -> 
                    False]& ), InterpretationFunction :> (ReleaseHold[
                    RowBox[{"mvDownUp", "@@", 
                    MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                    Tooltip -> "mvDownUp[{3}, {}]"], 
                  
                  TemplateBox[{"3", "0", "0"}, "Cl", 
                   DisplayFunction -> (SubscriptBox[
                    StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                    RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
                 "\[DoubleStruckE]",
                 DisplayFunction:>(StyleBox[
                   RowBox[{
                    StyleBox[
                    "\[DoubleStruckE]", FontColor -> 
                    RGBColor[0., 0., 1.]], #}], AutoSpacing -> False, 
                   FontTracking -> "Condensed"]& ),
                 
                 InterpretationFunction:>(
                  RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
                 SyntaxForm->"fish",
                 Tooltip->"Cl[3, 0, 0]"]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["u", "2"], "+", 
             SuperscriptBox["v", "2"]}]], "-", 
           FractionBox[
            RowBox[{"u", " ", "v", " ", 
             RowBox[{"(", 
              RowBox[{
               TemplateBox[{
                 TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
                    RowBox[{
                    AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                    Small, FontTracking -> "Condensed", AutoSpacing -> 
                    False]& ), InterpretationFunction :> (ReleaseHold[
                    RowBox[{"mvDownUp", "@@", 
                    MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{1}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                   Tooltip -> "mvDownUp[{1}, {}]"], 
                 
                 TemplateBox[{"3", "0", "0"}, "Cl", 
                  DisplayFunction -> (SubscriptBox[
                    StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                    RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
                "\[DoubleStruckE]",
                DisplayFunction:>(StyleBox[
                  RowBox[{
                    StyleBox[
                    "\[DoubleStruckE]", FontColor -> 
                    RGBColor[0., 0., 1.]], #}], AutoSpacing -> False, 
                  FontTracking -> "Condensed"]& ),
                
                InterpretationFunction:>(
                 RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
                SyntaxForm->"fish",
                Tooltip->"Cl[3, 0, 0]"], "+", 
               RowBox[{"v", " ", 
                TemplateBox[{
                  
                  TemplateBox[{"3"}, "mvDownUp", 
                   DisplayFunction :> (StyleBox[
                    RowBox[{
                    AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                    Small, FontTracking -> "Condensed", AutoSpacing -> 
                    False]& ), InterpretationFunction :> (ReleaseHold[
                    RowBox[{"mvDownUp", "@@", 
                    MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                    Tooltip -> "mvDownUp[{3}, {}]"], 
                  
                  TemplateBox[{"3", "0", "0"}, "Cl", 
                   DisplayFunction -> (SubscriptBox[
                    StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                    RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
                 "\[DoubleStruckE]",
                 DisplayFunction:>(StyleBox[
                   RowBox[{
                    StyleBox[
                    "\[DoubleStruckE]", FontColor -> 
                    RGBColor[0., 0., 1.]], #}], AutoSpacing -> False, 
                   FontTracking -> "Condensed"]& ),
                 
                 InterpretationFunction:>(
                  RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
                 SyntaxForm->"fish",
                 Tooltip->"Cl[3, 0, 0]"]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["u", "2"], "+", 
             SuperscriptBox["v", "2"]}]]}]}]}], "}"}]}], ",", 
      RowBox[{"\<\"FullBasis\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{
            TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
               RowBox[{
                 AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small,
                FontTracking -> "Condensed", AutoSpacing -> False]& ), 
             InterpretationFunction :> (ReleaseHold[
               RowBox[{"mvDownUp", "@@", 
                 MakeExpression[{
                   Take[{
                    SlotSequence[1]}, 
                    Length[{1}]], 
                   Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
              Tooltip -> "mvDownUp[{1}, {}]"], 
            
            TemplateBox[{"3", "0", "0"}, "Cl", 
             DisplayFunction -> (SubscriptBox[
               StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
               RowBox[{#, ",", #2}]]& ), Tooltip -> None], 
            "\"SaddleSurfaceCS\"", 
            
            TemplateBox[{"u", "v"}, "mvPoint", 
             InterpretationFunction -> (RowBox[{"mvPoint", "[", 
                RowBox[{"{", 
                  RowBox[{
                    TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
             DisplayFunction -> (RowBox[{
                TemplateSlotSequence[1, ","]}]& ), Tooltip -> 
             "SaddleSurfaceCS"]},
           "\[DoubleStruckE]",
           DisplayFunction:>(StyleBox[
             RowBox[{
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               
               RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
             "Condensed"]& ),
           
           InterpretationFunction:>(
            RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", 
              "[", #4, "]"}]& ),
           SyntaxForm->"fish",
           Tooltip->"Cl[3, 0, 0]"], "\[Rule]", 
          RowBox[{
           TemplateBox[{
             TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
                RowBox[{
                  AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
              InterpretationFunction :> (ReleaseHold[
                RowBox[{"mvDownUp", "@@", 
                  MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{1}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
               Tooltip -> "mvDownUp[{1}, {}]"], 
             
             TemplateBox[{"3", "0", "0"}, "Cl", 
              DisplayFunction -> (SubscriptBox[
                StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
            "\[DoubleStruckE]",
            DisplayFunction:>(StyleBox[
              RowBox[{
                StyleBox[
                "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
              AutoSpacing -> False, FontTracking -> "Condensed"]& ),
            
            InterpretationFunction:>(
             RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
            SyntaxForm->"fish",
            Tooltip->"Cl[3, 0, 0]"], "+", 
           RowBox[{"v", " ", 
            TemplateBox[{
              TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                Tooltip -> "mvDownUp[{3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}]}]}], ",", 
         RowBox[{
          TemplateBox[{
            TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
               RowBox[{
                 AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small,
                FontTracking -> "Condensed", AutoSpacing -> False]& ), 
             InterpretationFunction :> (ReleaseHold[
               RowBox[{"mvDownUp", "@@", 
                 MakeExpression[{
                   Take[{
                    SlotSequence[1]}, 
                    Length[{2}]], 
                   Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
              Tooltip -> "mvDownUp[{2}, {}]"], 
            
            TemplateBox[{"3", "0", "0"}, "Cl", 
             DisplayFunction -> (SubscriptBox[
               StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
               RowBox[{#, ",", #2}]]& ), Tooltip -> None], 
            "\"SaddleSurfaceCS\"", 
            
            TemplateBox[{"u", "v"}, "mvPoint", 
             InterpretationFunction -> (RowBox[{"mvPoint", "[", 
                RowBox[{"{", 
                  RowBox[{
                    TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
             DisplayFunction -> (RowBox[{
                TemplateSlotSequence[1, ","]}]& ), Tooltip -> 
             "SaddleSurfaceCS"]},
           "\[DoubleStruckE]",
           DisplayFunction:>(StyleBox[
             RowBox[{
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               
               RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
             "Condensed"]& ),
           
           InterpretationFunction:>(
            RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", 
              "[", #4, "]"}]& ),
           SyntaxForm->"fish",
           Tooltip->"Cl[3, 0, 0]"], "\[Rule]", 
          RowBox[{
           TemplateBox[{
             TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
                RowBox[{
                  AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
              InterpretationFunction :> (ReleaseHold[
                RowBox[{"mvDownUp", "@@", 
                  MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{2}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
               Tooltip -> "mvDownUp[{2}, {}]"], 
             
             TemplateBox[{"3", "0", "0"}, "Cl", 
              DisplayFunction -> (SubscriptBox[
                StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
            "\[DoubleStruckE]",
            DisplayFunction:>(StyleBox[
              RowBox[{
                StyleBox[
                "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
              AutoSpacing -> False, FontTracking -> "Condensed"]& ),
            
            InterpretationFunction:>(
             RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
            SyntaxForm->"fish",
            Tooltip->"Cl[3, 0, 0]"], "+", 
           RowBox[{"u", " ", 
            TemplateBox[{
              TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                Tooltip -> "mvDownUp[{3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}]}]}], ",", 
         RowBox[{
          TemplateBox[{
            TemplateBox[{"1", "2"}, "mvDownUp", DisplayFunction :> (StyleBox[
               RowBox[{
                 AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
                 AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> 
               Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
             InterpretationFunction :> (ReleaseHold[
               RowBox[{"mvDownUp", "@@", 
                 MakeExpression[{
                   Take[{
                    SlotSequence[1]}, 
                    Length[{1, 2}]], 
                   Take[{
                    SlotSequence[1]}, {Length[{1, 2}] + 1, 
                    Length[{1, 2}]}]}, StandardForm]}]]& ), SyntaxForm -> 
             "fish", Tooltip -> "mvDownUp[{1, 2}, {}]"], 
            
            TemplateBox[{"3", "0", "0"}, "Cl", 
             DisplayFunction -> (SubscriptBox[
               StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
               RowBox[{#, ",", #2}]]& ), Tooltip -> None], 
            "\"SaddleSurfaceCS\"", 
            
            TemplateBox[{"u", "v"}, "mvPoint", 
             InterpretationFunction -> (RowBox[{"mvPoint", "[", 
                RowBox[{"{", 
                  RowBox[{
                    TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
             DisplayFunction -> (RowBox[{
                TemplateSlotSequence[1, ","]}]& ), Tooltip -> 
             "SaddleSurfaceCS"]},
           "\[DoubleStruckE]",
           DisplayFunction:>(StyleBox[
             RowBox[{
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               
               RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
             "Condensed"]& ),
           
           InterpretationFunction:>(
            RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", 
              "[", #4, "]"}]& ),
           SyntaxForm->"fish",
           Tooltip->"Cl[3, 0, 0]"], "\[Rule]", 
          RowBox[{
           TemplateBox[{
             
             TemplateBox[{"1", "2"}, "mvDownUp", 
              DisplayFunction :> (StyleBox[
                RowBox[{
                  AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
                  AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> 
                Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
              InterpretationFunction :> (ReleaseHold[
                RowBox[{"mvDownUp", "@@", 
                  MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{1, 2}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{1, 2}] + 1, 
                    Length[{1, 2}]}]}, StandardForm]}]]& ), SyntaxForm -> 
              "fish", Tooltip -> "mvDownUp[{1, 2}, {}]"], 
             
             TemplateBox[{"3", "0", "0"}, "Cl", 
              DisplayFunction -> (SubscriptBox[
                StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
            "\[DoubleStruckE]",
            DisplayFunction:>(StyleBox[
              RowBox[{
                StyleBox[
                "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
              AutoSpacing -> False, FontTracking -> "Condensed"]& ),
            
            InterpretationFunction:>(
             RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
            SyntaxForm->"fish",
            Tooltip->"Cl[3, 0, 0]"], "+", 
           RowBox[{"u", " ", 
            TemplateBox[{
              TemplateBox[{"1", "3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
                   AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{1, 3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{1, 3}] + 1, 
                    Length[{1, 3}]}]}, StandardForm]}]]& ), SyntaxForm -> 
               "fish", Tooltip -> "mvDownUp[{1, 3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}], "-", 
           RowBox[{"v", " ", 
            TemplateBox[{
              TemplateBox[{"2", "3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
                   AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{2, 3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{2, 3}] + 1, 
                    Length[{2, 3}]}]}, StandardForm]}]]& ), SyntaxForm -> 
               "fish", Tooltip -> "mvDownUp[{2, 3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}]}]}]}], "}"}]}], ",", 
      RowBox[{"\<\"ToBasisElementRules\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{
            TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
               RowBox[{
                 AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small,
                FontTracking -> "Condensed", AutoSpacing -> False]& ), 
             InterpretationFunction :> (ReleaseHold[
               RowBox[{"mvDownUp", "@@", 
                 MakeExpression[{
                   Take[{
                    SlotSequence[1]}, 
                    Length[{1}]], 
                   Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
              Tooltip -> "mvDownUp[{1}, {}]"], 
            
            TemplateBox[{"3", "0", "0"}, "Cl", 
             DisplayFunction -> (SubscriptBox[
               StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
               RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
           "\[DoubleStruckE]",
           DisplayFunction:>(StyleBox[
             RowBox[{
               StyleBox[
               "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
             AutoSpacing -> False, FontTracking -> "Condensed"]& ),
           
           InterpretationFunction:>(
            RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
           SyntaxForm->"fish",
           Tooltip->"Cl[3, 0, 0]"], "\[Rule]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "v"}], " ", 
            TemplateBox[{
              TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                Tooltip -> "mvDownUp[{3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}], "+", 
           TemplateBox[{
             TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
                RowBox[{
                  AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
              InterpretationFunction :> (ReleaseHold[
                RowBox[{"mvDownUp", "@@", 
                  MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{1}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
               Tooltip -> "mvDownUp[{1}, {}]"], 
             
             TemplateBox[{"3", "0", "0"}, "Cl", 
              DisplayFunction -> (SubscriptBox[
                StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                RowBox[{#, ",", #2}]]& ), Tooltip -> None], 
             "\"SaddleSurfaceCS\"", 
             
             TemplateBox[{"u", "v"}, "mvPoint", 
              InterpretationFunction -> (RowBox[{"mvPoint", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
              DisplayFunction -> (RowBox[{
                 TemplateSlotSequence[1, ","]}]& ), Tooltip -> 
              "SaddleSurfaceCS"]},
            "\[DoubleStruckE]",
            DisplayFunction:>(StyleBox[
              RowBox[{
                RowBox[{
                  StyleBox[
                  "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
                RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
              "Condensed"]& ),
            
            InterpretationFunction:>(
             RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", 
               "[", #4, "]"}]& ),
            SyntaxForm->"fish",
            Tooltip->"Cl[3, 0, 0]"]}]}], ",", 
         RowBox[{
          TemplateBox[{
            TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
               RowBox[{
                 AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small,
                FontTracking -> "Condensed", AutoSpacing -> False]& ), 
             InterpretationFunction :> (ReleaseHold[
               RowBox[{"mvDownUp", "@@", 
                 MakeExpression[{
                   Take[{
                    SlotSequence[1]}, 
                    Length[{2}]], 
                   Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
              Tooltip -> "mvDownUp[{2}, {}]"], 
            
            TemplateBox[{"3", "0", "0"}, "Cl", 
             DisplayFunction -> (SubscriptBox[
               StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
               RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
           "\[DoubleStruckE]",
           DisplayFunction:>(StyleBox[
             RowBox[{
               StyleBox[
               "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
             AutoSpacing -> False, FontTracking -> "Condensed"]& ),
           
           InterpretationFunction:>(
            RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
           SyntaxForm->"fish",
           Tooltip->"Cl[3, 0, 0]"], "\[Rule]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "u"}], " ", 
            TemplateBox[{
              TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                Tooltip -> "mvDownUp[{3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}], "+", 
           TemplateBox[{
             TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
                RowBox[{
                  AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
              InterpretationFunction :> (ReleaseHold[
                RowBox[{"mvDownUp", "@@", 
                  MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{2}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
               Tooltip -> "mvDownUp[{2}, {}]"], 
             
             TemplateBox[{"3", "0", "0"}, "Cl", 
              DisplayFunction -> (SubscriptBox[
                StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                RowBox[{#, ",", #2}]]& ), Tooltip -> None], 
             "\"SaddleSurfaceCS\"", 
             
             TemplateBox[{"u", "v"}, "mvPoint", 
              InterpretationFunction -> (RowBox[{"mvPoint", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
              DisplayFunction -> (RowBox[{
                 TemplateSlotSequence[1, ","]}]& ), Tooltip -> 
              "SaddleSurfaceCS"]},
            "\[DoubleStruckE]",
            DisplayFunction:>(StyleBox[
              RowBox[{
                RowBox[{
                  StyleBox[
                  "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
                RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
              "Condensed"]& ),
            
            InterpretationFunction:>(
             RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", 
               "[", #4, "]"}]& ),
            SyntaxForm->"fish",
            Tooltip->"Cl[3, 0, 0]"]}]}], ",", 
         RowBox[{
          TemplateBox[{
            TemplateBox[{"1", "2"}, "mvDownUp", DisplayFunction :> (StyleBox[
               RowBox[{
                 AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
                 AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> 
               Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
             InterpretationFunction :> (ReleaseHold[
               RowBox[{"mvDownUp", "@@", 
                 MakeExpression[{
                   Take[{
                    SlotSequence[1]}, 
                    Length[{1, 2}]], 
                   Take[{
                    SlotSequence[1]}, {Length[{1, 2}] + 1, 
                    Length[{1, 2}]}]}, StandardForm]}]]& ), SyntaxForm -> 
             "fish", Tooltip -> "mvDownUp[{1, 2}, {}]"], 
            
            TemplateBox[{"3", "0", "0"}, "Cl", 
             DisplayFunction -> (SubscriptBox[
               StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
               RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
           "\[DoubleStruckE]",
           DisplayFunction:>(StyleBox[
             RowBox[{
               StyleBox[
               "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
             AutoSpacing -> False, FontTracking -> "Condensed"]& ),
           
           InterpretationFunction:>(
            RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
           SyntaxForm->"fish",
           Tooltip->"Cl[3, 0, 0]"], "\[Rule]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "u"}], " ", 
            TemplateBox[{
              TemplateBox[{"1", "3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
                   AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{1, 3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{1, 3}] + 1, 
                    Length[{1, 3}]}]}, StandardForm]}]]& ), SyntaxForm -> 
               "fish", Tooltip -> "mvDownUp[{1, 3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}], "+", 
           RowBox[{"v", " ", 
            TemplateBox[{
              TemplateBox[{"2", "3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
                   AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{2, 3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{2, 3}] + 1, 
                    Length[{2, 3}]}]}, StandardForm]}]]& ), SyntaxForm -> 
               "fish", Tooltip -> "mvDownUp[{2, 3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}], "+", 
           TemplateBox[{
             
             TemplateBox[{"1", "2"}, "mvDownUp", 
              DisplayFunction :> (StyleBox[
                RowBox[{
                  AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
                  AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> 
                Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
              InterpretationFunction :> (ReleaseHold[
                RowBox[{"mvDownUp", "@@", 
                  MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{1, 2}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{1, 2}] + 1, 
                    Length[{1, 2}]}]}, StandardForm]}]]& ), SyntaxForm -> 
              "fish", Tooltip -> "mvDownUp[{1, 2}, {}]"], 
             
             TemplateBox[{"3", "0", "0"}, "Cl", 
              DisplayFunction -> (SubscriptBox[
                StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                RowBox[{#, ",", #2}]]& ), Tooltip -> None], 
             "\"SaddleSurfaceCS\"", 
             
             TemplateBox[{"u", "v"}, "mvPoint", 
              InterpretationFunction -> (RowBox[{"mvPoint", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
              DisplayFunction -> (RowBox[{
                 TemplateSlotSequence[1, ","]}]& ), Tooltip -> 
              "SaddleSurfaceCS"]},
            "\[DoubleStruckE]",
            DisplayFunction:>(StyleBox[
              RowBox[{
                RowBox[{
                  StyleBox[
                  "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
                RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
              "Condensed"]& ),
            
            InterpretationFunction:>(
             RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", 
               "[", #4, "]"}]& ),
            SyntaxForm->"fish",
            Tooltip->"Cl[3, 0, 0]"]}]}]}], "}"}]}], ",", 
      RowBox[{"\<\"NormalToSurface\"\>", "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "v"}], " ", 
          TemplateBox[{
            TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
               RowBox[{
                 AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small,
                FontTracking -> "Condensed", AutoSpacing -> False]& ), 
             InterpretationFunction :> (ReleaseHold[
               RowBox[{"mvDownUp", "@@", 
                 MakeExpression[{
                   Take[{
                    SlotSequence[1]}, 
                    Length[{1}]], 
                   Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
              Tooltip -> "mvDownUp[{1}, {}]"], 
            
            TemplateBox[{"3", "0", "0"}, "Cl", 
             DisplayFunction -> (SubscriptBox[
               StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
               RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
           "\[DoubleStruckE]",
           DisplayFunction:>(StyleBox[
             RowBox[{
               StyleBox[
               "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
             AutoSpacing -> False, FontTracking -> "Condensed"]& ),
           
           InterpretationFunction:>(
            RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
           SyntaxForm->"fish",
           Tooltip->"Cl[3, 0, 0]"]}], "-", 
         RowBox[{"u", " ", 
          TemplateBox[{
            TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
               RowBox[{
                 AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small,
                FontTracking -> "Condensed", AutoSpacing -> False]& ), 
             InterpretationFunction :> (ReleaseHold[
               RowBox[{"mvDownUp", "@@", 
                 MakeExpression[{
                   Take[{
                    SlotSequence[1]}, 
                    Length[{2}]], 
                   Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
              Tooltip -> "mvDownUp[{2}, {}]"], 
            
            TemplateBox[{"3", "0", "0"}, "Cl", 
             DisplayFunction -> (SubscriptBox[
               StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
               RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
           "\[DoubleStruckE]",
           DisplayFunction:>(StyleBox[
             RowBox[{
               StyleBox[
               "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
             AutoSpacing -> False, FontTracking -> "Condensed"]& ),
           
           InterpretationFunction:>(
            RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
           SyntaxForm->"fish",
           Tooltip->"Cl[3, 0, 0]"]}], "+", 
         TemplateBox[{
           TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
              RowBox[{
                AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
              FontTracking -> "Condensed", AutoSpacing -> False]& ), 
            InterpretationFunction :> (ReleaseHold[
              RowBox[{"mvDownUp", "@@", 
                MakeExpression[{
                  Take[{
                    SlotSequence[1]}, 
                   Length[{3}]], 
                  Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
             Tooltip -> "mvDownUp[{3}, {}]"], 
           TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
              StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
              RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
          "\[DoubleStruckE]",
          DisplayFunction:>(StyleBox[
            RowBox[{
              StyleBox[
              "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
            AutoSpacing -> False, FontTracking -> "Condensed"]& ),
          
          InterpretationFunction:>(
           RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
          SyntaxForm->"fish",
          Tooltip->"Cl[3, 0, 0]"]}], 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox["u", "2"], "+", 
          SuperscriptBox["v", "2"]}]]]}], ",", 
      RowBox[{"\<\"ChristoffelSymbolsOfSecondKind\"\>", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["SymmetrizedArray",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[
                   
                   RasterBox[{{4, 3, 3, 2}, {3, 0, 3, 3}, {3, 0, 0, 3}, {1, 3,
                     3, 4}}, {{0, 0}, {4, 4}}, {0, 5}], AspectRatio -> 1, 
                   Axes -> False, Frame -> None, Axes -> False, AspectRatio -> 
                   1, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Symmetry: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"Symmetric", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "]"}], "SummaryItem"]}]}},
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[
                   
                   RasterBox[{{4, 3, 3, 2}, {3, 0, 3, 3}, {3, 0, 0, 3}, {1, 3,
                     3, 4}}, {{0, 0}, {4, 4}}, {0, 5}], AspectRatio -> 1, 
                   Axes -> False, Frame -> None, Axes -> False, AspectRatio -> 
                   1, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Symmetry: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"Symmetric", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Symmetry order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Specified independent elements: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    SuperscriptBox["u", "2"], " ", "v"}], 
                    RowBox[{"1", "+", 
                    SuperscriptBox["u", "2"], "+", 
                    SuperscriptBox["v", "2"]}]]}], "+", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["u", "2"]}], ")"}], " ", "v"}], 
                    RowBox[{"1", "+", 
                    SuperscriptBox["u", "2"], "+", 
                    SuperscriptBox["v", "2"]}]]}], ")"}]}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", "u", " ", 
                    SuperscriptBox["v", "2"]}], 
                    RowBox[{"1", "+", 
                    SuperscriptBox["u", "2"], "+", 
                    SuperscriptBox["v", "2"]}]]}], "+", 
                    FractionBox[
                    RowBox[{"2", " ", "u", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["v", "2"]}], ")"}]}], 
                    RowBox[{"1", "+", 
                    SuperscriptBox["u", "2"], "+", 
                    SuperscriptBox["v", "2"]}]]}], ")"}]}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        SymmetrizedArray[
         StructuredArray`StructuredData[{2, 2, 
          2}, {{{1, 1, 2} -> 
            Rational[
              1, 2] (((-2) $CellContext`u^2) ($CellContext`v/(
                1 + $CellContext`u^2 + $CellContext`v^2)) + (
                2 (1 + $CellContext`u^2)) ($CellContext`v/(
                1 + $CellContext`u^2 + $CellContext`v^2))), {2, 1, 2} -> 
            Rational[
              1, 2] (((-2) $CellContext`u) ($CellContext`v^2/(
                1 + $CellContext`u^2 + $CellContext`v^2)) + (
                2 $CellContext`u) ((1 + $CellContext`v^2)/(
                1 + $CellContext`u^2 + $CellContext`v^2)))}, 
           Symmetric[{2, 3}]}]],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[37]=",ExpressionUUID->"672907bf-a992-4da6-8af4-8a3b3352d3b7"]
}, Open  ]],

Cell["So far implemented list of properties are :", "Text",ExpressionUUID->"aaec6fac-3ad0-4dcf-a5e7-3347d49eec46"],

Cell[CellGroupData[{

Cell[BoxData["GeometricAlgebra`p`availableProperties"], "Input",
 CellLabel->"In[38]:=",ExpressionUUID->"b0871fbd-e98f-4d39-838e-7eb71f6510db"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"PrimaryVectors\"\>", ",", "\<\"Metric\"\>", 
   ",", "\<\"ScaleFactors\"\>", ",", "\<\"VolumeFactor\"\>", 
   ",", "\<\"InverseMetric\"\>", ",", "\<\"ReciprocalVectors\"\>", 
   ",", "\<\"FullBasis\"\>", ",", "\<\"ToBasisElementRules\"\>", 
   ",", "\<\"NormalToSurface\"\>", 
   ",", "\<\"ChristoffelSymbolsOfSecondKind\"\>"}], "}"}]], "Output",
 CellLabel->"Out[38]=",ExpressionUUID->"50b13976-2d5f-4a9e-b2c5-d7826ce52b8a"]
}, Open  ]],

Cell["The surface, normal and tangent vectors at given points:", "Text",ExpressionUUID->"c5c9fa3a-c754-46c0-a8f4-12df7bd2ef2f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
   "pointsOfTangentsAndNormals", "[", "gaRunningCoordinateChart", "]"}], "=", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"mvPoint", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], ",", 
        RowBox[{"1", "/", "2"}]}], "}"}], "]"}], ",", 
     RowBox[{"mvPoint", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
     RowBox[{"mvPoint", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "/", "3"}], ",", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}]}], "}"}], "]"}], ",", 
     RowBox[{"mvPoint", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "/", "3"}], ",", 
        RowBox[{"3", "/", "4"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"gaPlotCoordinateSystem", "[", 
  RowBox[{"gaRunningCoordinateChart", ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", 
   RowBox[{"\"\<TangentVector\>\"", "->", 
    RowBox[{
    "pointsOfTangentsAndNormals", "[", "gaRunningCoordinateChart", "]"}]}], 
   ",", 
   RowBox[{"\"\<NormalVector\>\"", "->", 
    RowBox[{
    "pointsOfTangentsAndNormals", "[", "gaRunningCoordinateChart", "]"}]}], 
   ",", 
   RowBox[{"\"\<TangentVectorStyle\>\"", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\"\<NormalVectorStyle\>\"", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Magenta", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], "Input",
 CellLabel->"In[39]:=",ExpressionUUID->"8da90d90-7d2b-46cb-bd2b-c91ab3510e23"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Fixed coordinates values\"\>",
   "EchoLabel"], "  ", 
  RowBox[{"{", "}"}]}]], "Echo",ExpressionUUID->"92403ac5-e5aa-484e-b115-\
295728500888"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Options for ParametricPlot3D\"\>",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Opacity", "[", "0.5`", "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "}"}]}]], "Echo",ExpressionUUID\
->"6ea98b14-b7ee-4467-9d0e-2242292f7393"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Surface parametrization \"\>",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{"u", ",", "v", ",", 
    RowBox[{"u", " ", "v"}]}], "}"}]}]], "Echo",ExpressionUUID->"b77a7ab0-\
39ed-460d-9c94-57ce5ecaa67e"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Options for \\\"TangentVector\\\" and \
\\\"TangentVectorStyle\\\" \"\>",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
        RowBox[{"-", 
          FractionBox["1", "2"]}], 
        FractionBox["1", "2"]},
       "mvPoint",
       DisplayFunction->(RowBox[{
          TemplateSlotSequence[1, ","]}]& ),
       InterpretationFunction->(RowBox[{"mvPoint", "[", 
          RowBox[{"{", 
            RowBox[{
              TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
       Tooltip->"SaddleSurfaceCS"], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>,
         "RGBColorSwatchTemplate"], ",", 
        RowBox[{"Thickness", "[", "Large", "]"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"0", "0"},
       "mvPoint",
       DisplayFunction->(RowBox[{
          TemplateSlotSequence[1, ","]}]& ),
       InterpretationFunction->(RowBox[{"mvPoint", "[", 
          RowBox[{"{", 
            RowBox[{
              TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
       Tooltip->"SaddleSurfaceCS"], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>,
         "RGBColorSwatchTemplate"], ",", 
        RowBox[{"Thickness", "[", "Large", "]"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
        FractionBox["2", "3"], 
        RowBox[{"-", 
          FractionBox["1", "2"]}]},
       "mvPoint",
       DisplayFunction->(RowBox[{
          TemplateSlotSequence[1, ","]}]& ),
       InterpretationFunction->(RowBox[{"mvPoint", "[", 
          RowBox[{"{", 
            RowBox[{
              TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
       Tooltip->"SaddleSurfaceCS"], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>,
         "RGBColorSwatchTemplate"], ",", 
        RowBox[{"Thickness", "[", "Large", "]"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
        FractionBox["2", "3"], 
        FractionBox["3", "4"]},
       "mvPoint",
       DisplayFunction->(RowBox[{
          TemplateSlotSequence[1, ","]}]& ),
       InterpretationFunction->(RowBox[{"mvPoint", "[", 
          RowBox[{"{", 
            RowBox[{
              TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
       Tooltip->"SaddleSurfaceCS"], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>,
         "RGBColorSwatchTemplate"], ",", 
        RowBox[{"Thickness", "[", "Large", "]"}]}], "}"}]}], "}"}]}], 
   "}"}]}]], "Echo",ExpressionUUID->"13ad2769-e32f-4b7d-967f-54a67d4cae5d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{"-", 
       FractionBox["1", "2"]}], 
     FractionBox["1", "2"]},
    "mvPoint",
    DisplayFunction->(RowBox[{
       TemplateSlotSequence[1, ","]}]& ),
    InterpretationFunction->(RowBox[{"mvPoint", "[", 
       RowBox[{"{", 
         RowBox[{
           TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
    Tooltip->"SaddleSurfaceCS"], ",", 
   TemplateBox[{"0", "0"},
    "mvPoint",
    DisplayFunction->(RowBox[{
       TemplateSlotSequence[1, ","]}]& ),
    InterpretationFunction->(RowBox[{"mvPoint", "[", 
       RowBox[{"{", 
         RowBox[{
           TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
    Tooltip->"SaddleSurfaceCS"], ",", 
   TemplateBox[{
     FractionBox["2", "3"], 
     RowBox[{"-", 
       FractionBox["1", "2"]}]},
    "mvPoint",
    DisplayFunction->(RowBox[{
       TemplateSlotSequence[1, ","]}]& ),
    InterpretationFunction->(RowBox[{"mvPoint", "[", 
       RowBox[{"{", 
         RowBox[{
           TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
    Tooltip->"SaddleSurfaceCS"], ",", 
   TemplateBox[{
     FractionBox["2", "3"], 
     FractionBox["3", "4"]},
    "mvPoint",
    DisplayFunction->(RowBox[{
       TemplateSlotSequence[1, ","]}]& ),
    InterpretationFunction->(RowBox[{"mvPoint", "[", 
       RowBox[{"{", 
         RowBox[{
           TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
    Tooltip->"SaddleSurfaceCS"]}], "}"}]], "Print",
 CellLabel->
  "During evaluation of \
In[39]:=",ExpressionUUID->"e1151e2e-2d33-4090-9599-17d7672d5cfc"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Options for \\\"NormalVector\\\" and \\\"NormalVectorStyle\\\" \
\"\>",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
        RowBox[{"-", 
          FractionBox["1", "2"]}], 
        FractionBox["1", "2"]},
       "mvPoint",
       DisplayFunction->(RowBox[{
          TemplateSlotSequence[1, ","]}]& ),
       InterpretationFunction->(RowBox[{"mvPoint", "[", 
          RowBox[{"{", 
            RowBox[{
              TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
       Tooltip->"SaddleSurfaceCS"], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
         "RGBColorSwatchTemplate"], ",", 
        RowBox[{"Thickness", "[", "Large", "]"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"0", "0"},
       "mvPoint",
       DisplayFunction->(RowBox[{
          TemplateSlotSequence[1, ","]}]& ),
       InterpretationFunction->(RowBox[{"mvPoint", "[", 
          RowBox[{"{", 
            RowBox[{
              TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
       Tooltip->"SaddleSurfaceCS"], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[<|"color" -> RGBColor[0, 1, 0]|>,
         "RGBColorSwatchTemplate"], ",", 
        RowBox[{"Thickness", "[", "Large", "]"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
        FractionBox["2", "3"], 
        RowBox[{"-", 
          FractionBox["1", "2"]}]},
       "mvPoint",
       DisplayFunction->(RowBox[{
          TemplateSlotSequence[1, ","]}]& ),
       InterpretationFunction->(RowBox[{"mvPoint", "[", 
          RowBox[{"{", 
            RowBox[{
              TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
       Tooltip->"SaddleSurfaceCS"], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[<|"color" -> RGBColor[1, 0, 1]|>,
         "RGBColorSwatchTemplate"], ",", 
        RowBox[{"Thickness", "[", "Large", "]"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
        FractionBox["2", "3"], 
        FractionBox["3", "4"]},
       "mvPoint",
       DisplayFunction->(RowBox[{
          TemplateSlotSequence[1, ","]}]& ),
       InterpretationFunction->(RowBox[{"mvPoint", "[", 
          RowBox[{"{", 
            RowBox[{
              TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
       Tooltip->"SaddleSurfaceCS"], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
         "RGBColorSwatchTemplate"], ",", 
        RowBox[{"Thickness", "[", "Large", "]"}]}], "}"}]}], "}"}]}], 
   "}"}]}]], "Echo",ExpressionUUID->"b8b5b69e-767a-4deb-809d-0920a1f24a00"]
}, Open  ]],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1:eJx1nHu0XVV1xlN5VLFDGfis8vZWWpXWMgR5XF1aHJrIo7QwRB3YWkzA0XjF
YX1CMBRtQYJiLsFcBMReKDGP8riEg+Ue2OQkBmuAwCYkcE9CwuERgvJGpL5O
417z952uD8M/Z9yPlX3m/u2555prrrnOfief9vezXjZt2rQ9d5k2baftn/tt
Oub6fv+pis9f3XTJKds/0ylfuPbi1sjPpH/7oOdO3P53WvLK15w10n1U+r5L
Pjxj+9/pyfEvnjI0oyf9+v3GD9/+d5rVXKcr/VvNdboxvrbxdegd0ztpWvyH
Hn+eFeOTja/i+qbXVdiTzJ4Y37PxvSruN9n9VsEnGR/sTsZT9wNXePI3n9+/
+eSjLj17qzijXz29fu/ZCx8SZ/QzF3195l0f3SzO5XU2iHM5fq04l3olzujO
2caLs11fnM0ecTb7xdnuV5yNjzgbT3GGH/7JOHR48jefw1s/9q6Fx28RZ/TR
V648/qP7TIlzeZ17xLkc/1NxLvWbxBndOdt4cbbri7PZI85mvzjb/Yqz8RFn
4ynOcOJ9hzM6/sm/R4cnf/P5w9NeduSWR9aJM/qcwm9rG79KnEt9uTijO2cb
L852fXE2e8TZ7Bdnu19xNj7ibDzFGR7ETzij877DGb30z550ePI3n5c117lN
nMvxlTiX+jXijO6cbbw42/XF2ewRZ7NfnO1+xdn4iLPxNH+uNR+V/lwrfpb+
XNv73pOOf5b+XBvP2sYvN39Gv9L8ud6BP2u8+bOub/4se8yfZb/5s+7X/Fl8
zJ/F0zh3NL+XnDuaj0rOHcXPknNH3ErOHflnybkjniVn9AXGubMDzhpvnHV9
49wx/+/Z+OXGWfdrnMXHOItnZXkS/51l87p0m4ekW9yUbu+5ja93oHdeok/b
wX9w/sN6/RIdzn94fO8lOpxdh7PrcN6Bjv8k+Js/J56X+XMq53f5c7L3VLrF
Txt/ZWX+nPDPHXE1f2Z8Mn/m+sn8OZXvV8/GL0/mz9xvMn+GTzJ/hmey+JyI
Jxaf05nlvCCdeGXxOdn8Lr2Mh7WNX26ca/HfkZ9afE5l/KlNX26cZY9xlv3G
WfdrnMXHOItnsnwjMT9avpGYTy3fSJZ/Sp9Trgukl/N7beMrcS71a8TZ33vL
N8w/a9OrZPlGKvOfno3XvJ/sfpPlG/BJlm/A0/y5l8j3LH9Otj6STj5p+XMi
/7T8OZX5am3jV5k/9+TnO4qjlj+nMm+pTV9l/ix7zJ9lv/mz7tf8WXzMn8Uz
2Xow2fpdOusdWw8m1kdwRoe/rQfN/2sb/1NxLvWbxNnnJTjbeHG264uz2SMu
Zr/+tvtNth6ET7L1IDyT1TcS63GrbyTW71bfEH84o+P/Vt9IZT2htvFrxbnU
K3H2eR7ONl6c7fribPaIs9kvXna/+tv4JKtvwFOc+f/Ul6xeJ/5Wr5P/wxmd
+GP1ulTWx2obP8inS32Q53neBGcbL852fXE2e8TZ7Bdnu19xND7623imVX8+
963d1hMVn59991ffePbCAX/9/y99aPNU6wnGJxsvLja+susnGy/dxicbr7/1
PaU9g+uZnaZXNl7fa/br+s+e/ehnRrpPVnz++pefXnvMCunJ9MrGJ9OT6bKP
f7d57Jn9//84/n/oGoe96PzNv7PrVHadZOMru05l16nMHl3/zP0ebvf7g/g3
fPvz5/f7W9P9s05fvf1T13Od8Y/PemHF9NGH08FLdr+r31cdrtp0wn4/2P63
dMZf3P/lC/OHHkz7N+NUT6p+3fjzZullvbSbpprvVV2kek9jzwbpjP9ZY8+6
NNSM0/q++m1z/bXSGf+d5vpr0gGNrnVqNW3y9+OpM4+10fP9LxxmPNe5sLnO
pMajH33iB56bPrpg+M15vPzh+caeqkJn/Ln5OtXe2U6N/2W2Xzrj52X7qw2Z
g8YfnvlIZ/y2zKfaJ3PW+Bczf+mMPz/i6rvyc9T4jfn5Smf8WH6+1X3ZTzT+
iOw/0s1/qjnZDzX+e0f+5Ku/90t0xnMd/JZ5I+yRf6KHPfJD9MUnXHbJ9NGN
8jfNP00cXi+/Qs9+e7f8B33/Zvxq+Q/6nzV6S/6Afuv0V+07OjRf/oC+Zx6v
54u+d76+niP6wmyPnhf6Ptl+PRf0Rfl+xd/4iLPxFGfm4f+N9xTO6Mx3cEbf
N3jCGX15zJtwRv92vI9wRr8h5l84o7cafUKcy/XcPHFGvzaPF2f06yIfgDM6
7xec0Scir4AzOvzhjM57BGd03js4k9ccEfENzuiPR3yDM/pY+Cecy7rxGnEu
r7NKnNEviDgGZ/TRRl8qzug5vn1DnNHPyePFGf28iG9wRn8s2yPO6PCHMzr+
D2d04huc0YmHpT/X4c9rzZ9rcSv9uQ5/Xm3+XIc/d8yf6/DnSfPnOvx5wvy5
Dn8eN3+m3nCG+XMd/jxu/lyHP0+YP9fBc9L8uQ5/7pg/1+HPq82f6/DnNebP
dfjzWuPcCc6Vce4E50nj3AnOLePcCc4TxrkTnJca505wHjfOneA8apyp38w2
zp3gPGqcO8F53Dh3gvNS49wJzhPGuROcW8a5E5wnjXMnOFfibOXes+DsOpxd
h7PrcHYdzq7D2XU4uw5n06fB2XU4uw5n1+HsOpxdh7Pr5s8p/Lkyf45132Rl
/hzru1Zl/pzCnyvz51j3La3Mn1P4c2X+nMKfKziX9cXZbfPnFP6czJ9T+HMy
f07hz8n8OYU/J/PnFP6czJ9T+HMyf07hz8nic3Bea5zr4LzGONfBebVxroNz
xzjXwXnSONfBecI418F53Diz/j/DONfBedw418F5wjjXwXnSONfBuWOc6+C8
2jjXwXmNca6D89pk+UaKfKOyfCNFvlFZvpEi36gs39BzsXwjrrOqsnwjRb5R
Wb6RIt8QZ/TIN9qWb6TIN5LlGynyjWT5Rop8I1m+EfzXJMs3UuQbyfKNFPlG
snwjRb5h/twLf95s/txT/cry5/Dn9ebPvfDn2vy5F/68xvy5F/7cMX/uhT9P
mD+znzDP/LkX/jxh/twLf+6YP/fE0/Ln8Ofa/LkX/rze/LkX/tw1f+6FP29O
th5MrF9sPZhY79h6MMV6sLL1YIr1YGXrwRTrwcrWgynWg5WtB1OsB8UZPdaD
bVsPplgPJlsPplgPJlsPyj9tPSieth5MsR5Mth6ET7L1IDy9XpSiLlRZXSix
rrf6T3B7sLI6T/htt7J6Top6TmV1mxR1m8rqMCnqMOKMHnWYttVbUtRbktVV
5LdWP9H7bnUS+afVQ8TT6h7wSVbfiDi8VZyp110S9RCry4m/1d9S1N8qq7Ol
qLNVVk9LUU+rrG6Wom5WWX0sRX1MnNGjPta2eleKeleyulaKulay+pXip9Wp
9L5bPUr+aXWnl/Dk84AjLjivP/cxrUcuuvMNW6aP/rya27/hC62RR7Qe+a8z
jtppdOiJ6sK5p76+e0hP6xHq0D9u6sybtB7ZeO/EjKEZT1abZ907rdtar/XI
c1Gn7TV11zu1HtntnW/6Tmvkqeq5xas/0BoZ1BtPjXrXMVY//FrY/93GHwZ1
Quy/qnmvb9d6BPun3/66Y0e692o9gv2dbL/WI92wv7fuurNaT/S0HsH+RQcd
PDV/aFB/W/GjD17RGtla/WTl5GX9uQ+LJ58HXnzj4n5/UH97Zo+rt00ffay6
7IQ5U1OtB8TzFbc++CejQ9uqjz35/bvmD90vnvuOvO6d3da26lv99QcPzbhH
PA9904zjh2Y8Xn1p9xmvHZrxU/H829vmfGmk+3j1b/vtfchI9ybxXLqD+lsn
7H/b5D6zWyM3iudU2J/98DbxxP4XZr3h662RWjyx/yPZfvHE/svnnrth+h5b
xBP7P3L7Ia/uth7S+u64sP+4T3z8gv7cAeddjlv8zZFur/r00Y9d25+7RZz3
+u3GZa2Rh6rWrM/fPH9okzjz+dolf3Fuv3+fOGd/elh1cjjP3Pkrrx8deqT6
4kHX3TvVGtTJ51y39LBu65Hq5ef+YJdu68fifOE/bD5paMaj1Rsu/uIBQzMG
dc6nin3RQf1t17D/loO+fNJId1B/2zvsv/PIo7/WGlkpztg/o//Xn+v37xBn
7KfOA2fsv+GEW05qjUyJM/bvfMqhHxiasUWcF4T9zzzy7+P9uYM654XNe7Sx
2iO4wXll875sql7T3O962Zffiweq88M/4cznbyK+wfmHl0z9ZvroluruWcvT
SPcn4pz98sHqe818sUKcN/zi/Ud2Ww9Wi3e/443d1nW2v/DS+ttFYf+VTRxY
Js6rwv4Vzft+szhj/1XNe32bOGM/6y84Y/+BS2bv1m2tE2fsn9n/l2enWveL
831h/1s2nTK7339AnPdsnvs91QmTZ1/d798lzvl+1sV+1p3inJ/jvdXLl7z8
tvlDa2Rffq/Xqw4PZz7/sok/K8Q5v6f3Vx9v3tP/Fuf8Pk5VX2niyRJxfjrq
Wp+2+tveYf/tjd9eIc7HhP3ZP5eLM/bv1PjhreKM/axb4Xx/2P/h8H84Y/+K
5j2qxfmwsH/Wk9X8fn+9OH+4sWdV9fbgUObDq6NuvEKcd2uu/z/V0zEfwTnf
/5rYL5sU59WNX91RvT7iAJxVH2ryhGvEeUXjJ3dXlzXf+x/i/EzUtf7Z6m/H
hv15vbZAnJeF/ZnbVeKM/SsizsAZ+1nvw/nHYf8RS85fM320I87Y/56I/3Du
hP3HxnOB85bG/tHqweZ9ucDqnONR57xEnD/b2LO0+n5wgPPzzfiJ6qaoG8D5
2uZ+WxqPfZ9prjNZfTeuD2c+d53M9sC5/Pybw+C88xXZ/tXN954szi+G/ZON
frY4fy7sfzqeC5yx/0dRJ4Hz1WH/sohLcB4J+5+K9wXO7wj7r4g8B85DYe9l
oZf1isnIq5dr/vvP/L3pivheOD+W7UxXh51w/mi+r/Rg3Bec8/MdT4uCA3zX
5eeeLg1u8P1Z1LU+afU3rafDT+D8ybD/3+I5wvnKsH80njucsX9Z+AmcPxH2
Mx7OD4T9X4jry5/D/qVhD5xzPL87HRV+Dud9w94j4r2A8635PUqHxnsE55Pz
e0cdRpx3zu9pquI9hfNV+b2Ode5V4jw9x4F4vgvE+edR1zrZ6m+3hP0LgoPy
jfjM65FrxBn7Xx1xDM7YzzoRzruE/Y9FnIQz9l8UcRXOHwz7D4g4DOd357id
ZkbchvMf5zifiPNwxl7yIjj/MM8j1APF+at53knMO3DO88I6vS9wfnOe19Jd
Ma/BeWbUtY6y+tvBYf/smDfhu2vYf3zMs9jN59uCA5yxf6+Yx+F8eti/c8z7
cMb+buQJcH5T2P93kVfAOfKo7XE25yFwrnLekshb4Lwo5znpHZHnwBl7yYvg
/HTOo9KiyKPgvCLnXdGPdLM4j+Y8LS2NuATnJ6KuNdPqb+vD/vHIA+F8S9iP
v8EX+++IPBO7+Xwh8lI4PxP2nxd5LJyxf/fIe+E8P+x/deTJyp9zXp3Iq+F8
Rs7DE3k4nD+V8/ZE3g7n7GcPU28RZ+wlLsE555MPpbWxjoBzrJvSqogzcF4c
da3K6m+jYf+rIg7A+fSw/2WxDoIz9n8u1k3wxf6tsc7Cbj5ZX8AZ+6+PdRyc
dw77T411H5xjnZtYJ8I5x5PHE+tKOO+T16GJdSicc5zZlk6Mdav8Oa9z04ux
zoUz9pIXKa/L6+h0UKyjy7r9S+tvx4b9p8c6Hc6HhP2nxboeztiPf8IZ+0+I
ugF8sf97UWfAbj7fHnUJON8a9q+OOgacoz6Trll34Jz+3EH9jX466iFwnsr1
k/RQ1E/gvLLoS9wkzktzfSbNiPoMnBfkek7Eh9vFOexKP4j8B877Rr3rPqu/
vSLsfzTmKThj/8aIn3DG/m7Ur+CM/Sui3gXnZWH//KiPwRf7z4x6mvGsgqf4
v7LUlQfGZ/XWXK+rrI6Xoo7n41OM9+sn/17qhNFv5nXXKuqug3Pg8f/ph2Qc
OuPpo0KnPknfDzr9VPSpoNP/Q19FOX7Qf1Dqg3106wvQeUAbr31Nu7724cye
wXmP0n7tc9j9DvraS27qm+R9oh5e9lluFWd4olNXhyc6fWjwLK+/TjzL8WvE
s9QnxdP6KcTTxounXV88zR7xNPvF0+5XPI1bVdbft76EM/GJ/ls4o9OvC2d0
+iThjE5fH5zR6UODczl+tTiXekucrT9FnG28ONv1xdnsEWezX5ztfsXZuImz
cRNn4j19y3BGp89Z/aPszwRPOKPTJwln9NJvaxs/OPdb6hPibP0+4mzjxdmu
L85mjzib/YP90fJ+xdm4ibNxE2fmT+rYcEanPxzO6BcX/tmTTt8pnNHpk4Rz
OX5SnEt9qThb/5Q423hxtuuLs9kjzma/ONv9irNxE2fjJs7kI/TJwxmdvno4
o+9fvO896fTxwhn9goJnbeMnxLnUx8XZ+tHE2caLs11fnM0ecTb7xdnuV5yN
mzgbN3HWvkpwKM+/j7U5RwB/9dnFOYXyHP1Ym3MKPBfG05denqMfa7MvxvNi
fKvg37O8ft4wz1Hr2vD/8tw99n9jmOdbXn9cz728/hnDPPdy/Kj8oRw/exh/
sD7Es6YV/6kPUX5i11dfnV1f/V5mv/zK7FffkvGRvxkf9d8Yf/mh8VcfiT1f
+ac9X/VDmL/Jb83ftK9v/jboAyj9TedeWH9wngX/ROf8C36Ivmcxv/ekX1u+
p9LPKeOnjee5dEynT3LaNO8/5bnbePXP2fXV72X2qD/J7Fc/jd2v+j+Mm9Yn
xk3xgfXcvDLOSOfckM6TUAeNeAVn9OvK+V36eWV+a+MnxLnUx8XZ+3nhbOPF
2a4vzmaPOJv9g36p8n7F2biJs3ETZ9bH28p5UzrnC+CMvrDMP6XPK9cF0h8r
5vfaxk+Kc6kvFWfvj4azjRdnu744mz3ibPaLs92vOBs3cTZu4ky94fwyD5T+
YrnelM65Gzijc04Hzujziny1tvGD39kp9Qlx9n5z9T2X4wd9uuX1xdnsGfRB
lvYP+vnK+xVn4ybOxk2cqd+Mlesa6azf4YzOOTI4o8Mfzuil/9c2frU4l3pL
nL1/H842Xpzt+uJs9oiz2S/Odr/ibNzE2biJM/UwW6dL5zwjnNF5LnBG572A
M/q2op5Q2/g14lzqk+Ls5yHgbOPF2a4vzmaPOJv94mz3K87GTZyNmzhTz3Oe
6PgzPNGJJ/q9ttAPL+pdtY0fnC8q9cG5Fz9HAk8bL552/cHvuZT2iKfZL552
v+JpfMQTnfon/XzU6+jro/8MnT40+qXQ2degvwedPh/6UdDpS3lL5Dfol0Z9
m31odPZ92DdFZ/+UfT509vvYl0Jnf4p9FHT2U6j7o1OXpt+OOht9d53or0Lf
I/bL6GdCp6+J/puyvrci6h1rrY53m/aD0dkXZv8SnX1M9tvQ2XdjfwidfSL2
A9DZ13g2+sOod82L/Rf6mdDpy3pF9N+gPxX7DuxHorOvyv4ZOvuA7Pegs2/F
/gQ6+yzL6AOLetFbIv7T94NO/xL7c+jET/aT0NkXY/9D/b+xj0P/E/UT+qDY
f0JnH439HnT2fdgvoT7Avg99wKyz6AdeuoP1O/2X6PRh0i9o681h+tvQ6XOj
Hwudviz6WtDpb6EPA51+DPoG0OkfYJ8bnf3uxbZuZX+WfcTS/gVt7QPF+pR9
MfbDGM++GP2+rKfo+6U/Vf0jsV9MPyW6+iojvqHTB0i/Gjp9a/SjoNOXQv8E
On0U7Pejs+/P/jQ6+9Tsp6Kzr8r+H7r2ASOOsd6h/5Y+UXT6RelrRKe/kT48
dPrx6P9Apw+EfgX1rUfcY38dnX129oPR2RcmXqGzj0k/K+sL+lqJV+j0w9Av
iE7fIPEKnT4K4pX64Nj3j3iFzj418QqdfVX6PsnP2b8gXqFTByZeodNXQLxC
Zx+ceIXOvu2qiFfkq4dHvxbxCp19c/Z30dnnJV6Rj7HPy/6uzZvMo5pP2bcl
D7H904r9YPIT5l/yZ8tbGJ9sfNoYfZlcfyr63DgvwXzHuY+fR78j+nnRLzcz
+vPQ8X/OVzAfcU6EcwLonHf4TPRNSo84QJ8iOv2KnehLQ+d5cX6D+YhzKJxD
QOc8BX3z6OybvBD9mujtqMPQX4hOnyT9cOjUhejfUp9U+DPnYZjvOBfDuQh0
znfQx4/OeYTF0XeOfk+8j/SVol8aPE+MPkj0LRGH6TtEp/+QPjl04gN9Xej0
d/E+oJOXck6GeZzzPpz3QOfcCucT0DlnQT89OucC6P9Gp499dvTRol8Ufkvf
Kjr9q/QpotNvSV8dOv2B9IGh089G3xI6/VfEAeZlzjdxPgedczqcJ0HnXAnn
H9A5B0G/Pjp9+/SXo/N+0aeLTr8ufaXo9JfSB4lOPyR9e+j079Fnhk6/GX1R
6PRHcY6LeZnzXPRho9OP/d2IV8x3iyI/5JwSOueVno84hn5jPPd/jDiG/o3w
E+IY8xTnxYhj6Jx7+nzEMfRngxv9yuj0IdNfi06fLXGMeYrzaMQxdM5VEcfQ
ydufjTiGzr4McQydfulPRRxD/2asC9RHGzr9qJyL473nfBxxDJ11CnEMnXUN
52fQOUdDHFNfVfjVSRHH0OG5a8Qx9G3xfhHH0HeKdRn9nejkJ8Qr5nHWfcQr
dJ1Ti3iFzrqSeIXOOnS3iFfonVi3nhbxCv3piDP0qaPTr068QidvJF6h0w9M
vEKnf5V4hU6/JefudA4v6gCcE0OnbsC5JnTON3EOR78HEHUJzo2gc37kryIu
oF8VcYC+fHT68+kjR6efnL5ndPqf6dNFp1+XvlJ0+kvpg0SnH5I+POuvU55E
frX8oI9c0u8Pfg8Q/f1v22tZf+7gd//KOs+gvwH9huY6g3kIPZ/7GPxeH3qs
+7TOQb/Izsmij+XrKH6hX5+/V3EE/eJsp95P9Pfl+5Ifl9cZnH+HU84TNolD
WecZ/J4hej6/NvjdOfT35jgvDujva/QbFd/RD7NzrOi5/jb4HTl06p/lebSt
cR5tk+4X/R25n1b+gR7+oPyy7Ju6R/eLfnR+L3S/6A8041fqftG3NPr1itfo
3Xx92Y/+muz/sh+d+8J+dJ4vdnIf0f886P8I/XdR18VO9D+Kc3DYg74x7MQe
dPotsQf9kvBDvhe7Ujx3vhf9/Y2+SPEO/cB47lwffXn4P9fhe3Zq7L9ccQH9
0niPyn7Tsfbef7r0jn5/wXDZNznW/tTt3XX9/vzhss9vrH1c/40/6ve/NVz2
pY21s13nDJd9VGPtmc11/nW47PsZa3ebcV8eLvs/xtqbGv3U4XK/f6y9Luvt
cn96rL0+X6dd7qeOtf8pf2+73P8bi3HntMv9qrH2sfm+2uX+ylj75MyhrTge
9l4e8arcPxhr75V5tuHJfbw7P3e9D+j35/dC/of+i3zuSf6Bfmj2Ez1v9LwP
fvngfFDo+feHL1BcRX8mj1eep3NC4YdwQ3/2pvK9QL8v3mu4oR8Sfg4f1dMi
/sMBu3IcWCkOOtcY+zVwKPPnG8UB/VfBDQ7ovw0+3C96PBfdL/ovIj5wv/q9
gYhv3C/6oRFnuF/0hTEPcl/lfvptui/0HJ9X6L7Qh+N+dd489PeGP2A/OvZg
P/qHIm5jP3rML7IffSLmd+zkezhXiJ3ov47nhZ3ov4vnon3c0KdifsEe9MNi
nsUe9LHIQ/herrcp/IfvRd8c7xfXR58e8zvXR495RO85/y7i9uC8PHlp5FG8
/8RX4ip/2zxr/VhbK+Kt4kLoxA2uw3tDnsY4dPIWro9O3NZ7Tr4TfPDXcl5e
WQ3257L/kgfyvejkRfx7dPIH7EFnvsAedOIe9qATB/BLdN4j1Q3DT8lLsbP8
nYG7ZSc6+Uxp3wblD+U8t6FiXsN+dOJz+fskGyrilc7vhM77rvchdN6vHdWv
ynPWa5Vvc7/o5J/cLzp5GveLTl7E96GTt8ABnXkcDujMR3BAJz7DAZ34Bgd0
4gkc0DeZf9q+kjigk2/DAZ28FA7o5IFwQCdPww508i74oHs+g+7zMrrPU+ge
59E9rqJ73ENPFk/0eyR2Tg2dvEtxLexlXQZndNYvyi9DJ0/T73KETh6i879x
36zvuL7NU7o+Ovke19fv08Tz4vvQmff5XriyfuR70Vln6Zxm6KxfsKech8+R
PejkUdiDTr6hc5ShM49jp81TshOd9RF2orOews/LPqiB/ejkw9iPTr6H/YpP
EU+wH518g/spx9+j+7L5VPeFzrqV+9L58rhf7qvsOxr8vgz6geY/6OT5ymtD
J4/lfvW7UPFcuN/yvOrg9/3QyWfEMXTyEDhonWF1G/TlVq9Axx/ggM46FA7l
dQa/14fOOpF4gX65xQd01jtw0+82RRyGGzr5sH5vJ3TyTLihk+/Bze5XHNHJ
x/jb9zH/D0Fp82k=
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], Opacity[
        0.5], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1: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
7vuo2nBm7nc90pCXRPcE9F7mymjNpnc37aK1nPLalOT+mt7jXBFdB6kvdzk8
LrOe6RCt//WObAnHx2R+F/ZT7vpX7wJ25u7h6B3BP7n7KqpJH4yOG6rpBkfH
MdV6D0THOtUO63L3fFQvbM3dB1Ctd29073QO6/MM/gVwS7gq3DZzXTk99zs4
1XfTcr8zUh36eu53DdLqm+EzMtebg6L7peqXtIius/QuYHfunpXqx6GxiDnK
vbl7TcqzzyX3x9X72pa7T/JBcH9UveKRwXlY66b3CP/m7jWpJtqSu8eiWmND
7r6K+vCto2s61bkzcr/nUk+1V7T2Vj13cnS9qR5mj+h9or76ufCwzPX+kOh4
qHcTi3P3OtTTeC93vFpRPLOKseqBfJX7vaf60suStY76IV8zHp25r/JF7nep
eg+SR6+5eiNf5n7fujf+H7Ejc+eC34v4rP7P6tzvU9T7Wgu3zNzreDf3e0nF
859zv5PVbw9MvhbFhO+KOKPz909+7yI9vwfWHf+twTl8AHx/sK7ROii/D0/u
meqd6S+5e0Ttg69R8VY9ojm534Wpflb8VK5Rb/PX3P1GxUDFScVD9eK+SN5z
6t82Yl7fzLpIcU/rqT7J3Nz9T9V9Z2IjM7+P+y13r09z1ffQfNW2K3PnDumK
Psl1r2qUUtG9x6bBWkP7Vu9cGkbXF6pN/yzyrPpRs4o1VJ9qdu733epnbsr9
rkp5eWkRY9V3+ij3e9L/A8oL5aY=
             "]], Polygon3DBox[CompressedData["
1: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
jXtMfumQ9eWI4DzSI8+3AXn+tc/60ifnj32yvh0ZnD86Zn84Klhf22Y9PCR4
frbL+nlocL7plP3huOC81Tnrc79g/6HnyFw7LDg/dcn6eHxwXuuW5/uJwfms
a9bzE8iB0WtyYM635L2eOZ8NDM6zfXPeGhHsV62y3vYM1uM22Q8OFm8T7UF4
D3Nyq2hNQAuYwzWiPRTvZI6TP+mJkC/PCe6F0BO5E/8Jzsf0JMiXpwfnQXoM
5OPRwfmbHgN588zg/Nor571BOW9T45MnzwjO1/RQyItDg+f6knz9mPPkIXoQ
5PdLND5Ix//Ra7PI6oX7MT8n13/0uw4V/ySeVLoe5L3p15BF+Qzqxe+S+4vj
ucfiH8WXkxXQDPH34nHiyYXvNfUlWYB7zrWmPzk0r9e9xN+wpkr3L48S/yK+
Snxz4bn3bbK3MQfpb36d3K9FD/YTbxCfX7rfeYz4V3Ss/H//hH4K2smcniDe
SuHpafHywrU7NfyO6HXpXjM9553Ef5fuBVDjNhb/lfMJNRd5ZZvg/ELNSK1Y
BvdvftBr40v3w8kj9LTpjYTgvEIPm15I0vNEvELf5xmdv6KwX9MTp3cSyQsa
30bjz2p8ZeH8Qw+dXnjVnKeoEakNNwv2u3HZr6eLeyf3e59CW/TaeRqrJJ5b
uj91gvgPnXOT+DbWmPh38Y3iWYX7pX8l9+tuL9yv+i25P0U/6kTxn+KbS/fz
zhD/K75HPKfwWqO/RW3DmjtdvEnjd4sfFg8W/y2+TXxf4bVAf5ZakTUxRLxR
47NL98eYy/TXqEWZ0/Tb/knun9F/HSWu0O97hCzD9ReX4vtK93svElcVP0oW
Ltz/CxXuB9PfQzvpB1KboaFnxuJ/YftetJ01LY7ih8kS4pHiJJ6D97PGxZuJ
F5G9C/cvK1e4H0j/b7S4inghWV18sXhz8WN4UeHsRL+T2oUMNUa8hcYfL92f
5N7STyWLcY/pr25Z4f7lEq6/rsVbwbXpxtL682n2K3qy1N+bxPsW7vFSb10d
Xa/SI6Feu4o1XrhHSm1Ijfixju8NrlWoWT4S3xNcK1IzrhPfJ/4GbY2uxb7Q
Y0P0ngO13vrCWoPmMFdODe73zdfzZ4V7tvjjxmg/pYdB7UMN9KH47uC1wpp5
RzwzuNai5vpAfFdwbUeNtxbtD66Pro2uv+gZspZYU+8KZwXXrtSw74tnB9e2
1LjviW8Lrh2pIdmvoAZGO9CQtzU+I7jevSa6nqbHSC+KntQgHbcI7lXRs6KX
untwr4ueF73zlsF7Cewp0CvbMXivgT0HemU7Be9dsIdBL6xJ8N4HeyD0XncO
1mI0Ga0+Nlh70CC07+Rg7URD0aLewVqL5qLNhwdrNZqN1p4UvJdC8X6ynnYJ
3kshL9Kb2yF4r4Y9G3pv2wfvPbAHMVDcPLj3Rg+OvYzdgvcqqHv6lt6zYC+B
PQX2KhoE7+2wx0PvrmHw3gR7FOy11AreC2JPiF7edsF7NezZsPdTO3ivhT0X
9na2Da6vr9fnb1u4p0uvhp4N/F3p+n52dO+O+pf6/vZo/abnhzagEdTuNwSv
ZdY0vYLrg9cia5Ja/abgtcsapja/MVh70CC0fFrw2kcD6JVcHay9aDBaflWw
tqFxaNXYYC1D09DmccHagsbgVVODtRWNRVsuDdYiNAltnxJcy1DT9CxdQ6AF
aEKL0jX4Y9w75mDpa0KtQc3B/elfuFanZt+ndE1EXbA+ef+PPUK0EE1EOy8L
1k40FG2aFKy1aC5adnmwV+AZaPdw8S7RNSy1687Z6/F8sggb23gBnoCWjgnu
n8yK9mN65vSvZkb7NT1y+m0zov2ZHjT9rhuj+zX0+OnP3BXtt+xJ0F+5LVof
6bnTX7pbvFvhPQr6QXdE+zV7CvR77oz2Y/Y46K/dEN0fop7lWnJNK4s/Lt2f
uS66f0OPHe/EQ/Ge84O9Fs/FG0cFZzEyGV5ycbCX4ql4zXnB2o7G05u7Obj/
OT26H0aPn/7pTdH9K/Y86JfeEt2PYo+F/ujN0f0q9ljIRmQkvHZYcC+Yeors
1Tk4+5EByQJDgntx7MewpxYK62uv5F4gPTTmxnbJesYcYW+wYbLesUeIvjQh
TxbOhOjTzsn6Q0bCPw5P/n30HPGbw5LXFz1J/ObQ5PVFj4zvu31yLUNNQ++P
Hna1wj1A9q4aJOsPe1jspdZJ1jP2VNnLqp2sn+xpsfdaP1mv2YNlb7Zesp6x
R8teKnuqA8TNguvR9lnX2ItFf3dKzp5kYvzo4GS9oAfI3m3d5L9nD5e9s22T
9Zw9NPxw12T9JoOzV1Iz2Q+OzP53SLIeLc/59L7otcz/iSD7koHJ3scEZ3Ey
OdltcPaXKnocXHjPGj2vnLzXTn8NPS2T61P2wPGfzZL78+x5o+dbJ+szeyr4
2TbJesweDPpfLXmvmT1o/G+rZH1nTwb/qpqs5+zBo9c0K6mv2SNH7/+Nrr/Z
k8Yfqyf7C3tC7E2zR8371w/O/tQAXO/u2c8a6XFB4RoCf9w82Q/4PwLsJdVK
9lP2lPDDxsnznZqCvaoaevQrvGeF31Qk1+f8HwT8KSXX2/tl/4rJ/Sf2xPHD
Ssn1Ov+HgfXTNPl+TMp+0jlZr8mc+OsWyf7F/1nAT7om6yUZj6zRM7mXTuZA
P1sk+zmZm7zSI9lP6LmjD92S9XdxXt/Nk/2cGgi/2TfZX8j8+FPHZH0lI5PF
yeRk0YnZf9ol6zWZmjzUPdmv6PlTD90TXW+wJ4W/7ZfsV2RcagdqCLL9yOD6
6t7oeoU9Uvob/0T3U9jzIl+xx7CmcI8eP2ybrE+zc147KNlPqYHwvz2T358a
A/9ohgYWrhnxww7iRYUzOnq7e/J6oMYhe5PB0a/rsl/tnay31Aj4217J+kzm
x9/aJ+s3NQJ+vE+yXs/JefCAZP+lpiSfHpjs19R06Htrrlnhmht9b5msr9RM
5ItOydefmgH/a5Psh9RE1G7k52WFazj8pFVyfqYmI390SfZjaoj/Aj92vX4=

             "]], Polygon3DBox[CompressedData["
1:eJwt12eYVOUVAODZnQGkiYhAEFCRYqQZqYYauqFLTWhGqlGKSjNSlS5NBYFI
01gTUWOoKqChiQVQEVBpiu3BAoiUKC3vee78OM93znvP7O7ce7+y5foO6zQ0
N5VKvS3yiE2ZVOrXdCpVEFbNSaWqiS/lL7MCxirqWvoeVH8rnmBvsM3sDvUX
4gG2mD3NjshfYvmNlVlN9q78H+yk+gpRmm1ly9kP6owowd5hT7Gf1JeLq9lG
9gT7Rl0snK3zN59gP6rzicvE+/qeYafkV4my+o6qF4tr5CXYi3q2iyfZCXUh
Ucq1HexZdjon6Yv+/uoafs/4uBdsDdsg/zv/Wl1UFGbr2SL2lbpI/Ez2BlvI
voweUZB9xJ5jv8T3EuXZx+wFdk5dRlRk0/zOa+NvFmXkDfVsFkvV3+lJxfcz
bGHL2PfqXFGcjdFfWFR2rQf7s5iuLqfvOlFW3si1TWKJ+qjrF32umJjsWin2
G1FKXk/Pe+Jp9c/6roy/Ud+N6mtdb+LavexvrC87IsbEz2XPsPvimYmZbAVb
xfqof+ez98f3Zq+w3uwmNpo9z15mvVh1NiruGXuJdWdV2T3x/NgLrD27kd0Z
z4AtZ11ZFTYs3i/2PPte/iovZqzFGrB26t/qGxTPii1jK9TVxMh4H+J7iGfV
N4iBbIH68bhn6tpiUm62RzTy8yqwP7Hp6rl+XktWif2FPcIWsVasIrudzWUL
2RJ1edGdTWNTxS36yrGObGI8R323qR/iH8sXx30Vd8W7Jx6KZ6VvhWt11dfr
vY09yGawe+O9FQ+zF9lK1k1dWV8sCMvYc2yKujS/OkJe37XLLBSN5Y/JV8az
FBPVRfVcIUrE/XDtTPb+jchN7lPcr56ufy6Gs/nqpX5HD/VhcR+bx5awzuqD
YjCbHfeZ9Ys5JMbG+x/3mT3q518nbmX3s9FivfqUvvMx72P+xj1kZWMOidLy
BvpnxH2OexPzS96YdZIfEHfLZ/nc/LjP6v3iLjaTzWNd1IfEEDYnvhsb72cU
jHVSXCWv6dpDxuJRx1yS141nYCymvlKUlNdh42KuqgvFeymvwTJxP+Meynv7
Hf39jjQrwqqyXqwfyxs/i93EbmcDYy1nRVl11ocNYLnsclaF9WR92QR1kXBR
XF7Ltd0x99S/xtosKsRaom7i+uOubY31lX0q/yfPMV7PKrOf5Wl9ZYxtWWd2
Kr5L3H9jO9aFnZPnZxWMXVgvdr86N9431oa1Fj/KL8b9MzZXt9X3Q3Z+dMtN
nnc89wZ6PhRd2Ej1eH111DtFB3ZP9LEL8gI+W9HYlfVmx2IDZCWMLVn7+B3y
S3FPjC1YO3ZcnqOvpLEV68B2yn/Wd1Z9g7iJnWZ59F1jbM+6soZ6PhJd2Sg2
gQ3OvqcXsvts7Ldfu34+noexkbqFvu/k/45nbKzJ6rO9Mb/Ypfidog7bw06z
i+rqojb7la2Kd9zYjLVh38gvxHtkbMxasrfkx2NPV5cU17LzMdfjXhs7x9xl
Z+X5Ys4ZO7Lu7ER2TRyQm6xVsWadkeeNvcvYQd1N3y+xXsQ6Zmwaz5ftkp9k
Z9SV4u9m9dUfiM6ujWDjYk/J7vHHsvM55vU2139ix+Pvjc+nkvn8VjrZ177J
JHO7lnhftGND9Y1KJXvgm+lkP/06k+yHR7NrSSt2p76/xjvNt4imrJ96cJwj
5K/E/DLWYPVYRfV/08ka8m281/Ka4j3Rlg3RN1JfFfVW0Yz1Z0NYDfW7og0b
zEaweupdohMbzsbGnufnHov1Myc548RZJ84GG9PJevZVJjknNBN7RK9YV/RM
8dmmsU+Inmwsm8yaqHeLHmwMm8TaqD8V/dhkNpu1VX8m+rMpbA5rrt4rerPx
sb6y1upPRF82ic1itdU7RHs2LNZnVkm9SfyB3RH3mVVXbxct2SB2D6umflu0
YAPZMNZCvU/0YRPiXWPDs2fWQqxBzA/xlfwcK2xsqG6u75D8LMtjrM0asiHq
W3x+GlvLNrJXs/v55Nxkb4s97m59ddgUtjr2mJi/rC6bytawDey12Ov4F+r8
Eexm9TuitWt3s+FsXDwnn13I3mY72Sr5o7HXqC8kS1LqgbhPkvmubeHvsZVx
fohnoj4Xe4KYFeucvudd28cPsdmsI3uBfcIOs9Xyx2KPU1/KnvkHxruqb0K8
13wtG8p+z6azdexNNoDdzMaxl9hqtj/ODzxtrBBrGDsgX8EyxoqxtrHX5QvY
EXVBUYCtyb7Ph9V5RN5499X1+Cz969Vb4vmy+mw228C2xr3KJGeQeWwz2yQG
xVxnE2O9VK/TNzrWAvYIe4ttZyNjvrA5bGOsI2xUrAVsLnszJ/l/aGa8t+w5
tpcdZGvl82PvV6djDsb3YPPYQXVOfI9Usr+/lk7OQYcyyV4f56j16eQsfSST
nKnizLQuney7BzPJ+amkeCOdnBU+j30pnZwhXk8nZ4XDmeQ8EeeZDenkTPZl
JjnbnJT/x1jKWM/f0szfclj+C8tnrMsas/zq1fE8WSfWgx2U/4/lNdZhjdi7
2T356txkXsX82pP9v+LG3GSPjr06zj1r0sm5ZX8mOQPFuWJtOjkHHcgkZ4xp
MQ/kT7EPfe7TODex5mwR2852sbGx5rIFbBvbwabHGsmeZrvZZ+zhWNfZs2wP
O8BmxJrLnmEfs/3sM/m/eK6xPKuSSs7OLfQtYe/nJOfoSbEGsaVsR3xXdlFe
kFUydmN92GR9rdgytpPtZZfkhWIvNHZnt7Op+v7InmQfsE/iTM1uZcvZLraP
VWXb4j6wAWwo+z9nGNI8
             "]]},
           Annotation[#, "Charting`Private`Tag$70947#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
       {GrayLevel[0.2], 
        Line3DBox[{251, 474, 1106, 252, 488, 280, 1211, 503, 295, 1216, 518, 
         310, 1223, 533, 325, 1233, 548, 340, 1244, 563, 1150, 355, 578, 1164,
          370, 1259, 593, 385, 1263, 608, 400, 1268, 623, 415, 1275, 638, 430,
          1284, 653, 445, 1295, 668, 460}], 
        Line3DBox[{253, 475, 1107, 254, 489, 1118, 281, 504, 296, 1217, 519, 
         311, 1224, 534, 326, 1234, 549, 341, 1245, 564, 1151, 356, 579, 1165,
          371, 594, 1176, 386, 609, 401, 1269, 624, 416, 1276, 639, 431, 1285,
          654, 446, 1296, 669, 461}], 
        Line3DBox[{255, 476, 1108, 256, 490, 1119, 282, 505, 1129, 297, 520, 
         312, 1225, 535, 327, 1235, 550, 342, 1246, 565, 1152, 357, 580, 1166,
          372, 595, 1177, 387, 610, 1186, 402, 625, 417, 1277, 640, 432, 1286,
          655, 447, 1297, 670, 462}], 
        Line3DBox[{257, 477, 1109, 258, 491, 1120, 283, 506, 1130, 298, 521, 
         1137, 313, 536, 328, 1236, 551, 343, 1247, 566, 1153, 358, 581, 1167,
          373, 596, 1178, 388, 611, 1187, 403, 626, 1194, 418, 641, 433, 1287,
          656, 448, 1298, 671, 463}], 
        Line3DBox[{259, 478, 1110, 260, 492, 1121, 284, 507, 1131, 299, 522, 
         1138, 314, 537, 1143, 329, 552, 344, 1248, 567, 1154, 359, 582, 1168,
          374, 597, 1179, 389, 612, 1188, 404, 627, 1195, 419, 642, 1200, 434,
          657, 449, 1299, 672, 464}], 
        Line3DBox[{261, 479, 1111, 263, 493, 1122, 285, 508, 1132, 300, 523, 
         1139, 315, 538, 1144, 330, 553, 1147, 345, 568, 1155, 360, 583, 1169,
          375, 598, 1180, 390, 613, 1189, 405, 628, 1196, 420, 643, 1201, 435,
          658, 1204, 450, 1300, 673, 465}], 
        Line3DBox[{265, 481, 1112, 266, 1209, 495, 287, 1213, 510, 302, 1219, 
         525, 317, 1227, 540, 332, 1238, 555, 347, 1250, 570, 1156, 362, 585, 
         377, 1261, 600, 392, 1265, 615, 407, 1271, 630, 422, 1279, 645, 437, 
         1289, 660, 452, 1302, 675, 467}], 
        Line3DBox[{267, 482, 1113, 268, 496, 1123, 288, 1214, 511, 303, 1220, 
         526, 318, 1228, 541, 333, 1239, 556, 348, 1251, 571, 1157, 363, 586, 
         1170, 378, 601, 393, 1266, 616, 408, 1272, 631, 423, 1280, 646, 438, 
         1290, 661, 453, 1303, 676, 468}], 
        Line3DBox[{269, 483, 1114, 270, 497, 1124, 289, 512, 304, 1221, 527, 
         319, 1229, 542, 334, 1240, 557, 349, 1252, 572, 1158, 364, 587, 1171,
          379, 602, 1181, 394, 617, 409, 1273, 632, 424, 1281, 647, 439, 1291,
          662, 454, 1304, 677, 469}], 
        Line3DBox[{271, 484, 1115, 272, 498, 1125, 290, 513, 1133, 305, 528, 
         320, 1230, 543, 335, 1241, 558, 350, 1253, 573, 1159, 365, 588, 1172,
          380, 603, 1182, 395, 618, 1190, 410, 633, 425, 1282, 648, 440, 1292,
          663, 455, 1305, 678, 470}], 
        Line3DBox[{273, 485, 1116, 274, 499, 1126, 291, 514, 1134, 306, 529, 
         1140, 321, 1231, 544, 336, 1242, 559, 351, 1254, 574, 1160, 366, 589,
          1173, 381, 604, 1183, 396, 619, 1191, 411, 634, 1197, 426, 649, 441,
          1293, 664, 456, 1306, 679, 471}], 
        Line3DBox[{275, 486, 1117, 276, 500, 1127, 292, 515, 1135, 307, 530, 
         1141, 322, 545, 1145, 337, 560, 352, 1255, 575, 1161, 367, 590, 1174,
          382, 605, 1184, 397, 620, 1192, 412, 635, 1198, 427, 650, 1202, 442,
          665, 457, 1307, 680, 472}], 
        Line3DBox[{277, 682, 1308, 683, 278, 501, 1128, 293, 516, 1136, 308, 
         531, 1142, 323, 546, 1146, 338, 561, 1148, 353, 576, 1162, 1163, 368,
          591, 1175, 383, 606, 1185, 398, 621, 1193, 413, 636, 1199, 428, 651,
          1203, 443, 666, 1205, 458, 685, 686, 687}], 
        Line3DBox[{459, 667, 684, 1294, 444, 652, 1283, 429, 637, 1274, 414, 
         622, 1267, 399, 607, 1262, 384, 592, 1258, 369, 577, 1256, 354, 1149,
          562, 1243, 339, 547, 1232, 324, 532, 1222, 309, 517, 1215, 294, 502,
          1210, 279, 487, 1207, 250, 473, 681, 688}], 
        Line3DBox[{466, 674, 1301, 451, 659, 1288, 436, 644, 1278, 421, 629, 
         1270, 406, 614, 1264, 391, 599, 1260, 376, 584, 1257, 361, 569, 1249,
          346, 554, 1237, 331, 539, 1226, 316, 524, 1218, 301, 509, 1212, 286,
          494, 1208, 264, 480, 1206, 262}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{690, 1000, 473, 689, 1106, 912, 691, 1107, 913, 692, 1108, 
         914, 693, 1109, 915, 694, 1110, 916, 695, 1111, 1006, 1206, 696, 
         1112, 917, 697, 1113, 918, 698, 1114, 919, 699, 1115, 920, 700, 1116,
          921, 701, 1117, 922, 702, 1308, 1001, 923, 1002}], 
        Line3DBox[{704, 1007, 1207, 703, 488, 705, 1118, 924, 706, 1119, 925, 
         707, 1120, 926, 708, 1121, 927, 709, 1122, 1008, 1208, 710, 1009, 
         1209, 711, 1123, 928, 712, 1124, 929, 713, 1125, 930, 714, 1126, 931,
          715, 1127, 932, 716, 1128, 933, 717}], 
        Line3DBox[{719, 1010, 1210, 718, 1011, 1211, 720, 504, 721, 1129, 934,
          722, 1130, 935, 723, 1131, 936, 724, 1132, 1012, 1212, 725, 1013, 
         1213, 726, 1014, 1214, 727, 512, 728, 1133, 937, 729, 1134, 938, 730,
          1135, 939, 731, 1136, 940, 732}], 
        Line3DBox[{734, 1015, 1215, 733, 1016, 1216, 735, 1017, 1217, 736, 
         520, 737, 1137, 941, 738, 1138, 942, 739, 1139, 1018, 1218, 740, 
         1019, 1219, 741, 1020, 1220, 742, 1021, 1221, 743, 528, 744, 1140, 
         943, 745, 1141, 944, 746, 1142, 945, 747}], 
        Line3DBox[{749, 1022, 1222, 748, 1023, 1223, 750, 1024, 1224, 751, 
         1025, 1225, 752, 536, 753, 1143, 946, 754, 1144, 1026, 1226, 755, 
         1027, 1227, 756, 1028, 1228, 757, 1029, 1229, 758, 1030, 1230, 759, 
         1031, 1231, 760, 1145, 947, 761, 1146, 948, 762}], 
        Line3DBox[{764, 1032, 1232, 763, 1033, 1233, 765, 1034, 1234, 766, 
         1035, 1235, 767, 1036, 1236, 768, 552, 769, 1147, 1037, 1237, 770, 
         1038, 1238, 771, 1039, 1239, 772, 1040, 1240, 773, 1041, 1241, 774, 
         1042, 1242, 775, 560, 776, 1148, 949, 777}], 
        Line3DBox[{781, 1149, 950, 779, 1150, 951, 783, 1151, 952, 785, 1152, 
         953, 787, 1153, 954, 789, 1154, 955, 791, 1155, 569, 793, 1156, 956, 
         795, 1157, 957, 797, 1158, 958, 799, 1159, 959, 801, 1160, 960, 803, 
         1161, 961, 805, 1163, 963, 807}], 
        Line3DBox[{806, 962, 1162, 804, 1255, 1054, 802, 1254, 1053, 800, 
         1253, 1052, 798, 1252, 1051, 796, 1251, 1050, 794, 1250, 1049, 792, 
         1249, 568, 790, 1248, 1048, 788, 1247, 1047, 786, 1246, 1046, 784, 
         1245, 1045, 782, 1244, 1044, 778, 1243, 1043, 780}], 
        Line3DBox[{809, 1055, 1256, 808, 1164, 964, 810, 1165, 965, 811, 1166,
          966, 812, 1167, 967, 813, 1168, 968, 814, 1169, 1056, 1257, 815, 
         585, 816, 1170, 969, 817, 1171, 970, 818, 1172, 971, 819, 1173, 972, 
         820, 1174, 973, 821, 1175, 974, 822}], 
        Line3DBox[{824, 1057, 1258, 823, 1058, 1259, 825, 1176, 975, 826, 
         1177, 976, 827, 1178, 977, 828, 1179, 978, 829, 1180, 1059, 1260, 
         830, 1060, 1261, 831, 601, 832, 1181, 979, 833, 1182, 980, 834, 1183,
          981, 835, 1184, 982, 836, 1185, 983, 837}], 
        Line3DBox[{839, 1061, 1262, 838, 1062, 1263, 840, 609, 841, 1186, 984,
          842, 1187, 985, 843, 1188, 986, 844, 1189, 1063, 1264, 845, 1064, 
         1265, 846, 1065, 1266, 847, 617, 848, 1190, 987, 849, 1191, 988, 850,
          1192, 989, 851, 1193, 990, 852}], 
        Line3DBox[{854, 1066, 1267, 853, 1067, 1268, 855, 1068, 1269, 856, 
         625, 857, 1194, 991, 858, 1195, 992, 859, 1196, 1069, 1270, 860, 
         1070, 1271, 861, 1071, 1272, 862, 1072, 1273, 863, 633, 864, 1197, 
         993, 865, 1198, 994, 866, 1199, 995, 867}], 
        Line3DBox[{869, 1073, 1274, 868, 1074, 1275, 870, 1075, 1276, 871, 
         1076, 1277, 872, 641, 873, 1200, 996, 874, 1201, 1077, 1278, 875, 
         1078, 1279, 876, 1079, 1280, 877, 1080, 1281, 878, 1081, 1282, 879, 
         649, 880, 1202, 997, 881, 1203, 998, 882}], 
        Line3DBox[{884, 1082, 1283, 883, 1083, 1284, 885, 1084, 1285, 886, 
         1085, 1286, 887, 1086, 1287, 888, 657, 889, 1204, 1087, 1288, 890, 
         1088, 1289, 891, 1089, 1290, 892, 1090, 1291, 893, 1091, 1292, 894, 
         1092, 1293, 895, 665, 896, 1205, 999, 897}], 
        Line3DBox[{911, 1005, 685, 910, 1307, 1104, 909, 1306, 1103, 908, 
         1305, 1102, 907, 1304, 1101, 906, 1303, 1100, 905, 1302, 1099, 904, 
         1301, 1300, 1098, 903, 1299, 1097, 902, 1298, 1096, 901, 1297, 1095, 
         900, 1296, 1094, 899, 1295, 1093, 898, 1105, 1294, 1003, 1004}]}}},
     VertexNormals->CompressedData["
1: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
g8mhgwryoNg/KWna6mxop5fTwXx1Nn6aY1RtcnkuDO7gmGm0PAscCqbu+TpJ
idf7Ta31XeOHH3pjRpm1y4Jbqd3P1lMmwxzDFcrAGgXgajQssF3LbMgpG3p0
uE08BKSOn1SQVwCBb0JNs/ZmQ6vmJ4a4Lg2HzOhX27r7FMKSjXW/fo/LhvGt
v9yLUz2EXm7PVtTT4MAZtYs61OyVBb2+xfnNrUjGBqv9I7f9yAc/7UBl3ocM
sD5lWdXtQwY+a3EnSFsTJ8GmEbYdj6RDoEXdTWdMFGisXbPOEM26WubO0zLs
nQYbzxm+2FFPk4fyx9bL1+zvqsfJno+qp0H7Wn6G5pYJYPRX/+nPuhTBo2k9
TR8kpsG95U907F5FQPIBv5Nty4ugjztmtJmSDjvNWpl9HfcYdLa3/2S8vhjm
B5rXe1CRDBdaDRjwd88sHFfsNX6Hxk7dDinFGX+/gXu7rMIMNHnIs+TO0Bca
/3/XaX391fYkcKjc/K+R93NwylmHvxI0cThj286bYa8S4f7o9M6LK0XC+ilb
BkX1LIGQBX91azwgCayXnRrreDIYDpi3uxz/sgTG7hoY12ZxHJh6pDp8m6FE
Zd+7e/dq9v3LscNvU51ioXYP+9guVioMP7Es/YAm/h+/mxbrfz8KqoWPr7Tg
1hMo+Dx5waP4UlhR4DJ+4YNQ8Frfr1azQBVWPaGnr7z6r0713++h8rb47/dQ
+Vj893uofC3++z1UPhbie6hIR8rkfUBv/3hPlL/Ff7+Hyt9CfN8UzZPC76tp
nkrcHj1+v9r2j/dN+Vv89/umfCz++31TPhbi+6b+L/1KfA9VB7vqg/MCgtDs
Zu2Flppzf8L+amElzXnfv66o1fw2j/CyjbubQXw2bNv/Sq965SKYFNu+VpTn
Y5xk5GGi1sTjpO53K+uvK4ZDS2uG1ooKxszty5z2WCbB0jyHXgkvSmDZyMV6
RjFP8Nn70SsrHkVBWMTsl9/iNPv+vJbNtg2IBss9DE66ICSu2Tip57YyUDfc
nLjk5hNs6t71dMf7UbhW197wpSZOkqc03lB6PBhP7HrhmGiRhF08t9/I1cTh
w6lN32yxe4yz2+uvL5ucjtMb+R7ppzkXG6uetziS8xB11k45XByXje2uOGW3
0Jzr9i5HG6QuCMLFU+wGDG+Qg473qivLNevdYR9dXPD2PjpcNEioU65CVc/O
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
      "]], {}}, 
   {RGBColor[0, 0, 1], Thickness[Large], 
    TagBox[
     TooltipBox[Arrow3DBox[{{-0.5, 0.5, -0.25}, {0.5, 0.5, 0.25}}],
      TemplateBox[{
        TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
           RowBox[{
             AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
           FontTracking -> "Condensed", AutoSpacing -> False]& ), 
         InterpretationFunction :> (ReleaseHold[
           RowBox[{"mvDownUp", "@@", 
             MakeExpression[{
               Take[{
                 SlotSequence[1]}, 
                Length[{1}]], 
               Take[{
                 SlotSequence[1]}, {Length[{1}] + 1, 
                 Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
         Tooltip -> "mvDownUp[{1}, {}]"], 
        TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
           StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
           RowBox[{#, ",", #2}]]& ), Tooltip -> None], "\"SaddleSurfaceCS\"", 
        
        TemplateBox[{
          RowBox[{"-", "0.5`"}], "0.5`"}, "mvPoint", 
         InterpretationFunction -> (RowBox[{"mvPoint", "[", 
            RowBox[{"{", 
              RowBox[{
                TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
         DisplayFunction -> (RowBox[{
            TemplateSlotSequence[1, ","]}]& ), Tooltip -> "SaddleSurfaceCS"]},
        "\[DoubleStruckE]", DisplayFunction :> (StyleBox[
         RowBox[{
           RowBox[{
             StyleBox[
             "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
           RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
         "Condensed"]& ), 
       InterpretationFunction :> (
        RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", "[", #4, 
          "]"}]& ), SyntaxForm -> "fish", Tooltip -> "Cl[3, 0, 0]"]],
     Annotation[#, 
      GeometricAlgebra`\[DoubleStruckE][
       GeometricAlgebra`mvDownUp[{1}, {}], 
       GeometricAlgebra`Cl[3, 0, 0], "SaddleSurfaceCS"][
       GeometricAlgebra`mvPoint[{-0.5, 0.5}]], "Tooltip"]& ], 
    TagBox[
     TooltipBox[Arrow3DBox[{{-0.5, 0.5, -0.25}, {-0.5, 1.5, -0.75}}],
      TemplateBox[{
        TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
           RowBox[{
             AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
           FontTracking -> "Condensed", AutoSpacing -> False]& ), 
         InterpretationFunction :> (ReleaseHold[
           RowBox[{"mvDownUp", "@@", 
             MakeExpression[{
               Take[{
                 SlotSequence[1]}, 
                Length[{2}]], 
               Take[{
                 SlotSequence[1]}, {Length[{2}] + 1, 
                 Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
         Tooltip -> "mvDownUp[{2}, {}]"], 
        TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
           StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
           RowBox[{#, ",", #2}]]& ), Tooltip -> None], "\"SaddleSurfaceCS\"", 
        
        TemplateBox[{
          RowBox[{"-", "0.5`"}], "0.5`"}, "mvPoint", 
         InterpretationFunction -> (RowBox[{"mvPoint", "[", 
            RowBox[{"{", 
              RowBox[{
                TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
         DisplayFunction -> (RowBox[{
            TemplateSlotSequence[1, ","]}]& ), Tooltip -> "SaddleSurfaceCS"]},
        "\[DoubleStruckE]", DisplayFunction :> (StyleBox[
         RowBox[{
           RowBox[{
             StyleBox[
             "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
           RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
         "Condensed"]& ), 
       InterpretationFunction :> (
        RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", "[", #4, 
          "]"}]& ), SyntaxForm -> "fish", Tooltip -> "Cl[3, 0, 0]"]],
     Annotation[#, 
      GeometricAlgebra`\[DoubleStruckE][
       GeometricAlgebra`mvDownUp[{2}, {}], 
       GeometricAlgebra`Cl[3, 0, 0], "SaddleSurfaceCS"][
       GeometricAlgebra`mvPoint[{-0.5, 0.5}]], "Tooltip"]& ]}, 
   {RGBColor[0, 0, 1], Thickness[Large], 
    TagBox[
     TooltipBox[Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}],
      TemplateBox[{
        TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
           RowBox[{
             AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
           FontTracking -> "Condensed", AutoSpacing -> False]& ), 
         InterpretationFunction :> (ReleaseHold[
           RowBox[{"mvDownUp", "@@", 
             MakeExpression[{
               Take[{
                 SlotSequence[1]}, 
                Length[{1}]], 
               Take[{
                 SlotSequence[1]}, {Length[{1}] + 1, 
                 Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
         Tooltip -> "mvDownUp[{1}, {}]"], 
        TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
           StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
           RowBox[{#, ",", #2}]]& ), Tooltip -> None], "\"SaddleSurfaceCS\"", 
        
        TemplateBox[{"0.`", "0.`"}, "mvPoint", 
         InterpretationFunction -> (RowBox[{"mvPoint", "[", 
            RowBox[{"{", 
              RowBox[{
                TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
         DisplayFunction -> (RowBox[{
            TemplateSlotSequence[1, ","]}]& ), Tooltip -> "SaddleSurfaceCS"]},
        "\[DoubleStruckE]", DisplayFunction :> (StyleBox[
         RowBox[{
           RowBox[{
             StyleBox[
             "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
           RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
         "Condensed"]& ), 
       InterpretationFunction :> (
        RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", "[", #4, 
          "]"}]& ), SyntaxForm -> "fish", Tooltip -> "Cl[3, 0, 0]"]],
     Annotation[#, 
      GeometricAlgebra`\[DoubleStruckE][
       GeometricAlgebra`mvDownUp[{1}, {}], 
       GeometricAlgebra`Cl[3, 0, 0], "SaddleSurfaceCS"][
       GeometricAlgebra`mvPoint[{0., 0.}]], "Tooltip"]& ], 
    TagBox[
     TooltipBox[Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}],
      TemplateBox[{
        TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
           RowBox[{
             AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
           FontTracking -> "Condensed", AutoSpacing -> False]& ), 
         InterpretationFunction :> (ReleaseHold[
           RowBox[{"mvDownUp", "@@", 
             MakeExpression[{
               Take[{
                 SlotSequence[1]}, 
                Length[{2}]], 
               Take[{
                 SlotSequence[1]}, {Length[{2}] + 1, 
                 Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
         Tooltip -> "mvDownUp[{2}, {}]"], 
        TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
           StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
           RowBox[{#, ",", #2}]]& ), Tooltip -> None], "\"SaddleSurfaceCS\"", 
        
        TemplateBox[{"0.`", "0.`"}, "mvPoint", 
         InterpretationFunction -> (RowBox[{"mvPoint", "[", 
            RowBox[{"{", 
              RowBox[{
                TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
         DisplayFunction -> (RowBox[{
            TemplateSlotSequence[1, ","]}]& ), Tooltip -> "SaddleSurfaceCS"]},
        "\[DoubleStruckE]", DisplayFunction :> (StyleBox[
         RowBox[{
           RowBox[{
             StyleBox[
             "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
           RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
         "Condensed"]& ), 
       InterpretationFunction :> (
        RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", "[", #4, 
          "]"}]& ), SyntaxForm -> "fish", Tooltip -> "Cl[3, 0, 0]"]],
     Annotation[#, 
      GeometricAlgebra`\[DoubleStruckE][
       GeometricAlgebra`mvDownUp[{2}, {}], 
       GeometricAlgebra`Cl[3, 0, 0], "SaddleSurfaceCS"][
       GeometricAlgebra`mvPoint[{0., 0.}]], "Tooltip"]& ]}, 
   {RGBColor[0, 0, 1], Thickness[Large], 
    TagBox[
     TooltipBox[
      Arrow3DBox[{{0.6666666666666666, -0.5, -0.3333333333333333}, {
       1.6666666666666665`, -0.5, -0.8333333333333333}}],
      TemplateBox[{
        TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
           RowBox[{
             AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
           FontTracking -> "Condensed", AutoSpacing -> False]& ), 
         InterpretationFunction :> (ReleaseHold[
           RowBox[{"mvDownUp", "@@", 
             MakeExpression[{
               Take[{
                 SlotSequence[1]}, 
                Length[{1}]], 
               Take[{
                 SlotSequence[1]}, {Length[{1}] + 1, 
                 Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
         Tooltip -> "mvDownUp[{1}, {}]"], 
        TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
           StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
           RowBox[{#, ",", #2}]]& ), Tooltip -> None], "\"SaddleSurfaceCS\"", 
        
        TemplateBox[{"0.6666666666666666`", 
          RowBox[{"-", "0.5`"}]}, "mvPoint", 
         InterpretationFunction -> (RowBox[{"mvPoint", "[", 
            RowBox[{"{", 
              RowBox[{
                TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
         DisplayFunction -> (RowBox[{
            TemplateSlotSequence[1, ","]}]& ), Tooltip -> "SaddleSurfaceCS"]},
        "\[DoubleStruckE]", DisplayFunction :> (StyleBox[
         RowBox[{
           RowBox[{
             StyleBox[
             "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
           RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
         "Condensed"]& ), 
       InterpretationFunction :> (
        RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", "[", #4, 
          "]"}]& ), SyntaxForm -> "fish", Tooltip -> "Cl[3, 0, 0]"]],
     Annotation[#, 
      GeometricAlgebra`\[DoubleStruckE][
       GeometricAlgebra`mvDownUp[{1}, {}], 
       GeometricAlgebra`Cl[3, 0, 0], "SaddleSurfaceCS"][
       GeometricAlgebra`mvPoint[{0.6666666666666666, -0.5}]], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      Arrow3DBox[{{0.6666666666666666, -0.5, -0.3333333333333333}, {
       0.6666666666666666, 0.5, 0.3333333333333333}}],
      TemplateBox[{
        TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
           RowBox[{
             AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
           FontTracking -> "Condensed", AutoSpacing -> False]& ), 
         InterpretationFunction :> (ReleaseHold[
           RowBox[{"mvDownUp", "@@", 
             MakeExpression[{
               Take[{
                 SlotSequence[1]}, 
                Length[{2}]], 
               Take[{
                 SlotSequence[1]}, {Length[{2}] + 1, 
                 Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
         Tooltip -> "mvDownUp[{2}, {}]"], 
        TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
           StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
           RowBox[{#, ",", #2}]]& ), Tooltip -> None], "\"SaddleSurfaceCS\"", 
        
        TemplateBox[{"0.6666666666666666`", 
          RowBox[{"-", "0.5`"}]}, "mvPoint", 
         InterpretationFunction -> (RowBox[{"mvPoint", "[", 
            RowBox[{"{", 
              RowBox[{
                TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
         DisplayFunction -> (RowBox[{
            TemplateSlotSequence[1, ","]}]& ), Tooltip -> "SaddleSurfaceCS"]},
        "\[DoubleStruckE]", DisplayFunction :> (StyleBox[
         RowBox[{
           RowBox[{
             StyleBox[
             "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
           RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
         "Condensed"]& ), 
       InterpretationFunction :> (
        RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", "[", #4, 
          "]"}]& ), SyntaxForm -> "fish", Tooltip -> "Cl[3, 0, 0]"]],
     Annotation[#, 
      GeometricAlgebra`\[DoubleStruckE][
       GeometricAlgebra`mvDownUp[{2}, {}], 
       GeometricAlgebra`Cl[3, 0, 0], "SaddleSurfaceCS"][
       GeometricAlgebra`mvPoint[{0.6666666666666666, -0.5}]], 
      "Tooltip"]& ]}, 
   {RGBColor[0, 0, 1], Thickness[Large], 
    TagBox[
     TooltipBox[
      Arrow3DBox[{{0.6666666666666666, 0.75, 0.5}, {1.6666666666666665`, 0.75,
        1.25}}],
      TemplateBox[{
        TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
           RowBox[{
             AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
           FontTracking -> "Condensed", AutoSpacing -> False]& ), 
         InterpretationFunction :> (ReleaseHold[
           RowBox[{"mvDownUp", "@@", 
             MakeExpression[{
               Take[{
                 SlotSequence[1]}, 
                Length[{1}]], 
               Take[{
                 SlotSequence[1]}, {Length[{1}] + 1, 
                 Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
         Tooltip -> "mvDownUp[{1}, {}]"], 
        TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
           StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
           RowBox[{#, ",", #2}]]& ), Tooltip -> None], "\"SaddleSurfaceCS\"", 
        
        TemplateBox[{"0.6666666666666666`", "0.75`"}, "mvPoint", 
         InterpretationFunction -> (RowBox[{"mvPoint", "[", 
            RowBox[{"{", 
              RowBox[{
                TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
         DisplayFunction -> (RowBox[{
            TemplateSlotSequence[1, ","]}]& ), Tooltip -> "SaddleSurfaceCS"]},
        "\[DoubleStruckE]", DisplayFunction :> (StyleBox[
         RowBox[{
           RowBox[{
             StyleBox[
             "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
           RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
         "Condensed"]& ), 
       InterpretationFunction :> (
        RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", "[", #4, 
          "]"}]& ), SyntaxForm -> "fish", Tooltip -> "Cl[3, 0, 0]"]],
     Annotation[#, 
      GeometricAlgebra`\[DoubleStruckE][
       GeometricAlgebra`mvDownUp[{1}, {}], 
       GeometricAlgebra`Cl[3, 0, 0], "SaddleSurfaceCS"][
       GeometricAlgebra`mvPoint[{0.6666666666666666, 0.75}]], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      Arrow3DBox[{{0.6666666666666666, 0.75, 0.5}, {0.6666666666666666, 1.75, 
       1.1666666666666665`}}],
      TemplateBox[{
        TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
           RowBox[{
             AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
           FontTracking -> "Condensed", AutoSpacing -> False]& ), 
         InterpretationFunction :> (ReleaseHold[
           RowBox[{"mvDownUp", "@@", 
             MakeExpression[{
               Take[{
                 SlotSequence[1]}, 
                Length[{2}]], 
               Take[{
                 SlotSequence[1]}, {Length[{2}] + 1, 
                 Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
         Tooltip -> "mvDownUp[{2}, {}]"], 
        TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
           StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
           RowBox[{#, ",", #2}]]& ), Tooltip -> None], "\"SaddleSurfaceCS\"", 
        
        TemplateBox[{"0.6666666666666666`", "0.75`"}, "mvPoint", 
         InterpretationFunction -> (RowBox[{"mvPoint", "[", 
            RowBox[{"{", 
              RowBox[{
                TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
         DisplayFunction -> (RowBox[{
            TemplateSlotSequence[1, ","]}]& ), Tooltip -> "SaddleSurfaceCS"]},
        "\[DoubleStruckE]", DisplayFunction :> (StyleBox[
         RowBox[{
           RowBox[{
             StyleBox[
             "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
           RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
         "Condensed"]& ), 
       InterpretationFunction :> (
        RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", "[", #4, 
          "]"}]& ), SyntaxForm -> "fish", Tooltip -> "Cl[3, 0, 0]"]],
     Annotation[#, 
      GeometricAlgebra`\[DoubleStruckE][
       GeometricAlgebra`mvDownUp[{2}, {}], 
       GeometricAlgebra`Cl[3, 0, 0], "SaddleSurfaceCS"][
       GeometricAlgebra`mvPoint[{0.6666666666666666, 0.75}]], 
      "Tooltip"]& ]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    TagBox[
     TooltipBox[
      Arrow3DBox[{{-0.5, 0.5, -0.25}, {-0.9082482904638631, 
       0.9082482904638631, 0.5664965809277261}}],
      "\"N\"",
      TooltipStyle->"TextStyling"],
     Annotation[#, "N", "Tooltip"]& ]}, 
   {RGBColor[0, 1, 0], Thickness[Large], 
    TagBox[
     TooltipBox[Arrow3DBox[{{0, 0, 0}, {0, 0, 1.}}],
      "\"N\"",
      TooltipStyle->"TextStyling"],
     Annotation[#, "N", "Tooltip"]& ]}, 
   {RGBColor[1, 0, 1], Thickness[Large], 
    TagBox[
     TooltipBox[
      Arrow3DBox[{{0.6666666666666666, -0.5, -0.3333333333333333}, {
       1.0507773064653545`, -1.012147519731584, 0.43488794626404254`}}],
      "\"N\"",
      TooltipStyle->"TextStyling"],
     Annotation[#, "N", "Tooltip"]& ]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    TagBox[
     TooltipBox[
      Arrow3DBox[{{0.6666666666666666, 0.75, 0.5}, {0.13725490196078438`, 
       0.2794117647058824, 1.2058823529411764`}}],
      "\"N\"",
      TooltipStyle->"TextStyling"],
     Annotation[#, "N", "Tooltip"]& ]}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{299.2127240519997, 287.17609840334035`},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{All, All, All},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.44673133600490184`, -3.2008303749090876`, 1.002554748874409},
  ViewVertical->{-0.04374888007564278, -0.2830455827838302, 
   0.9581081533724097}]], "Output",
 CellLabel->"Out[40]=",ExpressionUUID->"b1cde8c5-15e2-4336-a8e0-67a956b38ed6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gaCoordinateChart", "[", "\"\<SaddleSurfaceCS\>\"", "]"}], "[", 
   "gaRunningPatch", "]"}], "[", "\"\<NormalToSurface\>\"", "]"}]], "Input",
 CellLabel->"In[41]:=",ExpressionUUID->"45dca353-aa1a-4059-835a-c8ca3f514e59"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "v"}], " ", 
    TemplateBox[{
      TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
         RowBox[{
           AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
         FontTracking -> "Condensed", AutoSpacing -> False]& ), 
       InterpretationFunction :> (ReleaseHold[
         RowBox[{"mvDownUp", "@@", 
           MakeExpression[{
             Take[{
               SlotSequence[1]}, 
              Length[{1}]], 
             Take[{
               SlotSequence[1]}, {Length[{1}] + 1, 
               Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
       Tooltip -> "mvDownUp[{1}, {}]"], 
      TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
         StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
         RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
     "\[DoubleStruckE]",
     DisplayFunction:>(StyleBox[
       RowBox[{
         StyleBox["\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}],
        AutoSpacing -> False, FontTracking -> "Condensed"]& ),
     InterpretationFunction:>(
      RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
     SyntaxForm->"fish",
     Tooltip->"Cl[3, 0, 0]"]}], "-", 
   RowBox[{"u", " ", 
    TemplateBox[{
      TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
         RowBox[{
           AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
         FontTracking -> "Condensed", AutoSpacing -> False]& ), 
       InterpretationFunction :> (ReleaseHold[
         RowBox[{"mvDownUp", "@@", 
           MakeExpression[{
             Take[{
               SlotSequence[1]}, 
              Length[{2}]], 
             Take[{
               SlotSequence[1]}, {Length[{2}] + 1, 
               Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
       Tooltip -> "mvDownUp[{2}, {}]"], 
      TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
         StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
         RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
     "\[DoubleStruckE]",
     DisplayFunction:>(StyleBox[
       RowBox[{
         StyleBox["\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}],
        AutoSpacing -> False, FontTracking -> "Condensed"]& ),
     InterpretationFunction:>(
      RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
     SyntaxForm->"fish",
     Tooltip->"Cl[3, 0, 0]"]}], "+", 
   TemplateBox[{
     TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
        RowBox[{
          AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
        FontTracking -> "Condensed", AutoSpacing -> False]& ), 
      InterpretationFunction :> (ReleaseHold[
        RowBox[{"mvDownUp", "@@", 
          MakeExpression[{
            Take[{
              SlotSequence[1]}, 
             Length[{3}]], 
            Take[{
              SlotSequence[1]}, {Length[{3}] + 1, 
              Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
      Tooltip -> "mvDownUp[{3}, {}]"], 
     TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
    "\[DoubleStruckE]",
    DisplayFunction:>(StyleBox[
      RowBox[{
        StyleBox["\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
      AutoSpacing -> False, FontTracking -> "Condensed"]& ),
    InterpretationFunction:>(
     RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
    SyntaxForm->"fish",
    Tooltip->"Cl[3, 0, 0]"]}], 
  SqrtBox[
   RowBox[{"1", "+", 
    SuperscriptBox["u", "2"], "+", 
    SuperscriptBox["v", "2"]}]]]], "Output",
 CellLabel->"Out[41]=",ExpressionUUID->"e80ab23e-8bfa-4e6a-9067-60ce916f3500"]
}, Open  ]],

Cell["We can multiply basis elements on surface", "Text",ExpressionUUID->"eb8a359c-6245-47c4-afe9-53baeb0164e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckE]", "[", "1", "]"}], "[", "]"}], 
  "\[GeometricProduct]", 
  RowBox[{
   RowBox[{"\[DoubleStruckE]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], "[", "]"}]}]], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"195dc5f0-056a-406a-a1b9-cc18f812855d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "u"}], " ", "v", " ", 
   TemplateBox[{
     TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
        RowBox[{
          AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
        FontTracking -> "Condensed", AutoSpacing -> False]& ), 
      InterpretationFunction :> (ReleaseHold[
        RowBox[{"mvDownUp", "@@", 
          MakeExpression[{
            Take[{
              SlotSequence[1]}, 
             Length[{1}]], 
            Take[{
              SlotSequence[1]}, {Length[{1}] + 1, 
              Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
      Tooltip -> "mvDownUp[{1}, {}]"], 
     TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ), Tooltip -> None], "\"SaddleSurfaceCS\"", 
     TemplateBox[{"u", "v"}, "mvPoint", 
      InterpretationFunction -> (RowBox[{"mvPoint", "[", 
         RowBox[{"{", 
           RowBox[{
             TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
      DisplayFunction -> (RowBox[{
         TemplateSlotSequence[1, ","]}]& ), Tooltip -> "SaddleSurfaceCS"]},
    "\[DoubleStruckE]",
    DisplayFunction:>(StyleBox[
      RowBox[{
        RowBox[{
          StyleBox[
          "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
        RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
      "Condensed"]& ),
    InterpretationFunction:>(
     RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", "[", #4, 
       "]"}]& ),
    SyntaxForm->"fish",
    Tooltip->"Cl[3, 0, 0]"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["v", "2"]}], ")"}], " ", 
   TemplateBox[{
     TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
        RowBox[{
          AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
        FontTracking -> "Condensed", AutoSpacing -> False]& ), 
      InterpretationFunction :> (ReleaseHold[
        RowBox[{"mvDownUp", "@@", 
          MakeExpression[{
            Take[{
              SlotSequence[1]}, 
             Length[{2}]], 
            Take[{
              SlotSequence[1]}, {Length[{2}] + 1, 
              Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
      Tooltip -> "mvDownUp[{2}, {}]"], 
     TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ), Tooltip -> None], "\"SaddleSurfaceCS\"", 
     TemplateBox[{"u", "v"}, "mvPoint", 
      InterpretationFunction -> (RowBox[{"mvPoint", "[", 
         RowBox[{"{", 
           RowBox[{
             TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
      DisplayFunction -> (RowBox[{
         TemplateSlotSequence[1, ","]}]& ), Tooltip -> "SaddleSurfaceCS"]},
    "\[DoubleStruckE]",
    DisplayFunction:>(StyleBox[
      RowBox[{
        RowBox[{
          StyleBox[
          "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
        RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
      "Condensed"]& ),
    InterpretationFunction:>(
     RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", "[", #4, 
       "]"}]& ),
    SyntaxForm->"fish",
    Tooltip->"Cl[3, 0, 0]"]}]}]], "Output",
 CellLabel->"Out[42]=",ExpressionUUID->"7d2ca9b1-4fde-48e0-8b07-7f032419ce48"]
}, Open  ]],

Cell["Many to add...", "Text",ExpressionUUID->"55f4ccc3-df3c-4819-8899-f969b9ca2526"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{993.75, 1122.},
WindowMargins->{{30.75, Automatic}, {Automatic, 2.25}},
ShowSelection->True,
InputAutoReplacements->{
 "gaDD" -> "\[DoubleStruckCapitalD]", "e" -> "\[DoubleStruckE]"},
FrontEndVersion->"13.2 for Linux x86 (64-bit) (December 7, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9305a230-3b81-47c0-a6ed-b220cc70ae01"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 75814, 1283, 175, InheritFromParent,ExpressionUUID->"4d2653ff-482c-4210-80ab-abe83adb06f6"],
Cell[CellGroupData[{
Cell[76397, 1307, 224, 5, 68, "Section",ExpressionUUID->"12e3f015-6a95-4081-999c-690d7638afc6"],
Cell[76624, 1314, 143, 5, 36, "Text",ExpressionUUID->"7aeb1ba3-38a1-4e81-882b-de2ba4d7a620"],
Cell[CellGroupData[{
Cell[76792, 1323, 166, 3, 54, "Subsection",ExpressionUUID->"0f6ffdb4-291c-414d-bef4-8be88320e9ec"],
Cell[76961, 1328, 392, 10, 35, "Text",ExpressionUUID->"2af2f46b-a932-4178-a424-d9202a6684a1"],
Cell[77356, 1340, 952, 17, 29, "Input",ExpressionUUID->"65da44db-a4b4-4f2c-be27-ce3928fb520f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78345, 1362, 101, 0, 54, "Subsection",ExpressionUUID->"8ef18f9a-720f-4412-86dd-c009466c60a7"],
Cell[78449, 1364, 844, 18, 82, "Text",ExpressionUUID->"1bcd8f16-71fc-4bab-b0c5-bd489a41a9e5"],
Cell[CellGroupData[{
Cell[79318, 1386, 966, 15, 51, "Input",ExpressionUUID->"67d2764e-7520-4278-8fed-45e09373adcd"],
Cell[CellGroupData[{
Cell[80309, 1405, 479, 14, 26, "Echo",ExpressionUUID->"2d658779-bbef-4b96-b323-5b32e2784a16"],
Cell[80791, 1421, 357, 10, 26, "Echo",ExpressionUUID->"ceaf95b7-d04d-4863-bdd0-8146138362af"]
}, Open  ]],
Cell[81163, 1434, 8622, 197, 37, "Output",ExpressionUUID->"47d1eb78-2856-4676-aa94-8e0bcd1b15fe"]
}, Open  ]],
Cell[89800, 1634, 224, 3, 35, "Text",ExpressionUUID->"338f73ef-6ae3-4db7-b71f-3e809b1e1297"],
Cell[CellGroupData[{
Cell[90049, 1641, 1979, 38, 54, "Input",ExpressionUUID->"3b55591c-57b4-4017-8cf1-fc41270614be"],
Cell[92031, 1681, 5490, 123, 83, "Output",ExpressionUUID->"aee03146-456f-473c-b7e7-c9c05656bc0c"]
}, Open  ]],
Cell[97536, 1807, 157, 2, 35, "Text",ExpressionUUID->"7acdb459-2f17-483a-9445-7ba18b025001"],
Cell[CellGroupData[{
Cell[97718, 1813, 259, 5, 29, "Input",ExpressionUUID->"946ce42b-03af-4ce2-8921-43477022457c"],
Cell[97980, 1820, 831, 15, 39, "Message",ExpressionUUID->"34d2bba9-5254-42c8-99e2-82c16ef103df"],
Cell[CellGroupData[{
Cell[98836, 1839, 184, 4, 26, "Echo",ExpressionUUID->"07177e89-a8c2-4895-8138-51de4755c744"],
Cell[99023, 1845, 192, 4, 26, "Echo",ExpressionUUID->"703bb24f-97d5-4eb7-8720-2535d9e81ee9"],
Cell[99218, 1851, 198, 4, 26, "Echo",ExpressionUUID->"a4ad1ccc-5d04-4d49-a636-48b3ba4a225f"],
Cell[99419, 1857, 183, 4, 26, "Echo",ExpressionUUID->"6e011c4f-61d4-4126-bccd-69351ac70776"],
Cell[99605, 1863, 187, 4, 26, "Echo",ExpressionUUID->"393dba14-8588-4957-84b4-a4ee82769c65"],
Cell[99795, 1869, 195, 4, 26, "Echo",ExpressionUUID->"a14c1e52-08a5-4846-9177-59ed58390d0f"],
Cell[99993, 1875, 189, 4, 26, "Echo",ExpressionUUID->"f1738ed1-b992-421d-b77d-bb550ebf0bc5"],
Cell[100185, 1881, 197, 4, 26, "Echo",ExpressionUUID->"3cfd7b61-4c2b-4c64-a58f-ff30cf614191"],
Cell[100385, 1887, 209, 4, 26, "Echo",ExpressionUUID->"1e7f2864-7e8c-4894-9476-aea7f338543d"]
}, Open  ]],
Cell[100609, 1894, 357, 8, 22, "Message",ExpressionUUID->"6937165b-6464-4e3f-b55b-df79e61ad88f"],
Cell[100969, 1904, 258, 5, 26, "Echo",ExpressionUUID->"27c574b1-43aa-47a9-81ba-1d182112a3f2"],
Cell[101230, 1911, 90191, 1997, 342, "Output",ExpressionUUID->"672907bf-a992-4da6-8af4-8a3b3352d3b7"]
}, Open  ]],
Cell[191436, 3911, 114, 0, 70, "Text",ExpressionUUID->"aaec6fac-3ad0-4dcf-a5e7-3347d49eec46"],
Cell[CellGroupData[{
Cell[191575, 3915, 143, 1, 70, "Input",ExpressionUUID->"b0871fbd-e98f-4d39-838e-7eb71f6510db"],
Cell[191721, 3918, 469, 8, 70, "Output",ExpressionUUID->"50b13976-2d5f-4a9e-b2c5-d7826ce52b8a"]
}, Open  ]],
Cell[192205, 3929, 127, 0, 70, "Text",ExpressionUUID->"c5c9fa3a-c754-46c0-a8f4-12df7bd2ef2f"],
Cell[CellGroupData[{
Cell[192357, 3933, 2142, 64, 70, "Input",ExpressionUUID->"8da90d90-7d2b-46cb-bd2b-c91ab3510e23"],
Cell[CellGroupData[{
Cell[194524, 4001, 182, 5, 70, "Echo",ExpressionUUID->"92403ac5-e5aa-484e-b115-295728500888"],
Cell[194709, 4008, 335, 9, 70, "Echo",ExpressionUUID->"6ea98b14-b7ee-4467-9d0e-2242292f7393"],
Cell[195047, 4019, 246, 7, 70, "Echo",ExpressionUUID->"b77a7ab0-39ed-460d-9c94-57ce5ecaa67e"],
Cell[195296, 4028, 2738, 79, 70, "Echo",ExpressionUUID->"13ad2769-e32f-4b7d-967f-54a67d4cae5d"],
Cell[198037, 4109, 1575, 49, 70, "Print",ExpressionUUID->"e1151e2e-2d33-4090-9599-17d7672d5cfc"],
Cell[199615, 4160, 2736, 79, 70, "Echo",ExpressionUUID->"b8b5b69e-767a-4deb-809d-0920a1f24a00"]
}, Open  ]],
Cell[202366, 4242, 73495, 1305, 70, "Output",ExpressionUUID->"b1cde8c5-15e2-4336-a8e0-67a956b38ed6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275898, 5552, 267, 5, 70, "Input",ExpressionUUID->"45dca353-aa1a-4059-835a-c8ca3f514e59"],
Cell[276168, 5559, 3824, 91, 70, "Output",ExpressionUUID->"e80ab23e-8bfa-4e6a-9067-60ce916f3500"]
}, Open  ]],
Cell[280007, 5653, 112, 0, 70, "Text",ExpressionUUID->"eb8a359c-6245-47c4-afe9-53baeb0164e5"],
Cell[CellGroupData[{
Cell[280144, 5657, 308, 8, 70, "Input",ExpressionUUID->"195dc5f0-056a-406a-a1b9-cc18f812855d"],
Cell[280455, 5667, 3446, 84, 70, "Output",ExpressionUUID->"7d2ca9b1-4fde-48e0-8b07-7f032419ce48"]
}, Open  ]],
Cell[283916, 5754, 85, 0, 70, "Text",ExpressionUUID->"55f4ccc3-df3c-4819-8899-f969b9ca2526"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

