(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    277509,       5652]
NotebookOptionsPosition[    272069,       5562]
NotebookOutlinePosition[    272584,       5581]
CellTagsIndexPosition[    272541,       5578]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {
    GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxd102ITWEYwPGbZGFFzMaObBVZWIh3oWgkC8nXhnxshBELYZRmR2jSNAuK
U2QlamKIt6YmkzJRRs2MhjsfivWUDQu599x+b73v7U7Tr9M55/7vnea5z9rj
PftOLWk0Gn9aP+3fV1c/2zV/ZSA06sfcyLJ3Tyb6Lz5P/rX97fXp/W+Sf95e
uef3pdHkQ71jB3vH3id/OH35xNJVH5MfPB3csnPj5+SpR+e3LZ/6krzi/u4d
n65NJnffXd96fk3uu/Fv74HxmeT2q1lzoZn8d+vhDT235pLru83OJ2+uHz+S
9X4bPjvTeqZe1st6WS/rZb2sl/WyXtbLelkv62W9rPd1zcnUy3pZL+tlvayX
9bJe1st6WS/rZb2sl/UOtG/TPZF6WS/rZb2sl/WyXtbLelkv62W9rJf1st7Z
+vMeT72sl/WyXtbLelkv62W9rJf1sl7Wy3pZ72DdP5p6WS/rZb2sl/WyXtbL
elkv62W9rJf1st57tYdSL+tlvayX9bJe1st6WS/rZb2sl/WyXs7nURXzeVTF
fB5VMZ9HVcznURXzeVTFfB5VMZ9HVcznURXzeVTFfB5VMZ9HVcznURXzeVTF
fB5VUe/NTn/Qy3pZL+tlvayX9bJe1st6WS/rZb2sl/Xe6fx9p17Wy3pZL+tl
vayX9bJe1st6WS/rZb2sd6rz/yv1sl7Wy3pZL+tlvayX9bJe1st6WS/rZb39
nfmUelkv62W9rJf1sl7Wy3pZL+tlvayX9bLeF53vH6mX9bJe1st6WS/rZb2s
l/WyXtbLelkv653ufL9MvayX9bJe1st6WS/rZb2sl/WyXtbLernYj0KxH4Vi
PwrFfhSK/SgU+1Eo9qNQ7Eeh2I9SLxf7USj2o1DsR6HYj0I+j+bCujrocTjX
rh/+nuYxn3wZN/XdWEh2Pjv/TMfp/WPnly7vb18rjo8Ux9Prd71ji11HF7se
hlf1x9ccaX0YQ0eaC8mOdz7eZnCcvd7yfPd3fnl/5xfH0/vjeq5f3t/1/gMq
O1pF
       "], {
        {GrayLevel[0.8], EdgeForm[None], 
         GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
           "]]]}, {}, {}, {}, {}},
       VertexColors->CompressedData["
1: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
        "]], 
      StyleBox[
       InsetBox["\<\"A.Dargys and A.Acus, \\\"Multivector \
handbook\\\"\\!\\(\\*\\nStyleBox[\\\" \\\",\\nFontSlant->\\\"Italic\\\"]\\)\"\
\>", {0, 0.2}, {-1.25, 1.5}],
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->20,
       FontWeight->Bold], 
      StyleBox[InsetBox["\<\"electronic supplement\"\>", {0, 0.2}, {-9, 4}],
       StripOnInput->False,
       FontFamily->"Arial",
       FontSize->18,
       FontWeight->Bold]},
     AspectRatio->NCache[
       Rational[1, 15], 0.06666666666666667],
     AxesLabel->{None, None},
     DisplayFunction->Identity,
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImageSize->{1400, 140},
     Method->{
      "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "ScalingFunctions" -> None},
     PlotRange->{{0.02, 0.6}, {-0.5, 0.5}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}},
     Ticks->{Automatic, Automatic}]},
   {
    RowBox[{
     ButtonBox[
      RowBox[{"Previous", " ", "notebook"}],
      Appearance->{Automatic, "DialogBox"},
      BaseStyle->"Hyperlink",
      ButtonData:>{"11_LinearTransformations.nb", None},
      ButtonNote->"Previous notebook"], "\t\t", 
     ButtonBox["Content",
      Appearance->{Automatic, "DialogBox"},
      BaseStyle->"Hyperlink",
      ButtonData:>{"00_Content.nb", None},
      ButtonNote->"Multivector handbook"], "\t\t", 
     ButtonBox[
      RowBox[{"Next", " ", "notebook"}],
      Appearance->{Automatic, "DialogBox"},
      BaseStyle->"Hyperlink",
      ButtonData:>{"13_CoordinateSystems.nb", None},
      ButtonNote->"Next notebook"]}]}
  },
  GridBoxItemSize->{
   "Columns" -> {{All}}, "ColumnsIndexed" -> {}, "Rows" -> {{0}}, 
    "RowsIndexed" -> {}},
  GridBoxSpacings->{"Columns" -> {
      Offset[0.27999999999999997`], {
       Offset[0.5599999999999999]}, 
      Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
      Offset[0.2], {
       Offset[-0.8]}, 
      Offset[0.2]}, "RowsIndexed" -> {}}]],
 Editable->False,
 PageWidth->DirectedInfinity[1],
 ShowCellBracket->True,
 CellMargins->{{-30, 0}, {0, 0}},
 Deployed->True,
 GeneratedCell->True,
 CellAutoOverwrite->True,
 ShowCellLabel->False,
 CellChangeTimes->{3.674888404214503*^9},
 FontFamily->"Verdana",
 FontSize->14,
 Background->RGBColor[
  0.9882352941176471, 0.7725490196078432, 
   1.],ExpressionUUID->"4d2653ff-482c-4210-80ab-abe83adb06f6"],

Cell[CellGroupData[{

Cell[TextData[{
 "1. Introduction to Clifford algebra calculus operations (",
 StyleBox["will change significantly",
  FontColor->RGBColor[1, 0, 0]],
 ")"
}], "Section",ExpressionUUID->"12e3f015-6a95-4081-999c-690d7638afc6"],

Cell[TextData[{
 "Version ",
 StyleBox["(2023-11-04)",
  FontSize->16],
 " "
}], "Text",ExpressionUUID->"7aeb1ba3-38a1-4e81-882b-de2ba4d7a620"],

Cell[CellGroupData[{

Cell["Load main notebook", "Subsection",
 CellChangeTimes->{{3.673769332785334*^9, 
  3.673769364045045*^9}},ExpressionUUID->"0f6ffdb4-291c-414d-bef4-\
8be88320e9ec"],

Cell[TextData[{
 "Load package. ",
 StyleBox["WAIT",
  FontWeight->"Bold"],
 " until evaluation of cell is finished to be sure that no errors were \
produced."
}], "Text",
 CellChangeTimes->{{3.673769371013993*^9, 3.673769372484621*^9}, {
  3.674660788617659*^9, 3.674660794168119*^9}, {3.681017989424097*^9, 
  3.681018049612899*^9}},ExpressionUUID->"2af2f46b-a932-4178-a424-\
d9202a6684a1"],

Cell[BoxData[
 RowBox[{"NotebookEvaluate", "[", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ParentDirectory", "[", 
      RowBox[{"NotebookDirectory", "[", 
       RowBox[{"EvaluationNotebook", "[", "]"}], "]"}], "]"}], ",", 
     "\"\<GA.nb\>\""}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.673770020900804*^9, 3.673770052959599*^9}, {
   3.67377255744574*^9, 3.673772560984225*^9}, {3.673772957194665*^9, 
   3.673772964956344*^9}, {3.673773010571767*^9, 3.673773014511329*^9}, {
   3.673834864366583*^9, 3.673834875805387*^9}, {3.6755759491498175`*^9, 
   3.6755760152374797`*^9}, {3.736246092415019*^9, 3.736246093168438*^9}, 
   3.750330997042767*^9, 3.750337192359868*^9, {3.7621497056275167`*^9, 
   3.762149706871374*^9}, {3.767611544913014*^9, 3.7676115463165293`*^9}, {
   3.7757868119144077`*^9, 3.775786812920247*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"65da44db-a4b4-4f2c-be27-ce3928fb520f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["First steps for calculus", "Subsection",ExpressionUUID->"8ef18f9a-720f-4412-86dd-c009466c60a7"],

Cell[TextData[{
 "Calculus requires proper Clifford algebra along with corresponding \
orthonormal basis to be specified. We have to choose algebra which is \
compatible with manifold parametrization we want to parametrize (explicit \
surface/coordinate system parametrization is required). For example we want \
to work on surface in Euclidean 3D, we have to choose ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["C", "TI"], 
         SubscriptBox[
          StyleBox["l", "TI"], 
          RowBox[{"3", ",", "0"}]]}], TraditionalForm], "errors" -> {}, 
     "input" -> "Cl_{3,0}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "00bb56d4-c7a0-4b24-a73b-90fc3305cd55"],
 " algebra."
}], "Text",ExpressionUUID->"1bcd8f16-71fc-4bab-b0c5-bd489a41a9e5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testAlgebra", "=", 
   RowBox[{"Cl", "[", 
    RowBox[{"3", ",", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"gaDefineOrthonormalBasis", "[", "testAlgebra", "]"}]}], "Input",
 CellChangeTimes->{{3.798447197254615*^9, 3.7984472105617657`*^9}, {
  3.7984479559764967`*^9, 3.7984479568666763`*^9}, {3.849247979099585*^9, 
  3.8492479817617817`*^9}, {3.849249743776145*^9, 3.8492497588922853`*^9}, {
  3.8496853858768463`*^9, 3.849685396768197*^9}, {3.849685441120096*^9, 
  3.849685486785718*^9}, {3.849690695944079*^9, 3.849690724433175*^9}, {
  3.851143182385306*^9, 3.8511431901861877`*^9}, {3.8521915700500517`*^9, 
  3.852191575988068*^9}, {3.852191647248097*^9, 3.8521916512154903`*^9}, {
  3.8762159820998993`*^9, 3.876215982984215*^9}, {3.876889919214703*^9, 
  3.8768899201511517`*^9}, {3.8768900564989967`*^9, 3.876890057300804*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"67d2764e-7520-4278-8fed-45e09373adcd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Basis vectors are stored in \"\>",
   "EchoLabel"], "  ", 
  TagBox[
   RowBox[{"gaOrthonormalBasis", "[", 
    RowBox[{
     TemplateBox[{"3", "0", "0"},
      "Cl",
      DisplayFunction->(SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ),
      Tooltip->None], ",", "\<\"InvDeg[Lex]\"\>"}], "]"}],
   HoldForm]}]], "Echo",ExpressionUUID->"2d658779-bbef-4b96-b323-\
5b32e2784a16"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Running algebra is: gaRunningAlgebra=\"\>",
   "EchoLabel"], "  ", 
  TemplateBox[{"3", "0", "0"},
   "Cl",
   DisplayFunction->(SubscriptBox[
     StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
     RowBox[{#, ",", #2}]]& ),
   Tooltip->None]}]], "Echo",ExpressionUUID->"ceaf95b7-d04d-4863-bdd0-\
8146138362af"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   TemplateBox[{
     TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
        RowBox[{
          AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
        FontTracking -> "Condensed", AutoSpacing -> False]& ), 
      InterpretationFunction :> (ReleaseHold[
        RowBox[{"mvDownUp", "@@", 
          MakeExpression[{
            Take[{
              SlotSequence[1]}, 
             Length[{1}]], 
            Take[{
              SlotSequence[1]}, {Length[{1}] + 1, 
              Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
      Tooltip -> "mvDownUp[{1}, {}]"], 
     TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
    "\[DoubleStruckE]",
    DisplayFunction:>(StyleBox[
      RowBox[{
        StyleBox["\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
      AutoSpacing -> False, FontTracking -> "Condensed"]& ),
    InterpretationFunction:>(
     RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
    SyntaxForm->"fish",
    Tooltip->"Cl[3, 0, 0]"], ",", 
   TemplateBox[{
     TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
        RowBox[{
          AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
        FontTracking -> "Condensed", AutoSpacing -> False]& ), 
      InterpretationFunction :> (ReleaseHold[
        RowBox[{"mvDownUp", "@@", 
          MakeExpression[{
            Take[{
              SlotSequence[1]}, 
             Length[{2}]], 
            Take[{
              SlotSequence[1]}, {Length[{2}] + 1, 
              Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
      Tooltip -> "mvDownUp[{2}, {}]"], 
     TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
    "\[DoubleStruckE]",
    DisplayFunction:>(StyleBox[
      RowBox[{
        StyleBox["\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
      AutoSpacing -> False, FontTracking -> "Condensed"]& ),
    InterpretationFunction:>(
     RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
    SyntaxForm->"fish",
    Tooltip->"Cl[3, 0, 0]"], ",", 
   TemplateBox[{
     TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
        RowBox[{
          AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
        FontTracking -> "Condensed", AutoSpacing -> False]& ), 
      InterpretationFunction :> (ReleaseHold[
        RowBox[{"mvDownUp", "@@", 
          MakeExpression[{
            Take[{
              SlotSequence[1]}, 
             Length[{3}]], 
            Take[{
              SlotSequence[1]}, {Length[{3}] + 1, 
              Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
      Tooltip -> "mvDownUp[{3}, {}]"], 
     TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
    "\[DoubleStruckE]",
    DisplayFunction:>(StyleBox[
      RowBox[{
        StyleBox["\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
      AutoSpacing -> False, FontTracking -> "Condensed"]& ),
    InterpretationFunction:>(
     RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
    SyntaxForm->"fish",
    Tooltip->"Cl[3, 0, 0]"], ",", 
   TemplateBox[{
     TemplateBox[{"1", "2"}, "mvDownUp", DisplayFunction :> (StyleBox[
        RowBox[{
          AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
          AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> Small, 
        FontTracking -> "Condensed", AutoSpacing -> False]& ), 
      InterpretationFunction :> (ReleaseHold[
        RowBox[{"mvDownUp", "@@", 
          MakeExpression[{
            Take[{
              SlotSequence[1]}, 
             Length[{1, 2}]], 
            Take[{
              SlotSequence[1]}, {Length[{1, 2}] + 1, 
              Length[{1, 2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
      Tooltip -> "mvDownUp[{1, 2}, {}]"], 
     TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
    "\[DoubleStruckE]",
    DisplayFunction:>(StyleBox[
      RowBox[{
        StyleBox["\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
      AutoSpacing -> False, FontTracking -> "Condensed"]& ),
    InterpretationFunction:>(
     RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
    SyntaxForm->"fish",
    Tooltip->"Cl[3, 0, 0]"], ",", 
   TemplateBox[{
     TemplateBox[{"1", "3"}, "mvDownUp", DisplayFunction :> (StyleBox[
        RowBox[{
          AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
          AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> Small, 
        FontTracking -> "Condensed", AutoSpacing -> False]& ), 
      InterpretationFunction :> (ReleaseHold[
        RowBox[{"mvDownUp", "@@", 
          MakeExpression[{
            Take[{
              SlotSequence[1]}, 
             Length[{1, 3}]], 
            Take[{
              SlotSequence[1]}, {Length[{1, 3}] + 1, 
              Length[{1, 3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
      Tooltip -> "mvDownUp[{1, 3}, {}]"], 
     TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
    "\[DoubleStruckE]",
    DisplayFunction:>(StyleBox[
      RowBox[{
        StyleBox["\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
      AutoSpacing -> False, FontTracking -> "Condensed"]& ),
    InterpretationFunction:>(
     RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
    SyntaxForm->"fish",
    Tooltip->"Cl[3, 0, 0]"], ",", 
   TemplateBox[{
     TemplateBox[{"2", "3"}, "mvDownUp", DisplayFunction :> (StyleBox[
        RowBox[{
          AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
          AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> Small, 
        FontTracking -> "Condensed", AutoSpacing -> False]& ), 
      InterpretationFunction :> (ReleaseHold[
        RowBox[{"mvDownUp", "@@", 
          MakeExpression[{
            Take[{
              SlotSequence[1]}, 
             Length[{2, 3}]], 
            Take[{
              SlotSequence[1]}, {Length[{2, 3}] + 1, 
              Length[{2, 3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
      Tooltip -> "mvDownUp[{2, 3}, {}]"], 
     TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
    "\[DoubleStruckE]",
    DisplayFunction:>(StyleBox[
      RowBox[{
        StyleBox["\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
      AutoSpacing -> False, FontTracking -> "Condensed"]& ),
    InterpretationFunction:>(
     RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
    SyntaxForm->"fish",
    Tooltip->"Cl[3, 0, 0]"], ",", 
   TemplateBox[{
     TemplateBox[{"1", "2", "3"}, "mvDownUp", DisplayFunction :> (StyleBox[
        RowBox[{
          AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
          AdjustmentBox[#2, BoxBaselineShift -> 1], ",", 
          AdjustmentBox[#3, BoxBaselineShift -> 1]}], FontSize -> Small, 
        FontTracking -> "Condensed", AutoSpacing -> False]& ), 
      InterpretationFunction :> (ReleaseHold[
        RowBox[{"mvDownUp", "@@", 
          MakeExpression[{
            Take[{
              SlotSequence[1]}, 
             Length[{1, 2, 3}]], 
            Take[{
              SlotSequence[1]}, {Length[{1, 2, 3}] + 1, 
              Length[{1, 2, 3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
       Tooltip -> "mvDownUp[{1, 2, 3}, {}]"], 
     TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
    "\[DoubleStruckE]",
    DisplayFunction:>(StyleBox[
      RowBox[{
        StyleBox["\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
      AutoSpacing -> False, FontTracking -> "Condensed"]& ),
    InterpretationFunction:>(
     RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
    SyntaxForm->"fish",
    Tooltip->"Cl[3, 0, 0]"]}], "}"}]], "Output",
 CellLabel->"Out[3]=",ExpressionUUID->"47d1eb78-2856-4676-aa94-8e0bcd1b15fe"]
}, Open  ]],

Cell["\<\
Next step is to provide parametrization the manifold itself. As a first \
example, let\[CloseCurlyQuote]s choose saddle surface, parametrized by \
\>", "Text",ExpressionUUID->"338f73ef-6ae3-4db7-b71f-3e809b1e1297"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gaDefinePositionVector", "[", 
  RowBox[{"\"\<Saddle\>\"", ",", 
   RowBox[{"Piecewise", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"u", "\[GeometricProduct]", 
          RowBox[{"\[DoubleStruckE]", "[", "1", "]"}]}], "+", 
         RowBox[{"v", "\[GeometricProduct]", 
          RowBox[{"\[DoubleStruckE]", "[", "2", "]"}]}], "+", 
         RowBox[{"u", "\[GeometricProduct]", "v", "\[GeometricProduct]", 
          RowBox[{"\[DoubleStruckE]", "[", "3", "]"}]}]}], ",", 
        RowBox[{"Element", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"u", ",", "v"}], "}"}], ",", "Reals"}], "]"}]}], "}"}], 
      "}"}], ",", "$Failed"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "v"}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"Simplify", "->", "FullSimplify"}], ",", 
   RowBox[{"Quiet", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.875695196510495*^9, 3.87569519910124*^9}, 
   3.8756953743834352`*^9, {3.875695443334181*^9, 3.875695464185605*^9}, {
   3.875696676070529*^9, 3.875696682380587*^9}, {3.875697919344063*^9, 
   3.8756979208858557`*^9}, {3.875698769613315*^9, 3.875698773707685*^9}, {
   3.875699493007145*^9, 3.87569951901729*^9}, 3.875699934375698*^9, {
   3.876215992974568*^9, 3.876216170400057*^9}, {3.87621621909278*^9, 
   3.876216221349428*^9}, {3.876889926671273*^9, 3.876890165816999*^9}, 
   3.876890197547408*^9, {3.8768902542201147`*^9, 3.8768902652118263`*^9}, {
   3.876890336856797*^9, 3.8768903532159653`*^9}, {3.877168952183505*^9, 
   3.877168958410149*^9}, {3.877769824291103*^9, 3.877770010631237*^9}, {
   3.8873400082591763`*^9, 3.887340012959363*^9}, {3.888376688104051*^9, 
   3.888376698673712*^9}, {3.8883856980388308`*^9, 3.88838571266171*^9}, 
   3.8883857445361547`*^9, {3.888467127918911*^9, 3.888467131359537*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"3b55591c-57b4-4017-8cf1-fc41270614be"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ManifoldName\"\>", "\[Rule]", "\<\"Saddle\"\>"}], ",", 
   RowBox[{"\<\"GA\"\>", "\[Rule]", 
    TemplateBox[{"3", "0", "0"},
     "Cl",
     DisplayFunction->(SubscriptBox[
       StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
       RowBox[{#, ",", #2}]]& ),
     Tooltip->None]}], ",", 
   RowBox[{"\<\"Dimension\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"Patches\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"gaRunningPatch\"\>", "\[Rule]", "\<\"Patch1\"\>"}], ",", 
   RowBox[{"\<\"ParameterRangeAssumptions\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"Parameters\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"StandardCoordinateNames\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v"}], "}"}]}], ",", 
   RowBox[{"\<\"Patch1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"PointVector\"\>", "\[Rule]", 
       RowBox[{
        RowBox[{"u", " ", 
         TemplateBox[{
           TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
              RowBox[{
                AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
              FontTracking -> "Condensed", AutoSpacing -> False]& ), 
            InterpretationFunction :> (ReleaseHold[
              RowBox[{"mvDownUp", "@@", 
                MakeExpression[{
                  Take[{
                    SlotSequence[1]}, 
                   Length[{1}]], 
                  Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
             Tooltip -> "mvDownUp[{1}, {}]"], 
           TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
              StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
              RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
          "\[DoubleStruckE]",
          DisplayFunction:>(StyleBox[
            RowBox[{
              StyleBox[
              "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
            AutoSpacing -> False, FontTracking -> "Condensed"]& ),
          
          InterpretationFunction:>(
           RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
          SyntaxForm->"fish",
          Tooltip->"Cl[3, 0, 0]"]}], "+", 
        RowBox[{"v", " ", 
         TemplateBox[{
           TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
              RowBox[{
                AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
              FontTracking -> "Condensed", AutoSpacing -> False]& ), 
            InterpretationFunction :> (ReleaseHold[
              RowBox[{"mvDownUp", "@@", 
                MakeExpression[{
                  Take[{
                    SlotSequence[1]}, 
                   Length[{2}]], 
                  Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
             Tooltip -> "mvDownUp[{2}, {}]"], 
           TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
              StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
              RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
          "\[DoubleStruckE]",
          DisplayFunction:>(StyleBox[
            RowBox[{
              StyleBox[
              "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
            AutoSpacing -> False, FontTracking -> "Condensed"]& ),
          
          InterpretationFunction:>(
           RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
          SyntaxForm->"fish",
          Tooltip->"Cl[3, 0, 0]"]}], "+", 
        RowBox[{"u", " ", "v", " ", 
         TemplateBox[{
           TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
              RowBox[{
                AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
              FontTracking -> "Condensed", AutoSpacing -> False]& ), 
            InterpretationFunction :> (ReleaseHold[
              RowBox[{"mvDownUp", "@@", 
                MakeExpression[{
                  Take[{
                    SlotSequence[1]}, 
                   Length[{3}]], 
                  Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
             Tooltip -> "mvDownUp[{3}, {}]"], 
           TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
              StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
              RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
          "\[DoubleStruckE]",
          DisplayFunction:>(StyleBox[
            RowBox[{
              StyleBox[
              "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
            AutoSpacing -> False, FontTracking -> "Condensed"]& ),
          
          InterpretationFunction:>(
           RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
          SyntaxForm->"fish",
          Tooltip->"Cl[3, 0, 0]"]}]}]}], ",", 
      RowBox[{"\<\"CoordinateRangeAssumptions\"\>", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"u", "|", "v"}], ")"}], "\[Element]", 
        TemplateBox[{},
         "Reals"]}]}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[4]=",ExpressionUUID->"aee03146-456f-473c-b7e7-c9c05656bc0c"]
}, Open  ]],

Cell["\<\
When surface is parametrized,  we can define coordinate system on that surface\
\>", "Text",ExpressionUUID->"7acdb459-2f17-483a-9445-7ba18b025001"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gaDefineCoordinateChart", "[", 
  RowBox[{"\"\<SaddleSurfaceCS\>\"", ",", 
   RowBox[{"gaPositionVector", "[", "\"\<Saddle\>\"", "]"}]}], "]"}]], "Input",\

 CellLabel->"In[37]:=",ExpressionUUID->"946ce42b-03af-4ce2-8921-43477022457c"],

Cell[BoxData[
 TemplateBox[{
  "gaDefineCoordinateChart", "dimension", 
   "\"Info. Length of variable list \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"u\
\\\", \\\",\\\", \\\"v\\\"}], \\\"}\\\"}]\\) does not match the geometric \
algebra \\!\\(\\*TemplateBox[List[\\\"3\\\", \\\"0\\\", \\\"0\\\"], \
\\\"Cl\\\", Rule[DisplayFunction, Function[SubscriptBox[StyleBox[\\\"Cl\\\", \
List[Rule[FontColor, RGBColor[0.`, 0.`, 1.`]]]], RowBox[List[Slot[1], \\\",\\\
\", Slot[2]]]]]], Rule[Tooltip, None]]\\) dimension. Assuming surface in a \
higher dimension space, setting flag surfaceCase=True.\"", 2, 37, 16, 
   17040064863631212018, "Local", "GeometricAlgebra`gaDefineCoordinateChart"},
  
  "MessageTemplate2"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"34d2bba9-5254-42c8-99e2-82c16ef103df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Computing the property:\"\>",
   "EchoLabel"], "  ", "\<\"PrimaryVectors\"\>"}]], "Echo",ExpressionUUID->\
"07177e89-a8c2-4895-8138-51de4755c744"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Computing and simplifying the property:\"\>",
   "EchoLabel"], "  ", "\<\"Metric\"\>"}]], "Echo",ExpressionUUID->"703bb24f-\
97d5-4eb7-8720-2535d9e81ee9"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Computing and simplifying the property:\"\>",
   "EchoLabel"], "  ", "\<\"ScaleFactors\"\>"}]], "Echo",ExpressionUUID->\
"a4ad1ccc-5d04-4d49-a636-48b3ba4a225f"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Computing the property:\"\>",
   "EchoLabel"], "  ", "\<\"InverseMetric\"\>"}]], "Echo",ExpressionUUID->\
"6e011c4f-61d4-4126-bccd-69351ac70776"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Computing the property:\"\>",
   "EchoLabel"], "  ", "\<\"ReciprocalVectors\"\>"}]], "Echo",ExpressionUUID->\
"393dba14-8588-4957-84b4-a4ee82769c65"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Computing and simplifying the property:\"\>",
   "EchoLabel"], "  ", "\<\"FullBasis\"\>"}]], "Echo",ExpressionUUID->\
"a14c1e52-08a5-4846-9177-59ed58390d0f"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Computing the property:\"\>",
   "EchoLabel"], "  ", "\<\"ToBasisElementRules\"\>"}]], "Echo",ExpressionUUID\
->"f1738ed1-b992-421d-b77d-bb550ebf0bc5"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Applying simplify function in ToBasisElementRules:\"\>",
   "EchoLabel"], "  ", "Identity"}]], "Echo",ExpressionUUID->"3cfd7b61-4c2b-\
4c64-a58f-ff30cf614191"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Computing normal to the surface in outer space:\"\>",
   "EchoLabel"], "  ", "\<\"NormalToSurface\"\>"}]], "Echo",ExpressionUUID->\
"1e7f2864-7e8c-4894-9476-aea7f338543d"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "gaNormalize", "symbolic", 
   "\"Warning. Symbolic answer. Will remove Abs[] from final rezult.\"", 2, 
   37, 17, 17040064863631212018, "Local", "GeometricAlgebra`gaNormalize"},
  "MessageTemplate2"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"6937165b-6464-4e3f-b55b-df79e61ad88f"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Computing all symmetric (torsion free) Christoffel symbols of \
the second kind: \"\>",
   "EchoLabel"], "  ", "\<\"ChristoffelSymbolsOfSecondKind\"\>"}]], "Echo",Exp\
ressionUUID->"27c574b1-43aa-47a9-81ba-1d182112a3f2"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ChartName\"\>", "\[Rule]", "\<\"SaddleSurfaceCS\"\>"}], ",", 
   RowBox[{"\<\"ManifoldName\"\>", "\[Rule]", "\<\"Saddle\"\>"}], ",", 
   RowBox[{"\<\"GA\"\>", "\[Rule]", 
    TemplateBox[{"3", "0", "0"},
     "Cl",
     DisplayFunction->(SubscriptBox[
       StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
       RowBox[{#, ",", #2}]]& ),
     Tooltip->None]}], ",", 
   RowBox[{"\<\"Dimension\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"Patches\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"gaRunningPatch\"\>", "\[Rule]", "\<\"Patch1\"\>"}], ",", 
   RowBox[{"\<\"ParameterRangeAssumptions\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"Parameters\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"StandardCoordinateNames\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v"}], "}"}]}], ",", 
   RowBox[{"\<\"Patch1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"PointVector\"\>", "\[Rule]", 
       RowBox[{
        RowBox[{"u", " ", 
         TemplateBox[{
           TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
              RowBox[{
                AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
              FontTracking -> "Condensed", AutoSpacing -> False]& ), 
            InterpretationFunction :> (ReleaseHold[
              RowBox[{"mvDownUp", "@@", 
                MakeExpression[{
                  Take[{
                    SlotSequence[1]}, 
                   Length[{1}]], 
                  Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
             Tooltip -> "mvDownUp[{1}, {}]"], 
           TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
              StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
              RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
          "\[DoubleStruckE]",
          DisplayFunction:>(StyleBox[
            RowBox[{
              StyleBox[
              "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
            AutoSpacing -> False, FontTracking -> "Condensed"]& ),
          
          InterpretationFunction:>(
           RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
          SyntaxForm->"fish",
          Tooltip->"Cl[3, 0, 0]"]}], "+", 
        RowBox[{"v", " ", 
         TemplateBox[{
           TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
              RowBox[{
                AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
              FontTracking -> "Condensed", AutoSpacing -> False]& ), 
            InterpretationFunction :> (ReleaseHold[
              RowBox[{"mvDownUp", "@@", 
                MakeExpression[{
                  Take[{
                    SlotSequence[1]}, 
                   Length[{2}]], 
                  Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
             Tooltip -> "mvDownUp[{2}, {}]"], 
           TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
              StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
              RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
          "\[DoubleStruckE]",
          DisplayFunction:>(StyleBox[
            RowBox[{
              StyleBox[
              "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
            AutoSpacing -> False, FontTracking -> "Condensed"]& ),
          
          InterpretationFunction:>(
           RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
          SyntaxForm->"fish",
          Tooltip->"Cl[3, 0, 0]"]}], "+", 
        RowBox[{"u", " ", "v", " ", 
         TemplateBox[{
           TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
              RowBox[{
                AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
              FontTracking -> "Condensed", AutoSpacing -> False]& ), 
            InterpretationFunction :> (ReleaseHold[
              RowBox[{"mvDownUp", "@@", 
                MakeExpression[{
                  Take[{
                    SlotSequence[1]}, 
                   Length[{3}]], 
                  Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
             Tooltip -> "mvDownUp[{3}, {}]"], 
           TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
              StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
              RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
          "\[DoubleStruckE]",
          DisplayFunction:>(StyleBox[
            RowBox[{
              StyleBox[
              "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
            AutoSpacing -> False, FontTracking -> "Condensed"]& ),
          
          InterpretationFunction:>(
           RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
          SyntaxForm->"fish",
          Tooltip->"Cl[3, 0, 0]"]}]}]}], ",", 
      RowBox[{"\<\"CoordinateRangeAssumptions\"\>", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"u", "|", "v"}], ")"}], "\[Element]", 
        TemplateBox[{},
         "Reals"]}]}], ",", 
      RowBox[{"\<\"PrimaryVectors\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{
            TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
               RowBox[{
                 AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small,
                FontTracking -> "Condensed", AutoSpacing -> False]& ), 
             InterpretationFunction :> (ReleaseHold[
               RowBox[{"mvDownUp", "@@", 
                 MakeExpression[{
                   Take[{
                    SlotSequence[1]}, 
                    Length[{1}]], 
                   Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
              Tooltip -> "mvDownUp[{1}, {}]"], 
            
            TemplateBox[{"3", "0", "0"}, "Cl", 
             DisplayFunction -> (SubscriptBox[
               StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
               RowBox[{#, ",", #2}]]& ), Tooltip -> None], 
            "\"SaddleSurfaceCS\"", 
            
            TemplateBox[{"u", "v"}, "mvPoint", 
             InterpretationFunction -> (RowBox[{"mvPoint", "[", 
                RowBox[{"{", 
                  RowBox[{
                    TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
             DisplayFunction -> (RowBox[{
                TemplateSlotSequence[1, ","]}]& ), Tooltip -> 
             "SaddleSurfaceCS"]},
           "\[DoubleStruckE]",
           DisplayFunction:>(StyleBox[
             RowBox[{
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               
               RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
             "Condensed"]& ),
           
           InterpretationFunction:>(
            RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", 
              "[", #4, "]"}]& ),
           SyntaxForm->"fish",
           Tooltip->"Cl[3, 0, 0]"], "\[RuleDelayed]", 
          RowBox[{
           TemplateBox[{
             TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
                RowBox[{
                  AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
              InterpretationFunction :> (ReleaseHold[
                RowBox[{"mvDownUp", "@@", 
                  MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{1}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
               Tooltip -> "mvDownUp[{1}, {}]"], 
             
             TemplateBox[{"3", "0", "0"}, "Cl", 
              DisplayFunction -> (SubscriptBox[
                StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
            "\[DoubleStruckE]",
            DisplayFunction:>(StyleBox[
              RowBox[{
                StyleBox[
                "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
              AutoSpacing -> False, FontTracking -> "Condensed"]& ),
            
            InterpretationFunction:>(
             RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
            SyntaxForm->"fish",
            Tooltip->"Cl[3, 0, 0]"], "+", 
           RowBox[{"v", " ", 
            TemplateBox[{
              TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                Tooltip -> "mvDownUp[{3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}]}]}], ",", 
         RowBox[{
          TemplateBox[{
            TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
               RowBox[{
                 AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small,
                FontTracking -> "Condensed", AutoSpacing -> False]& ), 
             InterpretationFunction :> (ReleaseHold[
               RowBox[{"mvDownUp", "@@", 
                 MakeExpression[{
                   Take[{
                    SlotSequence[1]}, 
                    Length[{2}]], 
                   Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
              Tooltip -> "mvDownUp[{2}, {}]"], 
            
            TemplateBox[{"3", "0", "0"}, "Cl", 
             DisplayFunction -> (SubscriptBox[
               StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
               RowBox[{#, ",", #2}]]& ), Tooltip -> None], 
            "\"SaddleSurfaceCS\"", 
            
            TemplateBox[{"u", "v"}, "mvPoint", 
             InterpretationFunction -> (RowBox[{"mvPoint", "[", 
                RowBox[{"{", 
                  RowBox[{
                    TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
             DisplayFunction -> (RowBox[{
                TemplateSlotSequence[1, ","]}]& ), Tooltip -> 
             "SaddleSurfaceCS"]},
           "\[DoubleStruckE]",
           DisplayFunction:>(StyleBox[
             RowBox[{
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               
               RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
             "Condensed"]& ),
           
           InterpretationFunction:>(
            RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", 
              "[", #4, "]"}]& ),
           SyntaxForm->"fish",
           Tooltip->"Cl[3, 0, 0]"], "\[RuleDelayed]", 
          RowBox[{
           TemplateBox[{
             TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
                RowBox[{
                  AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
              InterpretationFunction :> (ReleaseHold[
                RowBox[{"mvDownUp", "@@", 
                  MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{2}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
               Tooltip -> "mvDownUp[{2}, {}]"], 
             
             TemplateBox[{"3", "0", "0"}, "Cl", 
              DisplayFunction -> (SubscriptBox[
                StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
            "\[DoubleStruckE]",
            DisplayFunction:>(StyleBox[
              RowBox[{
                StyleBox[
                "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
              AutoSpacing -> False, FontTracking -> "Condensed"]& ),
            
            InterpretationFunction:>(
             RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
            SyntaxForm->"fish",
            Tooltip->"Cl[3, 0, 0]"], "+", 
           RowBox[{"u", " ", 
            TemplateBox[{
              TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                Tooltip -> "mvDownUp[{3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}]}]}]}], "}"}]}], ",", 
      RowBox[{"\<\"Metric\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "+", 
            SuperscriptBox["v", "2"]}], ",", 
           RowBox[{"u", " ", "v"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"u", " ", "v"}], ",", 
           RowBox[{"1", "+", 
            SuperscriptBox["u", "2"]}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"ScaleFactors\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         SqrtBox[
          RowBox[{"1", "+", 
           SuperscriptBox["v", "2"]}]], ",", 
         SqrtBox[
          RowBox[{"1", "+", 
           SuperscriptBox["u", "2"]}]]}], "}"}]}], ",", 
      RowBox[{"\<\"VolumeFactor\"\>", "\[Rule]", 
       RowBox[{
        TemplateBox[{
          TemplateBox[{"1", "2"}, "mvDownUp", DisplayFunction :> (StyleBox[
             RowBox[{
               AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
               AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> Small, 
             FontTracking -> "Condensed", AutoSpacing -> False]& ), 
           InterpretationFunction :> (ReleaseHold[
             RowBox[{"mvDownUp", "@@", 
               MakeExpression[{
                 Take[{
                   SlotSequence[1]}, 
                  Length[{1, 2}]], 
                 Take[{
                   SlotSequence[1]}, {Length[{1, 2}] + 1, 
                   Length[{1, 2}]}]}, StandardForm]}]]& ), SyntaxForm -> 
           "fish", Tooltip -> "mvDownUp[{1, 2}, {}]"], 
          
          TemplateBox[{"3", "0", "0"}, "Cl", 
           DisplayFunction -> (SubscriptBox[
             StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
             RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
         "\[DoubleStruckE]",
         DisplayFunction:>(StyleBox[
           RowBox[{
             StyleBox[
             "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
           AutoSpacing -> False, FontTracking -> "Condensed"]& ),
         InterpretationFunction:>(
          RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
         SyntaxForm->"fish",
         Tooltip->"Cl[3, 0, 0]"], "+", 
        RowBox[{"u", " ", 
         TemplateBox[{
           TemplateBox[{"1", "3"}, "mvDownUp", DisplayFunction :> (StyleBox[
              RowBox[{
                AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
                AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> Small,
               FontTracking -> "Condensed", AutoSpacing -> False]& ), 
            InterpretationFunction :> (ReleaseHold[
              RowBox[{"mvDownUp", "@@", 
                MakeExpression[{
                  Take[{
                    SlotSequence[1]}, 
                   Length[{1, 3}]], 
                  Take[{
                    SlotSequence[1]}, {Length[{1, 3}] + 1, 
                    Length[{1, 3}]}]}, StandardForm]}]]& ), SyntaxForm -> 
            "fish", Tooltip -> "mvDownUp[{1, 3}, {}]"], 
           TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
              StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
              RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
          "\[DoubleStruckE]",
          DisplayFunction:>(StyleBox[
            RowBox[{
              StyleBox[
              "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
            AutoSpacing -> False, FontTracking -> "Condensed"]& ),
          
          InterpretationFunction:>(
           RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
          SyntaxForm->"fish",
          Tooltip->"Cl[3, 0, 0]"]}], "-", 
        RowBox[{"v", " ", 
         TemplateBox[{
           TemplateBox[{"2", "3"}, "mvDownUp", DisplayFunction :> (StyleBox[
              RowBox[{
                AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
                AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> Small,
               FontTracking -> "Condensed", AutoSpacing -> False]& ), 
            InterpretationFunction :> (ReleaseHold[
              RowBox[{"mvDownUp", "@@", 
                MakeExpression[{
                  Take[{
                    SlotSequence[1]}, 
                   Length[{2, 3}]], 
                  Take[{
                    SlotSequence[1]}, {Length[{2, 3}] + 1, 
                    Length[{2, 3}]}]}, StandardForm]}]]& ), SyntaxForm -> 
            "fish", Tooltip -> "mvDownUp[{2, 3}, {}]"], 
           TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
              StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
              RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
          "\[DoubleStruckE]",
          DisplayFunction:>(StyleBox[
            RowBox[{
              StyleBox[
              "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
            AutoSpacing -> False, FontTracking -> "Condensed"]& ),
          
          InterpretationFunction:>(
           RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
          SyntaxForm->"fish",
          Tooltip->"Cl[3, 0, 0]"]}]}]}], ",", 
      RowBox[{"\<\"InverseMetric\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox[
            RowBox[{"1", "+", 
             SuperscriptBox["u", "2"]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["u", "2"], "+", 
             SuperscriptBox["v", "2"]}]], ",", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"u", " ", "v"}], 
             RowBox[{"1", "+", 
              SuperscriptBox["u", "2"], "+", 
              SuperscriptBox["v", "2"]}]]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"u", " ", "v"}], 
             RowBox[{"1", "+", 
              SuperscriptBox["u", "2"], "+", 
              SuperscriptBox["v", "2"]}]]}], ",", 
           FractionBox[
            RowBox[{"1", "+", 
             SuperscriptBox["v", "2"]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["u", "2"], "+", 
             SuperscriptBox["v", "2"]}]]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"ReciprocalVectors\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           TemplateBox[{
             TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
                RowBox[{
                  AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
              InterpretationFunction :> (ReleaseHold[
                RowBox[{"mvDownUp", "@@", 
                  MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{1}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
               Tooltip -> "mvDownUp[{1}, {}]"], 
             
             TemplateBox[{"3", "0", "0"}, "Cl", 
              DisplayFunction -> (SubscriptBox[
                StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
            "\[DoubleStruckE]",
            DisplayFunction:>(StyleBox[
              RowBox[{
                StyleBox[
                "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
              AutoSpacing -> False, FontTracking -> "Condensed"]& ),
            
            InterpretationFunction:>(
             RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
            SyntaxForm->"fish",
            Tooltip->"Cl[3, 0, 0]"], "+", 
           RowBox[{"v", " ", 
            TemplateBox[{
              TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                Tooltip -> "mvDownUp[{3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}]}], "\[Rule]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"u", " ", "v", " ", 
              RowBox[{"(", 
               RowBox[{
                TemplateBox[{
                  
                  TemplateBox[{"2"}, "mvDownUp", 
                   DisplayFunction :> (StyleBox[
                    RowBox[{
                    AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                    Small, FontTracking -> "Condensed", AutoSpacing -> 
                    False]& ), InterpretationFunction :> (ReleaseHold[
                    RowBox[{"mvDownUp", "@@", 
                    MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{2}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                    Tooltip -> "mvDownUp[{2}, {}]"], 
                  
                  TemplateBox[{"3", "0", "0"}, "Cl", 
                   DisplayFunction -> (SubscriptBox[
                    StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                    RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
                 "\[DoubleStruckE]",
                 DisplayFunction:>(StyleBox[
                   RowBox[{
                    StyleBox[
                    "\[DoubleStruckE]", FontColor -> 
                    RGBColor[0., 0., 1.]], #}], AutoSpacing -> False, 
                   FontTracking -> "Condensed"]& ),
                 
                 InterpretationFunction:>(
                  RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
                 SyntaxForm->"fish",
                 Tooltip->"Cl[3, 0, 0]"], "+", 
                RowBox[{"u", " ", 
                 TemplateBox[{
                   TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                    RowBox[{
                    AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                    Small, FontTracking -> "Condensed", AutoSpacing -> 
                    False]& ), InterpretationFunction :> (ReleaseHold[
                    RowBox[{"mvDownUp", "@@", 
                    MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                     Tooltip -> "mvDownUp[{3}, {}]"], 
                   
                   TemplateBox[{"3", "0", "0"}, "Cl", 
                    DisplayFunction -> (SubscriptBox[
                    StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                    RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
                  "\[DoubleStruckE]",
                  DisplayFunction:>(StyleBox[
                    RowBox[{
                    StyleBox[
                    "\[DoubleStruckE]", FontColor -> 
                    RGBColor[0., 0., 1.]], #}], AutoSpacing -> False, 
                    FontTracking -> "Condensed"]& ),
                  
                  InterpretationFunction:>(
                   RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
                  SyntaxForm->"fish",
                  Tooltip->"Cl[3, 0, 0]"]}]}], ")"}]}], 
             RowBox[{"1", "+", 
              SuperscriptBox["u", "2"], "+", 
              SuperscriptBox["v", "2"]}]]}], "+", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["u", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               TemplateBox[{
                 TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
                    RowBox[{
                    AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                    Small, FontTracking -> "Condensed", AutoSpacing -> 
                    False]& ), InterpretationFunction :> (ReleaseHold[
                    RowBox[{"mvDownUp", "@@", 
                    MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{1}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                   Tooltip -> "mvDownUp[{1}, {}]"], 
                 
                 TemplateBox[{"3", "0", "0"}, "Cl", 
                  DisplayFunction -> (SubscriptBox[
                    StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                    RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
                "\[DoubleStruckE]",
                DisplayFunction:>(StyleBox[
                  RowBox[{
                    StyleBox[
                    "\[DoubleStruckE]", FontColor -> 
                    RGBColor[0., 0., 1.]], #}], AutoSpacing -> False, 
                  FontTracking -> "Condensed"]& ),
                
                InterpretationFunction:>(
                 RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
                SyntaxForm->"fish",
                Tooltip->"Cl[3, 0, 0]"], "+", 
               RowBox[{"v", " ", 
                TemplateBox[{
                  
                  TemplateBox[{"3"}, "mvDownUp", 
                   DisplayFunction :> (StyleBox[
                    RowBox[{
                    AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                    Small, FontTracking -> "Condensed", AutoSpacing -> 
                    False]& ), InterpretationFunction :> (ReleaseHold[
                    RowBox[{"mvDownUp", "@@", 
                    MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                    Tooltip -> "mvDownUp[{3}, {}]"], 
                  
                  TemplateBox[{"3", "0", "0"}, "Cl", 
                   DisplayFunction -> (SubscriptBox[
                    StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                    RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
                 "\[DoubleStruckE]",
                 DisplayFunction:>(StyleBox[
                   RowBox[{
                    StyleBox[
                    "\[DoubleStruckE]", FontColor -> 
                    RGBColor[0., 0., 1.]], #}], AutoSpacing -> False, 
                   FontTracking -> "Condensed"]& ),
                 
                 InterpretationFunction:>(
                  RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
                 SyntaxForm->"fish",
                 Tooltip->"Cl[3, 0, 0]"]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["u", "2"], "+", 
             SuperscriptBox["v", "2"]}]]}]}], ",", 
         RowBox[{
          RowBox[{
           TemplateBox[{
             TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
                RowBox[{
                  AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
              InterpretationFunction :> (ReleaseHold[
                RowBox[{"mvDownUp", "@@", 
                  MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{2}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
               Tooltip -> "mvDownUp[{2}, {}]"], 
             
             TemplateBox[{"3", "0", "0"}, "Cl", 
              DisplayFunction -> (SubscriptBox[
                StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
            "\[DoubleStruckE]",
            DisplayFunction:>(StyleBox[
              RowBox[{
                StyleBox[
                "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
              AutoSpacing -> False, FontTracking -> "Condensed"]& ),
            
            InterpretationFunction:>(
             RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
            SyntaxForm->"fish",
            Tooltip->"Cl[3, 0, 0]"], "+", 
           RowBox[{"u", " ", 
            TemplateBox[{
              TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                Tooltip -> "mvDownUp[{3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}]}], "\[Rule]", 
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["v", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               TemplateBox[{
                 TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
                    RowBox[{
                    AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                    Small, FontTracking -> "Condensed", AutoSpacing -> 
                    False]& ), InterpretationFunction :> (ReleaseHold[
                    RowBox[{"mvDownUp", "@@", 
                    MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{2}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                   Tooltip -> "mvDownUp[{2}, {}]"], 
                 
                 TemplateBox[{"3", "0", "0"}, "Cl", 
                  DisplayFunction -> (SubscriptBox[
                    StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                    RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
                "\[DoubleStruckE]",
                DisplayFunction:>(StyleBox[
                  RowBox[{
                    StyleBox[
                    "\[DoubleStruckE]", FontColor -> 
                    RGBColor[0., 0., 1.]], #}], AutoSpacing -> False, 
                  FontTracking -> "Condensed"]& ),
                
                InterpretationFunction:>(
                 RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
                SyntaxForm->"fish",
                Tooltip->"Cl[3, 0, 0]"], "+", 
               RowBox[{"u", " ", 
                TemplateBox[{
                  
                  TemplateBox[{"3"}, "mvDownUp", 
                   DisplayFunction :> (StyleBox[
                    RowBox[{
                    AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                    Small, FontTracking -> "Condensed", AutoSpacing -> 
                    False]& ), InterpretationFunction :> (ReleaseHold[
                    RowBox[{"mvDownUp", "@@", 
                    MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                    Tooltip -> "mvDownUp[{3}, {}]"], 
                  
                  TemplateBox[{"3", "0", "0"}, "Cl", 
                   DisplayFunction -> (SubscriptBox[
                    StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                    RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
                 "\[DoubleStruckE]",
                 DisplayFunction:>(StyleBox[
                   RowBox[{
                    StyleBox[
                    "\[DoubleStruckE]", FontColor -> 
                    RGBColor[0., 0., 1.]], #}], AutoSpacing -> False, 
                   FontTracking -> "Condensed"]& ),
                 
                 InterpretationFunction:>(
                  RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
                 SyntaxForm->"fish",
                 Tooltip->"Cl[3, 0, 0]"]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["u", "2"], "+", 
             SuperscriptBox["v", "2"]}]], "-", 
           FractionBox[
            RowBox[{"u", " ", "v", " ", 
             RowBox[{"(", 
              RowBox[{
               TemplateBox[{
                 TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
                    RowBox[{
                    AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                    Small, FontTracking -> "Condensed", AutoSpacing -> 
                    False]& ), InterpretationFunction :> (ReleaseHold[
                    RowBox[{"mvDownUp", "@@", 
                    MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{1}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                   Tooltip -> "mvDownUp[{1}, {}]"], 
                 
                 TemplateBox[{"3", "0", "0"}, "Cl", 
                  DisplayFunction -> (SubscriptBox[
                    StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                    RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
                "\[DoubleStruckE]",
                DisplayFunction:>(StyleBox[
                  RowBox[{
                    StyleBox[
                    "\[DoubleStruckE]", FontColor -> 
                    RGBColor[0., 0., 1.]], #}], AutoSpacing -> False, 
                  FontTracking -> "Condensed"]& ),
                
                InterpretationFunction:>(
                 RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
                SyntaxForm->"fish",
                Tooltip->"Cl[3, 0, 0]"], "+", 
               RowBox[{"v", " ", 
                TemplateBox[{
                  
                  TemplateBox[{"3"}, "mvDownUp", 
                   DisplayFunction :> (StyleBox[
                    RowBox[{
                    AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                    Small, FontTracking -> "Condensed", AutoSpacing -> 
                    False]& ), InterpretationFunction :> (ReleaseHold[
                    RowBox[{"mvDownUp", "@@", 
                    MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                    Tooltip -> "mvDownUp[{3}, {}]"], 
                  
                  TemplateBox[{"3", "0", "0"}, "Cl", 
                   DisplayFunction -> (SubscriptBox[
                    StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                    RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
                 "\[DoubleStruckE]",
                 DisplayFunction:>(StyleBox[
                   RowBox[{
                    StyleBox[
                    "\[DoubleStruckE]", FontColor -> 
                    RGBColor[0., 0., 1.]], #}], AutoSpacing -> False, 
                   FontTracking -> "Condensed"]& ),
                 
                 InterpretationFunction:>(
                  RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
                 SyntaxForm->"fish",
                 Tooltip->"Cl[3, 0, 0]"]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["u", "2"], "+", 
             SuperscriptBox["v", "2"]}]]}]}]}], "}"}]}], ",", 
      RowBox[{"\<\"FullBasis\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{
            TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
               RowBox[{
                 AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small,
                FontTracking -> "Condensed", AutoSpacing -> False]& ), 
             InterpretationFunction :> (ReleaseHold[
               RowBox[{"mvDownUp", "@@", 
                 MakeExpression[{
                   Take[{
                    SlotSequence[1]}, 
                    Length[{1}]], 
                   Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
              Tooltip -> "mvDownUp[{1}, {}]"], 
            
            TemplateBox[{"3", "0", "0"}, "Cl", 
             DisplayFunction -> (SubscriptBox[
               StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
               RowBox[{#, ",", #2}]]& ), Tooltip -> None], 
            "\"SaddleSurfaceCS\"", 
            
            TemplateBox[{"u", "v"}, "mvPoint", 
             InterpretationFunction -> (RowBox[{"mvPoint", "[", 
                RowBox[{"{", 
                  RowBox[{
                    TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
             DisplayFunction -> (RowBox[{
                TemplateSlotSequence[1, ","]}]& ), Tooltip -> 
             "SaddleSurfaceCS"]},
           "\[DoubleStruckE]",
           DisplayFunction:>(StyleBox[
             RowBox[{
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               
               RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
             "Condensed"]& ),
           
           InterpretationFunction:>(
            RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", 
              "[", #4, "]"}]& ),
           SyntaxForm->"fish",
           Tooltip->"Cl[3, 0, 0]"], "\[Rule]", 
          RowBox[{
           TemplateBox[{
             TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
                RowBox[{
                  AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
              InterpretationFunction :> (ReleaseHold[
                RowBox[{"mvDownUp", "@@", 
                  MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{1}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
               Tooltip -> "mvDownUp[{1}, {}]"], 
             
             TemplateBox[{"3", "0", "0"}, "Cl", 
              DisplayFunction -> (SubscriptBox[
                StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
            "\[DoubleStruckE]",
            DisplayFunction:>(StyleBox[
              RowBox[{
                StyleBox[
                "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
              AutoSpacing -> False, FontTracking -> "Condensed"]& ),
            
            InterpretationFunction:>(
             RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
            SyntaxForm->"fish",
            Tooltip->"Cl[3, 0, 0]"], "+", 
           RowBox[{"v", " ", 
            TemplateBox[{
              TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                Tooltip -> "mvDownUp[{3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}]}]}], ",", 
         RowBox[{
          TemplateBox[{
            TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
               RowBox[{
                 AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small,
                FontTracking -> "Condensed", AutoSpacing -> False]& ), 
             InterpretationFunction :> (ReleaseHold[
               RowBox[{"mvDownUp", "@@", 
                 MakeExpression[{
                   Take[{
                    SlotSequence[1]}, 
                    Length[{2}]], 
                   Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
              Tooltip -> "mvDownUp[{2}, {}]"], 
            
            TemplateBox[{"3", "0", "0"}, "Cl", 
             DisplayFunction -> (SubscriptBox[
               StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
               RowBox[{#, ",", #2}]]& ), Tooltip -> None], 
            "\"SaddleSurfaceCS\"", 
            
            TemplateBox[{"u", "v"}, "mvPoint", 
             InterpretationFunction -> (RowBox[{"mvPoint", "[", 
                RowBox[{"{", 
                  RowBox[{
                    TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
             DisplayFunction -> (RowBox[{
                TemplateSlotSequence[1, ","]}]& ), Tooltip -> 
             "SaddleSurfaceCS"]},
           "\[DoubleStruckE]",
           DisplayFunction:>(StyleBox[
             RowBox[{
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               
               RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
             "Condensed"]& ),
           
           InterpretationFunction:>(
            RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", 
              "[", #4, "]"}]& ),
           SyntaxForm->"fish",
           Tooltip->"Cl[3, 0, 0]"], "\[Rule]", 
          RowBox[{
           TemplateBox[{
             TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
                RowBox[{
                  AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
              InterpretationFunction :> (ReleaseHold[
                RowBox[{"mvDownUp", "@@", 
                  MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{2}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
               Tooltip -> "mvDownUp[{2}, {}]"], 
             
             TemplateBox[{"3", "0", "0"}, "Cl", 
              DisplayFunction -> (SubscriptBox[
                StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
            "\[DoubleStruckE]",
            DisplayFunction:>(StyleBox[
              RowBox[{
                StyleBox[
                "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
              AutoSpacing -> False, FontTracking -> "Condensed"]& ),
            
            InterpretationFunction:>(
             RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
            SyntaxForm->"fish",
            Tooltip->"Cl[3, 0, 0]"], "+", 
           RowBox[{"u", " ", 
            TemplateBox[{
              TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                Tooltip -> "mvDownUp[{3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}]}]}], ",", 
         RowBox[{
          TemplateBox[{
            TemplateBox[{"1", "2"}, "mvDownUp", DisplayFunction :> (StyleBox[
               RowBox[{
                 AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
                 AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> 
               Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
             InterpretationFunction :> (ReleaseHold[
               RowBox[{"mvDownUp", "@@", 
                 MakeExpression[{
                   Take[{
                    SlotSequence[1]}, 
                    Length[{1, 2}]], 
                   Take[{
                    SlotSequence[1]}, {Length[{1, 2}] + 1, 
                    Length[{1, 2}]}]}, StandardForm]}]]& ), SyntaxForm -> 
             "fish", Tooltip -> "mvDownUp[{1, 2}, {}]"], 
            
            TemplateBox[{"3", "0", "0"}, "Cl", 
             DisplayFunction -> (SubscriptBox[
               StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
               RowBox[{#, ",", #2}]]& ), Tooltip -> None], 
            "\"SaddleSurfaceCS\"", 
            
            TemplateBox[{"u", "v"}, "mvPoint", 
             InterpretationFunction -> (RowBox[{"mvPoint", "[", 
                RowBox[{"{", 
                  RowBox[{
                    TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
             DisplayFunction -> (RowBox[{
                TemplateSlotSequence[1, ","]}]& ), Tooltip -> 
             "SaddleSurfaceCS"]},
           "\[DoubleStruckE]",
           DisplayFunction:>(StyleBox[
             RowBox[{
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               
               RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
             "Condensed"]& ),
           
           InterpretationFunction:>(
            RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", 
              "[", #4, "]"}]& ),
           SyntaxForm->"fish",
           Tooltip->"Cl[3, 0, 0]"], "\[Rule]", 
          RowBox[{
           TemplateBox[{
             
             TemplateBox[{"1", "2"}, "mvDownUp", 
              DisplayFunction :> (StyleBox[
                RowBox[{
                  AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
                  AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> 
                Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
              InterpretationFunction :> (ReleaseHold[
                RowBox[{"mvDownUp", "@@", 
                  MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{1, 2}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{1, 2}] + 1, 
                    Length[{1, 2}]}]}, StandardForm]}]]& ), SyntaxForm -> 
              "fish", Tooltip -> "mvDownUp[{1, 2}, {}]"], 
             
             TemplateBox[{"3", "0", "0"}, "Cl", 
              DisplayFunction -> (SubscriptBox[
                StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
            "\[DoubleStruckE]",
            DisplayFunction:>(StyleBox[
              RowBox[{
                StyleBox[
                "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
              AutoSpacing -> False, FontTracking -> "Condensed"]& ),
            
            InterpretationFunction:>(
             RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
            SyntaxForm->"fish",
            Tooltip->"Cl[3, 0, 0]"], "+", 
           RowBox[{"u", " ", 
            TemplateBox[{
              TemplateBox[{"1", "3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
                   AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{1, 3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{1, 3}] + 1, 
                    Length[{1, 3}]}]}, StandardForm]}]]& ), SyntaxForm -> 
               "fish", Tooltip -> "mvDownUp[{1, 3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}], "-", 
           RowBox[{"v", " ", 
            TemplateBox[{
              TemplateBox[{"2", "3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
                   AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{2, 3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{2, 3}] + 1, 
                    Length[{2, 3}]}]}, StandardForm]}]]& ), SyntaxForm -> 
               "fish", Tooltip -> "mvDownUp[{2, 3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}]}]}]}], "}"}]}], ",", 
      RowBox[{"\<\"ToBasisElementRules\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{
            TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
               RowBox[{
                 AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small,
                FontTracking -> "Condensed", AutoSpacing -> False]& ), 
             InterpretationFunction :> (ReleaseHold[
               RowBox[{"mvDownUp", "@@", 
                 MakeExpression[{
                   Take[{
                    SlotSequence[1]}, 
                    Length[{1}]], 
                   Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
              Tooltip -> "mvDownUp[{1}, {}]"], 
            
            TemplateBox[{"3", "0", "0"}, "Cl", 
             DisplayFunction -> (SubscriptBox[
               StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
               RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
           "\[DoubleStruckE]",
           DisplayFunction:>(StyleBox[
             RowBox[{
               StyleBox[
               "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
             AutoSpacing -> False, FontTracking -> "Condensed"]& ),
           
           InterpretationFunction:>(
            RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
           SyntaxForm->"fish",
           Tooltip->"Cl[3, 0, 0]"], "\[Rule]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "v"}], " ", 
            TemplateBox[{
              TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                Tooltip -> "mvDownUp[{3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}], "+", 
           TemplateBox[{
             TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
                RowBox[{
                  AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
              InterpretationFunction :> (ReleaseHold[
                RowBox[{"mvDownUp", "@@", 
                  MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{1}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
               Tooltip -> "mvDownUp[{1}, {}]"], 
             
             TemplateBox[{"3", "0", "0"}, "Cl", 
              DisplayFunction -> (SubscriptBox[
                StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                RowBox[{#, ",", #2}]]& ), Tooltip -> None], 
             "\"SaddleSurfaceCS\"", 
             
             TemplateBox[{"u", "v"}, "mvPoint", 
              InterpretationFunction -> (RowBox[{"mvPoint", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
              DisplayFunction -> (RowBox[{
                 TemplateSlotSequence[1, ","]}]& ), Tooltip -> 
              "SaddleSurfaceCS"]},
            "\[DoubleStruckE]",
            DisplayFunction:>(StyleBox[
              RowBox[{
                RowBox[{
                  StyleBox[
                  "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
                RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
              "Condensed"]& ),
            
            InterpretationFunction:>(
             RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", 
               "[", #4, "]"}]& ),
            SyntaxForm->"fish",
            Tooltip->"Cl[3, 0, 0]"]}]}], ",", 
         RowBox[{
          TemplateBox[{
            TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
               RowBox[{
                 AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small,
                FontTracking -> "Condensed", AutoSpacing -> False]& ), 
             InterpretationFunction :> (ReleaseHold[
               RowBox[{"mvDownUp", "@@", 
                 MakeExpression[{
                   Take[{
                    SlotSequence[1]}, 
                    Length[{2}]], 
                   Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
              Tooltip -> "mvDownUp[{2}, {}]"], 
            
            TemplateBox[{"3", "0", "0"}, "Cl", 
             DisplayFunction -> (SubscriptBox[
               StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
               RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
           "\[DoubleStruckE]",
           DisplayFunction:>(StyleBox[
             RowBox[{
               StyleBox[
               "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
             AutoSpacing -> False, FontTracking -> "Condensed"]& ),
           
           InterpretationFunction:>(
            RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
           SyntaxForm->"fish",
           Tooltip->"Cl[3, 0, 0]"], "\[Rule]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "u"}], " ", 
            TemplateBox[{
              TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
                Tooltip -> "mvDownUp[{3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}], "+", 
           TemplateBox[{
             TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
                RowBox[{
                  AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> 
                Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
              InterpretationFunction :> (ReleaseHold[
                RowBox[{"mvDownUp", "@@", 
                  MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{2}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
               Tooltip -> "mvDownUp[{2}, {}]"], 
             
             TemplateBox[{"3", "0", "0"}, "Cl", 
              DisplayFunction -> (SubscriptBox[
                StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                RowBox[{#, ",", #2}]]& ), Tooltip -> None], 
             "\"SaddleSurfaceCS\"", 
             
             TemplateBox[{"u", "v"}, "mvPoint", 
              InterpretationFunction -> (RowBox[{"mvPoint", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
              DisplayFunction -> (RowBox[{
                 TemplateSlotSequence[1, ","]}]& ), Tooltip -> 
              "SaddleSurfaceCS"]},
            "\[DoubleStruckE]",
            DisplayFunction:>(StyleBox[
              RowBox[{
                RowBox[{
                  StyleBox[
                  "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
                RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
              "Condensed"]& ),
            
            InterpretationFunction:>(
             RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", 
               "[", #4, "]"}]& ),
            SyntaxForm->"fish",
            Tooltip->"Cl[3, 0, 0]"]}]}], ",", 
         RowBox[{
          TemplateBox[{
            TemplateBox[{"1", "2"}, "mvDownUp", DisplayFunction :> (StyleBox[
               RowBox[{
                 AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
                 AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> 
               Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
             InterpretationFunction :> (ReleaseHold[
               RowBox[{"mvDownUp", "@@", 
                 MakeExpression[{
                   Take[{
                    SlotSequence[1]}, 
                    Length[{1, 2}]], 
                   Take[{
                    SlotSequence[1]}, {Length[{1, 2}] + 1, 
                    Length[{1, 2}]}]}, StandardForm]}]]& ), SyntaxForm -> 
             "fish", Tooltip -> "mvDownUp[{1, 2}, {}]"], 
            
            TemplateBox[{"3", "0", "0"}, "Cl", 
             DisplayFunction -> (SubscriptBox[
               StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
               RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
           "\[DoubleStruckE]",
           DisplayFunction:>(StyleBox[
             RowBox[{
               StyleBox[
               "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
             AutoSpacing -> False, FontTracking -> "Condensed"]& ),
           
           InterpretationFunction:>(
            RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
           SyntaxForm->"fish",
           Tooltip->"Cl[3, 0, 0]"], "\[Rule]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "u"}], " ", 
            TemplateBox[{
              TemplateBox[{"1", "3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
                   AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{1, 3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{1, 3}] + 1, 
                    Length[{1, 3}]}]}, StandardForm]}]]& ), SyntaxForm -> 
               "fish", Tooltip -> "mvDownUp[{1, 3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}], "+", 
           RowBox[{"v", " ", 
            TemplateBox[{
              TemplateBox[{"2", "3"}, "mvDownUp", DisplayFunction :> (StyleBox[
                 RowBox[{
                   AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
                   AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> 
                 Small, FontTracking -> "Condensed", AutoSpacing -> False]& ),
                InterpretationFunction :> (ReleaseHold[
                 RowBox[{"mvDownUp", "@@", 
                   MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{2, 3}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{2, 3}] + 1, 
                    Length[{2, 3}]}]}, StandardForm]}]]& ), SyntaxForm -> 
               "fish", Tooltip -> "mvDownUp[{2, 3}, {}]"], 
              
              TemplateBox[{"3", "0", "0"}, "Cl", 
               DisplayFunction -> (SubscriptBox[
                 StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                 RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
             "\[DoubleStruckE]",
             DisplayFunction:>(StyleBox[
               RowBox[{
                 StyleBox[
                 "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
               AutoSpacing -> False, FontTracking -> "Condensed"]& ),
             
             InterpretationFunction:>(
              RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
             SyntaxForm->"fish",
             Tooltip->"Cl[3, 0, 0]"]}], "+", 
           TemplateBox[{
             
             TemplateBox[{"1", "2"}, "mvDownUp", 
              DisplayFunction :> (StyleBox[
                RowBox[{
                  AdjustmentBox[#, BoxBaselineShift -> 1], ",", 
                  AdjustmentBox[#2, BoxBaselineShift -> 1]}], FontSize -> 
                Small, FontTracking -> "Condensed", AutoSpacing -> False]& ), 
              InterpretationFunction :> (ReleaseHold[
                RowBox[{"mvDownUp", "@@", 
                  MakeExpression[{
                    Take[{
                    SlotSequence[1]}, 
                    Length[{1, 2}]], 
                    Take[{
                    SlotSequence[1]}, {Length[{1, 2}] + 1, 
                    Length[{1, 2}]}]}, StandardForm]}]]& ), SyntaxForm -> 
              "fish", Tooltip -> "mvDownUp[{1, 2}, {}]"], 
             
             TemplateBox[{"3", "0", "0"}, "Cl", 
              DisplayFunction -> (SubscriptBox[
                StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
                RowBox[{#, ",", #2}]]& ), Tooltip -> None], 
             "\"SaddleSurfaceCS\"", 
             
             TemplateBox[{"u", "v"}, "mvPoint", 
              InterpretationFunction -> (RowBox[{"mvPoint", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
              DisplayFunction -> (RowBox[{
                 TemplateSlotSequence[1, ","]}]& ), Tooltip -> 
              "SaddleSurfaceCS"]},
            "\[DoubleStruckE]",
            DisplayFunction:>(StyleBox[
              RowBox[{
                RowBox[{
                  StyleBox[
                  "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
                RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
              "Condensed"]& ),
            
            InterpretationFunction:>(
             RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", 
               "[", #4, "]"}]& ),
            SyntaxForm->"fish",
            Tooltip->"Cl[3, 0, 0]"]}]}]}], "}"}]}], ",", 
      RowBox[{"\<\"NormalToSurface\"\>", "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "v"}], " ", 
          TemplateBox[{
            TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
               RowBox[{
                 AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small,
                FontTracking -> "Condensed", AutoSpacing -> False]& ), 
             InterpretationFunction :> (ReleaseHold[
               RowBox[{"mvDownUp", "@@", 
                 MakeExpression[{
                   Take[{
                    SlotSequence[1]}, 
                    Length[{1}]], 
                   Take[{
                    SlotSequence[1]}, {Length[{1}] + 1, 
                    Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
              Tooltip -> "mvDownUp[{1}, {}]"], 
            
            TemplateBox[{"3", "0", "0"}, "Cl", 
             DisplayFunction -> (SubscriptBox[
               StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
               RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
           "\[DoubleStruckE]",
           DisplayFunction:>(StyleBox[
             RowBox[{
               StyleBox[
               "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
             AutoSpacing -> False, FontTracking -> "Condensed"]& ),
           
           InterpretationFunction:>(
            RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
           SyntaxForm->"fish",
           Tooltip->"Cl[3, 0, 0]"]}], "-", 
         RowBox[{"u", " ", 
          TemplateBox[{
            TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
               RowBox[{
                 AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small,
                FontTracking -> "Condensed", AutoSpacing -> False]& ), 
             InterpretationFunction :> (ReleaseHold[
               RowBox[{"mvDownUp", "@@", 
                 MakeExpression[{
                   Take[{
                    SlotSequence[1]}, 
                    Length[{2}]], 
                   Take[{
                    SlotSequence[1]}, {Length[{2}] + 1, 
                    Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
              Tooltip -> "mvDownUp[{2}, {}]"], 
            
            TemplateBox[{"3", "0", "0"}, "Cl", 
             DisplayFunction -> (SubscriptBox[
               StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
               RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
           "\[DoubleStruckE]",
           DisplayFunction:>(StyleBox[
             RowBox[{
               StyleBox[
               "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
             AutoSpacing -> False, FontTracking -> "Condensed"]& ),
           
           InterpretationFunction:>(
            RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
           SyntaxForm->"fish",
           Tooltip->"Cl[3, 0, 0]"]}], "+", 
         TemplateBox[{
           TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
              RowBox[{
                AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
              FontTracking -> "Condensed", AutoSpacing -> False]& ), 
            InterpretationFunction :> (ReleaseHold[
              RowBox[{"mvDownUp", "@@", 
                MakeExpression[{
                  Take[{
                    SlotSequence[1]}, 
                   Length[{3}]], 
                  Take[{
                    SlotSequence[1]}, {Length[{3}] + 1, 
                    Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish",
             Tooltip -> "mvDownUp[{3}, {}]"], 
           TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
              StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
              RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
          "\[DoubleStruckE]",
          DisplayFunction:>(StyleBox[
            RowBox[{
              StyleBox[
              "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
            AutoSpacing -> False, FontTracking -> "Condensed"]& ),
          
          InterpretationFunction:>(
           RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
          SyntaxForm->"fish",
          Tooltip->"Cl[3, 0, 0]"]}], 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox["u", "2"], "+", 
          SuperscriptBox["v", "2"]}]]]}], ",", 
      RowBox[{"\<\"ChristoffelSymbolsOfSecondKind\"\>", "\[Rule]", 
       InterpretationBox[
        RowBox[{
         TagBox["SymmetrizedArray",
          "SummaryHead"], "[", 
         DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
          "Ready"}, 
          TemplateBox[{
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[
                   
                   RasterBox[{{4, 3, 3, 2}, {3, 0, 3, 3}, {3, 0, 0, 3}, {1, 3,
                     3, 4}}, {{0, 0}, {4, 4}}, {0, 5}], AspectRatio -> 1, 
                   Axes -> False, Frame -> None, Axes -> False, AspectRatio -> 
                   1, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Symmetry: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"Symmetric", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "]"}], "SummaryItem"]}]}},
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[
                   
                   RasterBox[{{4, 3, 3, 2}, {3, 0, 3, 3}, {3, 0, 0, 3}, {1, 3,
                     3, 4}}, {{0, 0}, {4, 4}}, {0, 5}], AspectRatio -> 1, 
                   Axes -> False, Frame -> None, Axes -> False, AspectRatio -> 
                   1, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                   FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Symmetry: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"Symmetric", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Symmetry order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Specified independent elements: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    SuperscriptBox["u", "2"], " ", "v"}], 
                    RowBox[{"1", "+", 
                    SuperscriptBox["u", "2"], "+", 
                    SuperscriptBox["v", "2"]}]]}], "+", 
                    FractionBox[
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["u", "2"]}], ")"}], " ", "v"}], 
                    RowBox[{"1", "+", 
                    SuperscriptBox["u", "2"], "+", 
                    SuperscriptBox["v", "2"]}]]}], ")"}]}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", "u", " ", 
                    SuperscriptBox["v", "2"]}], 
                    RowBox[{"1", "+", 
                    SuperscriptBox["u", "2"], "+", 
                    SuperscriptBox["v", "2"]}]]}], "+", 
                    FractionBox[
                    RowBox[{"2", " ", "u", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["v", "2"]}], ")"}]}], 
                    RowBox[{"1", "+", 
                    SuperscriptBox["u", "2"], "+", 
                    SuperscriptBox["v", "2"]}]]}], ")"}]}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic]},
           "SummaryPanel"],
          DynamicModuleValues:>{}], "]"}],
        SymmetrizedArray[
         StructuredArray`StructuredData[{2, 2, 
          2}, {{{1, 1, 2} -> 
            Rational[
              1, 2] ((-2) $CellContext`u^2 $CellContext`v/(
               1 + $CellContext`u^2 + $CellContext`v^2) + 
              2 (1 + $CellContext`u^2) $CellContext`v/(
               1 + $CellContext`u^2 + $CellContext`v^2)), {2, 1, 2} -> 
            Rational[
              1, 2] ((-2) $CellContext`u $CellContext`v^2/(
               1 + $CellContext`u^2 + $CellContext`v^2) + 
              2 $CellContext`u (1 + $CellContext`v^2)/(
               1 + $CellContext`u^2 + $CellContext`v^2))}, 
           Symmetric[{2, 3}]}]],
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[37]=",ExpressionUUID->"672907bf-a992-4da6-8af4-8a3b3352d3b7"]
}, Open  ]],

Cell["So far implemented list of properties are :", "Text",ExpressionUUID->"aaec6fac-3ad0-4dcf-a5e7-3347d49eec46"],

Cell[CellGroupData[{

Cell[BoxData["GeometricAlgebra`p`availableProperties"], "Input",
 CellLabel->"In[38]:=",ExpressionUUID->"b0871fbd-e98f-4d39-838e-7eb71f6510db"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"PrimaryVectors\"\>", ",", "\<\"Metric\"\>", 
   ",", "\<\"ScaleFactors\"\>", ",", "\<\"VolumeFactor\"\>", 
   ",", "\<\"InverseMetric\"\>", ",", "\<\"ReciprocalVectors\"\>", 
   ",", "\<\"FullBasis\"\>", ",", "\<\"ToBasisElementRules\"\>", 
   ",", "\<\"NormalToSurface\"\>", 
   ",", "\<\"ChristoffelSymbolsOfSecondKind\"\>"}], "}"}]], "Output",
 CellLabel->"Out[38]=",ExpressionUUID->"50b13976-2d5f-4a9e-b2c5-d7826ce52b8a"]
}, Open  ]],

Cell["The surface, normal and tangent vectors at given points:", "Text",ExpressionUUID->"c5c9fa3a-c754-46c0-a8f4-12df7bd2ef2f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
   "pointsOfTangentsAndNormals", "[", "gaRunningCoordinateChart", "]"}], "=", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"mvPoint", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], ",", 
        RowBox[{"1", "/", "2"}]}], "}"}], "]"}], ",", 
     RowBox[{"mvPoint", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
     RowBox[{"mvPoint", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "/", "3"}], ",", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}]}], "}"}], "]"}], ",", 
     RowBox[{"mvPoint", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "/", "3"}], ",", 
        RowBox[{"3", "/", "4"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"gaPlotCoordinateSystem", "[", 
  RowBox[{"gaRunningCoordinateChart", ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", 
   RowBox[{"\"\<TangentVector\>\"", "->", 
    RowBox[{
    "pointsOfTangentsAndNormals", "[", "gaRunningCoordinateChart", "]"}]}], 
   ",", 
   RowBox[{"\"\<NormalVector\>\"", "->", 
    RowBox[{
    "pointsOfTangentsAndNormals", "[", "gaRunningCoordinateChart", "]"}]}], 
   ",", 
   RowBox[{"\"\<TangentVectorStyle\>\"", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\"\<NormalVectorStyle\>\"", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Magenta", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], "Input",
 CellLabel->"In[39]:=",ExpressionUUID->"8da90d90-7d2b-46cb-bd2b-c91ab3510e23"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Fixed coordinates values\"\>",
   "EchoLabel"], "  ", 
  RowBox[{"{", "}"}]}]], "Echo",ExpressionUUID->"92403ac5-e5aa-484e-b115-\
295728500888"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Options for ParametricPlot3D\"\>",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Opacity", "[", "0.5`", "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "}"}]}]], "Echo",ExpressionUUID\
->"6ea98b14-b7ee-4467-9d0e-2242292f7393"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Surface parametrization \"\>",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{"u", ",", "v", ",", 
    RowBox[{"u", " ", "v"}]}], "}"}]}]], "Echo",ExpressionUUID->"b77a7ab0-\
39ed-460d-9c94-57ce5ecaa67e"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Options for \\\"TangentVector\\\" and \
\\\"TangentVectorStyle\\\" \"\>",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
        RowBox[{"-", 
          FractionBox["1", "2"]}], 
        FractionBox["1", "2"]},
       "mvPoint",
       DisplayFunction->(RowBox[{
          TemplateSlotSequence[1, ","]}]& ),
       InterpretationFunction->(RowBox[{"mvPoint", "[", 
          RowBox[{"{", 
            RowBox[{
              TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
       Tooltip->"SaddleSurfaceCS"], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>,
         "RGBColorSwatchTemplate"], ",", 
        RowBox[{"Thickness", "[", "Large", "]"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"0", "0"},
       "mvPoint",
       DisplayFunction->(RowBox[{
          TemplateSlotSequence[1, ","]}]& ),
       InterpretationFunction->(RowBox[{"mvPoint", "[", 
          RowBox[{"{", 
            RowBox[{
              TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
       Tooltip->"SaddleSurfaceCS"], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>,
         "RGBColorSwatchTemplate"], ",", 
        RowBox[{"Thickness", "[", "Large", "]"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
        FractionBox["2", "3"], 
        RowBox[{"-", 
          FractionBox["1", "2"]}]},
       "mvPoint",
       DisplayFunction->(RowBox[{
          TemplateSlotSequence[1, ","]}]& ),
       InterpretationFunction->(RowBox[{"mvPoint", "[", 
          RowBox[{"{", 
            RowBox[{
              TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
       Tooltip->"SaddleSurfaceCS"], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>,
         "RGBColorSwatchTemplate"], ",", 
        RowBox[{"Thickness", "[", "Large", "]"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
        FractionBox["2", "3"], 
        FractionBox["3", "4"]},
       "mvPoint",
       DisplayFunction->(RowBox[{
          TemplateSlotSequence[1, ","]}]& ),
       InterpretationFunction->(RowBox[{"mvPoint", "[", 
          RowBox[{"{", 
            RowBox[{
              TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
       Tooltip->"SaddleSurfaceCS"], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>,
         "RGBColorSwatchTemplate"], ",", 
        RowBox[{"Thickness", "[", "Large", "]"}]}], "}"}]}], "}"}]}], 
   "}"}]}]], "Echo",ExpressionUUID->"13ad2769-e32f-4b7d-967f-54a67d4cae5d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{"-", 
       FractionBox["1", "2"]}], 
     FractionBox["1", "2"]},
    "mvPoint",
    DisplayFunction->(RowBox[{
       TemplateSlotSequence[1, ","]}]& ),
    InterpretationFunction->(RowBox[{"mvPoint", "[", 
       RowBox[{"{", 
         RowBox[{
           TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
    Tooltip->"SaddleSurfaceCS"], ",", 
   TemplateBox[{"0", "0"},
    "mvPoint",
    DisplayFunction->(RowBox[{
       TemplateSlotSequence[1, ","]}]& ),
    InterpretationFunction->(RowBox[{"mvPoint", "[", 
       RowBox[{"{", 
         RowBox[{
           TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
    Tooltip->"SaddleSurfaceCS"], ",", 
   TemplateBox[{
     FractionBox["2", "3"], 
     RowBox[{"-", 
       FractionBox["1", "2"]}]},
    "mvPoint",
    DisplayFunction->(RowBox[{
       TemplateSlotSequence[1, ","]}]& ),
    InterpretationFunction->(RowBox[{"mvPoint", "[", 
       RowBox[{"{", 
         RowBox[{
           TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
    Tooltip->"SaddleSurfaceCS"], ",", 
   TemplateBox[{
     FractionBox["2", "3"], 
     FractionBox["3", "4"]},
    "mvPoint",
    DisplayFunction->(RowBox[{
       TemplateSlotSequence[1, ","]}]& ),
    InterpretationFunction->(RowBox[{"mvPoint", "[", 
       RowBox[{"{", 
         RowBox[{
           TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
    Tooltip->"SaddleSurfaceCS"]}], "}"}]], "Print",
 CellLabel->
  "During evaluation of \
In[39]:=",ExpressionUUID->"e1151e2e-2d33-4090-9599-17d7672d5cfc"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Options for \\\"NormalVector\\\" and \\\"NormalVectorStyle\\\" \
\"\>",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
        RowBox[{"-", 
          FractionBox["1", "2"]}], 
        FractionBox["1", "2"]},
       "mvPoint",
       DisplayFunction->(RowBox[{
          TemplateSlotSequence[1, ","]}]& ),
       InterpretationFunction->(RowBox[{"mvPoint", "[", 
          RowBox[{"{", 
            RowBox[{
              TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
       Tooltip->"SaddleSurfaceCS"], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
         "RGBColorSwatchTemplate"], ",", 
        RowBox[{"Thickness", "[", "Large", "]"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"0", "0"},
       "mvPoint",
       DisplayFunction->(RowBox[{
          TemplateSlotSequence[1, ","]}]& ),
       InterpretationFunction->(RowBox[{"mvPoint", "[", 
          RowBox[{"{", 
            RowBox[{
              TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
       Tooltip->"SaddleSurfaceCS"], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[<|"color" -> RGBColor[0, 1, 0]|>,
         "RGBColorSwatchTemplate"], ",", 
        RowBox[{"Thickness", "[", "Large", "]"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
        FractionBox["2", "3"], 
        RowBox[{"-", 
          FractionBox["1", "2"]}]},
       "mvPoint",
       DisplayFunction->(RowBox[{
          TemplateSlotSequence[1, ","]}]& ),
       InterpretationFunction->(RowBox[{"mvPoint", "[", 
          RowBox[{"{", 
            RowBox[{
              TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
       Tooltip->"SaddleSurfaceCS"], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[<|"color" -> RGBColor[1, 0, 1]|>,
         "RGBColorSwatchTemplate"], ",", 
        RowBox[{"Thickness", "[", "Large", "]"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
        FractionBox["2", "3"], 
        FractionBox["3", "4"]},
       "mvPoint",
       DisplayFunction->(RowBox[{
          TemplateSlotSequence[1, ","]}]& ),
       InterpretationFunction->(RowBox[{"mvPoint", "[", 
          RowBox[{"{", 
            RowBox[{
              TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ),
       Tooltip->"SaddleSurfaceCS"], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
         "RGBColorSwatchTemplate"], ",", 
        RowBox[{"Thickness", "[", "Large", "]"}]}], "}"}]}], "}"}]}], 
   "}"}]}]], "Echo",ExpressionUUID->"b8b5b69e-767a-4deb-809d-0920a1f24a00"]
}, Open  ]],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1:eJx1nHu0XVV1xlN5VLFDGfis8vZWWpXWMgR5XF1aHJrIo7QwRB3YWkzA0XjF
YX1CMBRtQYJiLsFcBMReKDGP8riEg+Ue2OQkBmuAwCYkcE9CwuERgvJGpL5O
417z952uD8M/Z9yPlX3m/u2555prrrnOfief9vezXjZt2rQ9d5k2baftn/tt
Oub6fv+pis9f3XTJKds/0ylfuPbi1sjPpH/7oOdO3P53WvLK15w10n1U+r5L
Pjxj+9/pyfEvnjI0oyf9+v3GD9/+d5rVXKcr/VvNdboxvrbxdegd0ztpWvyH
Hn+eFeOTja/i+qbXVdiTzJ4Y37PxvSruN9n9VsEnGR/sTsZT9wNXePI3n9+/
+eSjLj17qzijXz29fu/ZCx8SZ/QzF3195l0f3SzO5XU2iHM5fq04l3olzujO
2caLs11fnM0ecTb7xdnuV5yNjzgbT3GGH/7JOHR48jefw1s/9q6Fx28RZ/TR
V648/qP7TIlzeZ17xLkc/1NxLvWbxBndOdt4cbbri7PZI85mvzjb/Yqz8RFn
4ynOcOJ9hzM6/sm/R4cnf/P5w9NeduSWR9aJM/qcwm9rG79KnEt9uTijO2cb
L852fXE2e8TZ7Bdnu19xNj7ibDzFGR7ETzij877DGb30z550ePI3n5c117lN
nMvxlTiX+jXijO6cbbw42/XF2ewRZ7NfnO1+xdn4iLPxNH+uNR+V/lwrfpb+
XNv73pOOf5b+XBvP2sYvN39Gv9L8ud6BP2u8+bOub/4se8yfZb/5s+7X/Fl8
zJ/F0zh3NL+XnDuaj0rOHcXPknNH3ErOHflnybkjniVn9AXGubMDzhpvnHV9
49wx/+/Z+OXGWfdrnMXHOItnZXkS/51l87p0m4ekW9yUbu+5ja93oHdeok/b
wX9w/sN6/RIdzn94fO8lOpxdh7PrcN6Bjv8k+Js/J56X+XMq53f5c7L3VLrF
Txt/ZWX+nPDPHXE1f2Z8Mn/m+sn8OZXvV8/GL0/mz9xvMn+GTzJ/hmey+JyI
Jxaf05nlvCCdeGXxOdn8Lr2Mh7WNX26ca/HfkZ9afE5l/KlNX26cZY9xlv3G
WfdrnMXHOItnsnwjMT9avpGYTy3fSJZ/Sp9Trgukl/N7beMrcS71a8TZ33vL
N8w/a9OrZPlGKvOfno3XvJ/sfpPlG/BJlm/A0/y5l8j3LH9Otj6STj5p+XMi
/7T8OZX5am3jV5k/9+TnO4qjlj+nMm+pTV9l/ix7zJ9lv/mz7tf8WXzMn8Uz
2Xow2fpdOusdWw8m1kdwRoe/rQfN/2sb/1NxLvWbxNnnJTjbeHG264uz2SMu
Zr/+tvtNth6ET7L1IDyT1TcS63GrbyTW71bfEH84o+P/Vt9IZT2htvFrxbnU
K3H2eR7ONl6c7fribPaIs9kvXna/+tv4JKtvwFOc+f/Ul6xeJ/5Wr5P/wxmd
+GP1ulTWx2obP8inS32Q53neBGcbL852fXE2e8TZ7Bdnu19xND7623imVX8+
963d1hMVn59991ffePbCAX/9/y99aPNU6wnGJxsvLja+susnGy/dxicbr7/1
PaU9g+uZnaZXNl7fa/br+s+e/ehnRrpPVnz++pefXnvMCunJ9MrGJ9OT6bKP
f7d57Jn9//84/n/oGoe96PzNv7PrVHadZOMru05l16nMHl3/zP0ebvf7g/g3
fPvz5/f7W9P9s05fvf1T13Od8Y/PemHF9NGH08FLdr+r31cdrtp0wn4/2P63
dMZf3P/lC/OHHkz7N+NUT6p+3fjzZullvbSbpprvVV2kek9jzwbpjP9ZY8+6
NNSM0/q++m1z/bXSGf+d5vpr0gGNrnVqNW3y9+OpM4+10fP9LxxmPNe5sLnO
pMajH33iB56bPrpg+M15vPzh+caeqkJn/Ln5OtXe2U6N/2W2Xzrj52X7qw2Z
g8YfnvlIZ/y2zKfaJ3PW+Bczf+mMPz/i6rvyc9T4jfn5Smf8WH6+1X3ZTzT+
iOw/0s1/qjnZDzX+e0f+5Ku/90t0xnMd/JZ5I+yRf6KHPfJD9MUnXHbJ9NGN
8jfNP00cXi+/Qs9+e7f8B33/Zvxq+Q/6nzV6S/6Afuv0V+07OjRf/oC+Zx6v
54u+d76+niP6wmyPnhf6Ptl+PRf0Rfl+xd/4iLPxFGfm4f+N9xTO6Mx3cEbf
N3jCGX15zJtwRv92vI9wRr8h5l84o7cafUKcy/XcPHFGvzaPF2f06yIfgDM6
7xec0Scir4AzOvzhjM57BGd03js4k9ccEfENzuiPR3yDM/pY+Cecy7rxGnEu
r7NKnNEviDgGZ/TRRl8qzug5vn1DnNHPyePFGf28iG9wRn8s2yPO6PCHMzr+
D2d04huc0YmHpT/X4c9rzZ9rcSv9uQ5/Xm3+XIc/d8yf6/DnSfPnOvx5wvy5
Dn8eN3+m3nCG+XMd/jxu/lyHP0+YP9fBc9L8uQ5/7pg/1+HPq82f6/DnNebP
dfjzWuPcCc6Vce4E50nj3AnOLePcCc4TxrkTnJca505wHjfOneA8apyp38w2
zp3gPGqcO8F53Dh3gvNS49wJzhPGuROcW8a5E5wnjXMnOFfibOXes+DsOpxd
h7PrcHYdzq7D2XU4uw5n06fB2XU4uw5n1+HsOpxdh7Pr5s8p/Lkyf45132Rl
/hzru1Zl/pzCnyvz51j3La3Mn1P4c2X+nMKfKziX9cXZbfPnFP6czJ9T+HMy
f07hz8n8OYU/J/PnFP6czJ9T+HMyf07hz8nic3Bea5zr4LzGONfBebVxroNz
xzjXwXnSONfBecI418F53Diz/j/DONfBedw418F5wjjXwXnSONfBuWOc6+C8
2jjXwXmNca6D89pk+UaKfKOyfCNFvlFZvpEi36gs39BzsXwjrrOqsnwjRb5R
Wb6RIt8QZ/TIN9qWb6TIN5LlGynyjWT5Rop8I1m+EfzXJMs3UuQbyfKNFPlG
snwjRb5h/twLf95s/txT/cry5/Dn9ebPvfDn2vy5F/68xvy5F/7cMX/uhT9P
mD+znzDP/LkX/jxh/twLf+6YP/fE0/Ln8Ofa/LkX/rze/LkX/tw1f+6FP29O
th5MrF9sPZhY79h6MMV6sLL1YIr1YGXrwRTrwcrWgynWg5WtB1OsB8UZPdaD
bVsPplgPJlsPplgPJlsPyj9tPSieth5MsR5Mth6ET7L1IDy9XpSiLlRZXSix
rrf6T3B7sLI6T/htt7J6Top6TmV1mxR1m8rqMCnqMOKMHnWYttVbUtRbktVV
5LdWP9H7bnUS+afVQ8TT6h7wSVbfiDi8VZyp110S9RCry4m/1d9S1N8qq7Ol
qLNVVk9LUU+rrG6Wom5WWX0sRX1MnNGjPta2eleKeleyulaKulay+pXip9Wp
9L5bPUr+aXWnl/Dk84AjLjivP/cxrUcuuvMNW6aP/rya27/hC62RR7Qe+a8z
jtppdOiJ6sK5p76+e0hP6xHq0D9u6sybtB7ZeO/EjKEZT1abZ907rdtar/XI
c1Gn7TV11zu1HtntnW/6Tmvkqeq5xas/0BoZ1BtPjXrXMVY//FrY/93GHwZ1
Quy/qnmvb9d6BPun3/66Y0e692o9gv2dbL/WI92wv7fuurNaT/S0HsH+RQcd
PDV/aFB/W/GjD17RGtla/WTl5GX9uQ+LJ58HXnzj4n5/UH97Zo+rt00ffay6
7IQ5U1OtB8TzFbc++CejQ9uqjz35/bvmD90vnvuOvO6d3da26lv99QcPzbhH
PA9904zjh2Y8Xn1p9xmvHZrxU/H829vmfGmk+3j1b/vtfchI9ybxXLqD+lsn
7H/b5D6zWyM3iudU2J/98DbxxP4XZr3h662RWjyx/yPZfvHE/svnnrth+h5b
xBP7P3L7Ia/uth7S+u64sP+4T3z8gv7cAeddjlv8zZFur/r00Y9d25+7RZz3
+u3GZa2Rh6rWrM/fPH9okzjz+dolf3Fuv3+fOGd/elh1cjjP3Pkrrx8deqT6
4kHX3TvVGtTJ51y39LBu65Hq5ef+YJdu68fifOE/bD5paMaj1Rsu/uIBQzMG
dc6nin3RQf1t17D/loO+fNJId1B/2zvsv/PIo7/WGlkpztg/o//Xn+v37xBn
7KfOA2fsv+GEW05qjUyJM/bvfMqhHxiasUWcF4T9zzzy7+P9uYM654XNe7Sx
2iO4wXll875sql7T3O962Zffiweq88M/4cznbyK+wfmHl0z9ZvroluruWcvT
SPcn4pz98sHqe818sUKcN/zi/Ud2Ww9Wi3e/443d1nW2v/DS+ttFYf+VTRxY
Js6rwv4Vzft+szhj/1XNe32bOGM/6y84Y/+BS2bv1m2tE2fsn9n/l2enWveL
831h/1s2nTK7339AnPdsnvs91QmTZ1/d798lzvl+1sV+1p3inJ/jvdXLl7z8
tvlDa2Rffq/Xqw4PZz7/sok/K8Q5v6f3Vx9v3tP/Fuf8Pk5VX2niyRJxfjrq
Wp+2+tveYf/tjd9eIc7HhP3ZP5eLM/bv1PjhreKM/axb4Xx/2P/h8H84Y/+K
5j2qxfmwsH/Wk9X8fn+9OH+4sWdV9fbgUObDq6NuvEKcd2uu/z/V0zEfwTnf
/5rYL5sU59WNX91RvT7iAJxVH2ryhGvEeUXjJ3dXlzXf+x/i/EzUtf7Z6m/H
hv15vbZAnJeF/ZnbVeKM/SsizsAZ+1nvw/nHYf8RS85fM320I87Y/56I/3Du
hP3HxnOB85bG/tHqweZ9ucDqnONR57xEnD/b2LO0+n5wgPPzzfiJ6qaoG8D5
2uZ+WxqPfZ9prjNZfTeuD2c+d53M9sC5/Pybw+C88xXZ/tXN954szi+G/ZON
frY4fy7sfzqeC5yx/0dRJ4Hz1WH/sohLcB4J+5+K9wXO7wj7r4g8B85DYe9l
oZf1isnIq5dr/vvP/L3pivheOD+W7UxXh51w/mi+r/Rg3Bec8/MdT4uCA3zX
5eeeLg1u8P1Z1LU+afU3rafDT+D8ybD/3+I5wvnKsH80njucsX9Z+AmcPxH2
Mx7OD4T9X4jry5/D/qVhD5xzPL87HRV+Dud9w94j4r2A8635PUqHxnsE55Pz
e0cdRpx3zu9pquI9hfNV+b2Ode5V4jw9x4F4vgvE+edR1zrZ6m+3hP0LgoPy
jfjM65FrxBn7Xx1xDM7YzzoRzruE/Y9FnIQz9l8UcRXOHwz7D4g4DOd357id
ZkbchvMf5zifiPNwxl7yIjj/MM8j1APF+at53knMO3DO88I6vS9wfnOe19Jd
Ma/BeWbUtY6y+tvBYf/smDfhu2vYf3zMs9jN59uCA5yxf6+Yx+F8eti/c8z7
cMb+buQJcH5T2P93kVfAOfKo7XE25yFwrnLekshb4Lwo5znpHZHnwBl7yYvg
/HTOo9KiyKPgvCLnXdGPdLM4j+Y8LS2NuATnJ6KuNdPqb+vD/vHIA+F8S9iP
v8EX+++IPBO7+Xwh8lI4PxP2nxd5LJyxf/fIe+E8P+x/deTJyp9zXp3Iq+F8
Rs7DE3k4nD+V8/ZE3g7n7GcPU28RZ+wlLsE555MPpbWxjoBzrJvSqogzcF4c
da3K6m+jYf+rIg7A+fSw/2WxDoIz9n8u1k3wxf6tsc7Cbj5ZX8AZ+6+PdRyc
dw77T411H5xjnZtYJ8I5x5PHE+tKOO+T16GJdSicc5zZlk6Mdav8Oa9z04ux
zoUz9pIXKa/L6+h0UKyjy7r9S+tvx4b9p8c6Hc6HhP2nxboeztiPf8IZ+0+I
ugF8sf97UWfAbj7fHnUJON8a9q+OOgacoz6Trll34Jz+3EH9jX466iFwnsr1
k/RQ1E/gvLLoS9wkzktzfSbNiPoMnBfkek7Eh9vFOexKP4j8B877Rr3rPqu/
vSLsfzTmKThj/8aIn3DG/m7Ur+CM/Sui3gXnZWH//KiPwRf7z4x6mvGsgqf4
v7LUlQfGZ/XWXK+rrI6Xoo7n41OM9+sn/17qhNFv5nXXKuqug3Pg8f/ph2Qc
OuPpo0KnPknfDzr9VPSpoNP/Q19FOX7Qf1Dqg3106wvQeUAbr31Nu7724cye
wXmP0n7tc9j9DvraS27qm+R9oh5e9lluFWd4olNXhyc6fWjwLK+/TjzL8WvE
s9QnxdP6KcTTxounXV88zR7xNPvF0+5XPI1bVdbft76EM/GJ/ls4o9OvC2d0
+iThjE5fH5zR6UODczl+tTiXekucrT9FnG28ONv1xdnsEWezX5ztfsXZuImz
cRNn4j19y3BGp89Z/aPszwRPOKPTJwln9NJvaxs/OPdb6hPibP0+4mzjxdmu
L85mjzib/YP90fJ+xdm4ibNxE2fmT+rYcEanPxzO6BcX/tmTTt8pnNHpk4Rz
OX5SnEt9qThb/5Q423hxtuuLs9kjzma/ONv9irNxE2fjJs7kI/TJwxmdvno4
o+9fvO896fTxwhn9goJnbeMnxLnUx8XZ+tHE2caLs11fnM0ecTb7xdnuV5yN
mzgbN3HWvkpwKM+/j7U5RwB/9dnFOYXyHP1Ym3MKPBfG05denqMfa7MvxvNi
fKvg37O8ft4wz1Hr2vD/8tw99n9jmOdbXn9cz728/hnDPPdy/Kj8oRw/exh/
sD7Es6YV/6kPUX5i11dfnV1f/V5mv/zK7FffkvGRvxkf9d8Yf/mh8VcfiT1f
+ac9X/VDmL/Jb83ftK9v/jboAyj9TedeWH9wngX/ROf8C36Ivmcxv/ekX1u+
p9LPKeOnjee5dEynT3LaNO8/5bnbePXP2fXV72X2qD/J7Fc/jd2v+j+Mm9Yn
xk3xgfXcvDLOSOfckM6TUAeNeAVn9OvK+V36eWV+a+MnxLnUx8XZ+3nhbOPF
2a4vzmaPOJv9g36p8n7F2biJs3ETZ9bH28p5UzrnC+CMvrDMP6XPK9cF0h8r
5vfaxk+Kc6kvFWfvj4azjRdnu744mz3ibPaLs92vOBs3cTZu4ky94fwyD5T+
YrnelM65Gzijc04Hzujziny1tvGD39kp9Qlx9n5z9T2X4wd9uuX1xdnsGfRB
lvYP+vnK+xVn4ybOxk2cqd+Mlesa6azf4YzOOTI4o8Mfzuil/9c2frU4l3pL
nL1/H842Xpzt+uJs9oiz2S/Odr/ibNzE2biJM/UwW6dL5zwjnNF5LnBG572A
M/q2op5Q2/g14lzqk+Ls5yHgbOPF2a4vzmaPOJv94mz3K87GTZyNmzhTz3Oe
6PgzPNGJJ/q9ttAPL+pdtY0fnC8q9cG5Fz9HAk8bL552/cHvuZT2iKfZL552
v+JpfMQTnfon/XzU6+jro/8MnT40+qXQ2degvwedPh/6UdDpS3lL5Dfol0Z9
m31odPZ92DdFZ/+UfT509vvYl0Jnf4p9FHT2U6j7o1OXpt+OOht9d53or0Lf
I/bL6GdCp6+J/puyvrci6h1rrY53m/aD0dkXZv8SnX1M9tvQ2XdjfwidfSL2
A9DZ13g2+sOod82L/Rf6mdDpy3pF9N+gPxX7DuxHorOvyv4ZOvuA7Pegs2/F
/gQ6+yzL6AOLetFbIv7T94NO/xL7c+jET/aT0NkXY/9D/b+xj0P/E/UT+qDY
f0JnH439HnT2fdgvoT7Avg99wKyz6AdeuoP1O/2X6PRh0i9o681h+tvQ6XOj
Hwudviz6WtDpb6EPA51+DPoG0OkfYJ8bnf3uxbZuZX+WfcTS/gVt7QPF+pR9
MfbDGM++GP2+rKfo+6U/Vf0jsV9MPyW6+iojvqHTB0i/Gjp9a/SjoNOXQv8E
On0U7Pejs+/P/jQ6+9Tsp6Kzr8r+H7r2ASOOsd6h/5Y+UXT6RelrRKe/kT48
dPrx6P9Apw+EfgX1rUfcY38dnX129oPR2RcmXqGzj0k/K+sL+lqJV+j0w9Av
iE7fIPEKnT4K4pX64Nj3j3iFzj418QqdfVX6PsnP2b8gXqFTByZeodNXQLxC
Zx+ceIXOvu2qiFfkq4dHvxbxCp19c/Z30dnnJV6Rj7HPy/6uzZvMo5pP2bcl
D7H904r9YPIT5l/yZ8tbGJ9sfNoYfZlcfyr63DgvwXzHuY+fR78j+nnRLzcz
+vPQ8X/OVzAfcU6EcwLonHf4TPRNSo84QJ8iOv2KnehLQ+d5cX6D+YhzKJxD
QOc8BX3z6OybvBD9mujtqMPQX4hOnyT9cOjUhejfUp9U+DPnYZjvOBfDuQh0
znfQx4/OeYTF0XeOfk+8j/SVol8aPE+MPkj0LRGH6TtEp/+QPjl04gN9Xej0
d/E+oJOXck6GeZzzPpz3QOfcCucT0DlnQT89OucC6P9Gp499dvTRol8Ufkvf
Kjr9q/QpotNvSV8dOv2B9IGh089G3xI6/VfEAeZlzjdxPgedczqcJ0HnXAnn
H9A5B0G/Pjp9+/SXo/N+0aeLTr8ufaXo9JfSB4lOPyR9e+j079Fnhk6/GX1R
6PRHcY6LeZnzXPRho9OP/d2IV8x3iyI/5JwSOueVno84hn5jPPd/jDiG/o3w
E+IY8xTnxYhj6Jx7+nzEMfRngxv9yuj0IdNfi06fLXGMeYrzaMQxdM5VEcfQ
ydufjTiGzr4McQydfulPRRxD/2asC9RHGzr9qJyL473nfBxxDJ11CnEMnXUN
52fQOUdDHFNfVfjVSRHH0OG5a8Qx9G3xfhHH0HeKdRn9nejkJ8Qr5nHWfcQr
dJ1Ti3iFzrqSeIXOOnS3iFfonVi3nhbxCv3piDP0qaPTr068QidvJF6h0w9M
vEKnf5V4hU6/JefudA4v6gCcE0OnbsC5JnTON3EOR78HEHUJzo2gc37kryIu
oF8VcYC+fHT68+kjR6efnL5ndPqf6dNFp1+XvlJ0+kvpg0SnH5I+POuvU55E
frX8oI9c0u8Pfg8Q/f1v22tZf+7gd//KOs+gvwH9huY6g3kIPZ/7GPxeH3qs
+7TOQb/Izsmij+XrKH6hX5+/V3EE/eJsp95P9Pfl+5Ifl9cZnH+HU84TNolD
WecZ/J4hej6/NvjdOfT35jgvDujva/QbFd/RD7NzrOi5/jb4HTl06p/lebSt
cR5tk+4X/R25n1b+gR7+oPyy7Ju6R/eLfnR+L3S/6A8041fqftG3NPr1itfo
3Xx92Y/+muz/sh+d+8J+dJ4vdnIf0f886P8I/XdR18VO9D+Kc3DYg74x7MQe
dPotsQf9kvBDvhe7Ujx3vhf9/Y2+SPEO/cB47lwffXn4P9fhe3Zq7L9ccQH9
0niPyn7Tsfbef7r0jn5/wXDZNznW/tTt3XX9/vzhss9vrH1c/40/6ve/NVz2
pY21s13nDJd9VGPtmc11/nW47PsZa3ebcV8eLvs/xtqbGv3U4XK/f6y9Luvt
cn96rL0+X6dd7qeOtf8pf2+73P8bi3HntMv9qrH2sfm+2uX+ylj75MyhrTge
9l4e8arcPxhr75V5tuHJfbw7P3e9D+j35/dC/of+i3zuSf6Bfmj2Ez1v9LwP
fvngfFDo+feHL1BcRX8mj1eep3NC4YdwQ3/2pvK9QL8v3mu4oR8Sfg4f1dMi
/sMBu3IcWCkOOtcY+zVwKPPnG8UB/VfBDQ7ovw0+3C96PBfdL/ovIj5wv/q9
gYhv3C/6oRFnuF/0hTEPcl/lfvptui/0HJ9X6L7Qh+N+dd489PeGP2A/OvZg
P/qHIm5jP3rML7IffSLmd+zkezhXiJ3ov47nhZ3ov4vnon3c0KdifsEe9MNi
nsUe9LHIQ/herrcp/IfvRd8c7xfXR58e8zvXR495RO85/y7i9uC8PHlp5FG8
/8RX4ip/2zxr/VhbK+Kt4kLoxA2uw3tDnsY4dPIWro9O3NZ7Tr4TfPDXcl5e
WQ3257L/kgfyvejkRfx7dPIH7EFnvsAedOIe9qATB/BLdN4j1Q3DT8lLsbP8
nYG7ZSc6+Uxp3wblD+U8t6FiXsN+dOJz+fskGyrilc7vhM77rvchdN6vHdWv
ynPWa5Vvc7/o5J/cLzp5GveLTl7E96GTt8ABnXkcDujMR3BAJz7DAZ34Bgd0
4gkc0DeZf9q+kjigk2/DAZ28FA7o5IFwQCdPww508i74oHs+g+7zMrrPU+ge
59E9rqJ73ENPFk/0eyR2Tg2dvEtxLexlXQZndNYvyi9DJ0/T73KETh6i879x
36zvuL7NU7o+Ovke19fv08Tz4vvQmff5XriyfuR70Vln6Zxm6KxfsKech8+R
PejkUdiDTr6hc5ShM49jp81TshOd9RF2orOews/LPqiB/ejkw9iPTr6H/YpP
EU+wH518g/spx9+j+7L5VPeFzrqV+9L58rhf7qvsOxr8vgz6geY/6OT5ymtD
J4/lfvW7UPFcuN/yvOrg9/3QyWfEMXTyEDhonWF1G/TlVq9Axx/ggM46FA7l
dQa/14fOOpF4gX65xQd01jtw0+82RRyGGzr5sH5vJ3TyTLihk+/Bze5XHNHJ
x/jb9zH/D0Fp82k=
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], Opacity[
        0.5], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1: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
7vuo2nBm7nc90pCXRPcE9F7mymjNpnc37aK1nPLalOT+mt7jXBFdB6kvdzk8
LrOe6RCt//WObAnHx2R+F/ZT7vpX7wJ25u7h6B3BP7n7KqpJH4yOG6rpBkfH
MdV6D0THOtUO63L3fFQvbM3dB1Ctd29073QO6/MM/gVwS7gq3DZzXTk99zs4
1XfTcr8zUh36eu53DdLqm+EzMtebg6L7peqXtIius/QuYHfunpXqx6GxiDnK
vbl7TcqzzyX3x9X72pa7T/JBcH9UveKRwXlY66b3CP/m7jWpJtqSu8eiWmND
7r6K+vCto2s61bkzcr/nUk+1V7T2Vj13cnS9qR5mj+h9or76ufCwzPX+kOh4
qHcTi3P3OtTTeC93vFpRPLOKseqBfJX7vaf60suStY76IV8zHp25r/JF7nep
eg+SR6+5eiNf5n7fujf+H7Ejc+eC34v4rP7P6tzvU9T7Wgu3zNzreDf3e0nF
859zv5PVbw9MvhbFhO+KOKPz909+7yI9vwfWHf+twTl8AHx/sK7ROii/D0/u
meqd6S+5e0Ttg69R8VY9ojm534Wpflb8VK5Rb/PX3P1GxUDFScVD9eK+SN5z
6t82Yl7fzLpIcU/rqT7J3Nz9T9V9Z2IjM7+P+y13r09z1ffQfNW2K3PnDumK
Psl1r2qUUtG9x6bBWkP7Vu9cGkbXF6pN/yzyrPpRs4o1VJ9qdu733epnbsr9
rkp5eWkRY9V3+ij3e9L/A8oL5aY=
             "]], Polygon3DBox[CompressedData["
1:eJxFmnf8l1Mfxu/7nPOrhNDQRhGpaBoltNCwykxWQ5FRohAaCkVlr1Syd5rI
Lqkke5eRmZG9H8lzvZ/rvF7PH9++9/t77t933Pc513V9PqdGA4b1OSsURdFf
/yQ9t4tFcaMOxpRFcam4mXiq+BzxheIfdV4dPbqLDxfvo/HpGp8oniLuKL5V
fKl4qriD+BbxBPGV4j3EN4nHii8T/6T3Ok/cQ9xb3F7jN4svEV8h/kvjo8V9
xH3Fhcab6rVjxScLP9XxCI13EHcRrxEPE7cVdxC/Lz5L3EbcXvym+HRxc3Fb
8VrxcHE78T7ir8UjxV3EPcTvic8UtxbvLe6nz39IfJf4IfG7XDw9Won30uEE
jbUXnyY+VY/1Ot5aj046Pkjjn+j4bM4RdxZ/JT5X3FncXXyw3v9u8Q3imeJv
ND5K3FXcU9xK49eKR4vHi5uLp4nPFV8k/lPnXyDuLT5W3ELjV4lHii8WtxFf
L75IPEG8m/hq8SjxGHFT8RTxCPFocUtxD95TPE5cRXyRxvvz+8TfiqtV6Fro
nC/FV2hsp+ixTnptmo4f1vMcPdbptcriVjo+WX8/RNxafJ3+5kLxJeK24hvE
F4snitfp3Cp67C3uJH6ce6/xquLa4gt0/kLxUvEq8R8afyX5enM9fxe/LN4/
X//fxKvF+4kPFP8rflN8UJ7PzK+3kud373w9X833h/mwSfyG+EDxYeKTdP4F
eu1+8dy8Pl5M/r7c304anym+QnyN+B+Nvy4+QHyo+G/xa+Ju4kPEfXX+A+I7
xA+If9D4SvFe+feXef6zXvqIG4g/0/jx4kHi7cSfi08QnyLeVrwueb30F9cT
fyruJx4oriP+RHyceAA/X/yO+GDxkUxt8dviXuIj8npl/bfP6+17Ha/Q+J7i
/cW/iFeJO4q7iTeIl4v3EO8n/lX8knhf8QHixnr/L8Un5flwnPhB8Z3iB9El
8Rzxg+L54rHoCddY/Jr4MPFp4lvEs8WHi+/R+dPFt4vHiReJV4lfF58vvkbn
LxG/KD5bvEDjT4qXioeL54ufEC8Rz+Xe6vEpa1GP3hq/V+O3avwO8SN5bn+F
dugxTOOTxYs1/pz4DuYLn833Yd6zHvT3D4jnafwI8f3imeK7xL3Ed4mvF88Q
nyoer7+bJ14sPk08V+PzxU+IB4gfET8kXiA+Vny2zr9dfL+4e7S2XyO+RdxD
fIfOv1Y8XdxNfLt4mvgGcU/xneLrxLeK+4jvE88Q3ynuKp4tniq+XtxZPEt8
pfhacRfxbeIp4uvEO4i/EJ8oHiyuKf5YfEzW7+rij8RHi08Sr9J3HSzeUdxM
/JJ4CJoibi5eLT5V3ETcQvyU+HhxdXF98ZPifuKtxfXQV73/+zr+j4631mOe
xvtofKOOt9FjofhIjE/n1NDTi+JTxI3Fu4qfEB8nriauK14gPkK8ie+ux2Jx
X/EWGq8jflR8tDiJa4lfxwvEu4pbi1eKB4kbiZuKd2c+is8TjxW/ofGh4mbi
NuLa0Z6ClwwX7yueIb5MPE38PHNKXF+8o3iZuL+4gXgn8VLxSeJ64sbiFeKB
4h3Eu4hfE//Jd9GjlXiJ+ESN1xU3Ej8tPkFcU9xA/Cxznd+qxw7iReKjNB7E
NcX76/v11WuTxVeLP9TxsxrfWdxS/Ir4CXHt/Pd8/pPJ79coXy++T938favq
/dZq/Ajx8eJq4g/ER4pPyH6En+B3fbO/rNH44dn/thZ/KD5KfGL+/Yuzf3C/
KjE/xIeJjxEn8bviQ8RHiSvE74kPFR+drw+/f2O+/1yPx5LnF/NpufhxcZXs
T+/lfNAoz6ePdfycxnfJ15v88Ey+H8yHt8VPibcT7yx+R/y0ePt8v4bq+8wT
LxA/WdgflyTfP+YXeeOF5DxCXvlcvFS8m3iPwvkDP901z68vdPy8xncX71k4
j5BXyDvkpS91vEzjLUvnG/z3UXElcZXCeeEr8QDx6eJnNN5AeeBBPTcsrG0f
kWkKaxze9nG0tuNxZB0yD3P5lGCt+TBaC9EctPaDaO1Bc9H2tdHai8bjLXgM
3lkzr1XWbFXxZ6WzGpmNLHVu1go0Ywt+e+m5zRzfkt9aWjvQkM25dqW9aF10
1sOT0OY1+f3QaLTy/WitRjPR0nfJ0IU1FW18K1oL0Ui0851orUVDX9BnDdBr
DXXcpHBWfi06S5OZWYvMOeba16W19e1o7UVj8ZJPor0RT0Hb34vWbjSe7PFm
tDaTQdAONAStOTo4u78endXJ8GT3N/L9IMOTtbjn3OtPSmsdmreZ+NPS2oLG
oJ3fiKfqb+vp/q/M/kz+q19hv8Z/J4lriZ8XvyS+TFxd/Fz248vFNSrsz+Q5
tBbN1cvFWr32Xc6T+PkbzAnyhI43FM6f1BJkFLJJ3az1aD7LcE1p71id5+Zv
zEcd19Lzt9xvrnH0/OV1GK/9PHqt4bk1K/z98XX8fLLGthUv09jqwt6Bh+A9
P5fWWjQHrfmxtPbjAXjJT6W9Ds/Du34p7XV4Hlr7q/gKvX9tvf8LOn65sNaj
+Wjtt6W9Bs+pJP5IPEXn19X5K3T8amEvwBPwog167UqN19H4ch2/Uli70fAK
tLq0F+KJWOIHpbUITUI7/imtRb9FaxOahHb9Hq1NaNh41p94mHhw6VrvFfHl
hWs+apEV0bUGNQnehwfibQcF1yIr8/ykJqHWeTG6NqDmOUf8mc5rJ948uJZ6
OPp+k0mp1e6P1i40jNrqkejsToYfx/wVn8W9Kl07zhF3LVxDUgs+JO5YuCak
dnwgupakhqRWWRVdO1GzUKusjq6VqVkuEz8jPld8hvgS9CT/viHiSeLnxKPE
Z3E/uJ/i88XDxZeLnxWPFJ9ZurZbHl27UeORBcgE5Pq99fsvRb90fI7GTy9d
270UXTtR401E78Qj8I7StfwL0bUiNT2fzXegblsaXfsti671qQGphamJ+f3V
g2vrB6NrZWpsatN54l6Fa1Sy9Jfi5wtnarwQT2S+fF86W38RnbXJ2GTXz8QL
C2dYvG1o1tsJwbXdBXn9XZu9+6dob8XD8b6/or0UDyRr/CHevXDmIGv8LN6+
cObAe/+MziJ4MN6IR3YTb5GzyC/R2aRO/v1zo2tvegLUEuujtQcNejTrI99n
nfh8Pi94PtXT88Wsz2hvxCPHcr74TPGg0no1P7qWo6YbI35MfIZ4YOls8UN0
diVjUHsvEp9WuAanN7JQfFzhHgle/nf0esXTL0yuGXn/XYN7K69G92LosdAr
WBCdnchQ9H5eju7NjMn3lx4E97tG8OfRk+F6NA7+e2pk1lej4LnUJLoHwJxi
Pe+W9eDA4DHOYa6fh4ZEz3nmOmumYfQaYu0wpxtFrxnWCmsC/WiR1+8BwfO5
Wb5eXYPXZ+u8HnoFr5/m+Xp3Q3ej1wRr4ezC871pvj9d0OHoNcVaGpGvd5V8
fVprfEcdT9Zrw0qvYeYLGZb590eef2Reat2KnPXIfNTGlXLWI/ORpf7N6+V/
Naj4ypz1yHxksU15fQzIeeiinPXIfJ3ElXM2I6PRy6iWszUZm/n9e+ksSCak
97FVXj/4EXr9Q54vZEBq8S1zliXTMv/X5/U6POeLK8hJ0XOauTxUr9WK1ji0
jXtMfumQ9eWI4DzSI8+3AXn+tc/60ifnj32yvh0ZnD86Zn84Klhf22Y9PCR4
frbL+nlocL7plP3huOC81Tnrc79g/6HnyFw7LDg/dcn6eHxwXuuW5/uJwfms
a9bzE8iB0WtyYM635L2eOZ8NDM6zfXPeGhHsV62y3vYM1uM22Q8OFm8T7UF4
D3Nyq2hNQAuYwzWiPRTvZI6TP+mJkC/PCe6F0BO5E/8Jzsf0JMiXpwfnQXoM
5OPRwfmbHgN588zg/Nor571BOW9T45MnzwjO1/RQyItDg+f6knz9mPPkIXoQ
5PdLND5Ix//Ra7PI6oX7MT8n13/0uw4V/ySeVLoe5L3p15BF+Qzqxe+S+4vj
ucfiH8WXkxXQDPH34nHiyYXvNfUlWYB7zrWmPzk0r9e9xN+wpkr3L48S/yK+
Snxz4bn3bbK3MQfpb36d3K9FD/YTbxCfX7rfeYz4V3Ss/H//hH4K2smcniDe
SuHpafHywrU7NfyO6HXpXjM9553Ef5fuBVDjNhb/lfMJNRd5ZZvg/ELNSK1Y
BvdvftBr40v3w8kj9LTpjYTgvEIPm15I0vNEvELf5xmdv6KwX9MTp3cSyQsa
30bjz2p8ZeH8Qw+dXnjVnKeoEakNNwv2u3HZr6eLeyf3e59CW/TaeRqrJJ5b
uj91gvgPnXOT+DbWmPh38Y3iWYX7pX8l9+tuL9yv+i25P0U/6kTxn+KbS/fz
zhD/K75HPKfwWqO/RW3DmjtdvEnjd4sfFg8W/y2+TXxf4bVAf5ZakTUxRLxR
47NL98eYy/TXqEWZ0/Tb/knun9F/HSWu0O97hCzD9ReX4vtK93svElcVP0oW
Ltz/CxXuB9PfQzvpB1KboaFnxuJ/YftetJ01LY7ih8kS4pHiJJ6D97PGxZuJ
F5G9C/cvK1e4H0j/b7S4inghWV18sXhz8WN4UeHsRL+T2oUMNUa8hcYfL92f
5N7STyWLcY/pr25Z4f7lEq6/rsVbwbXpxtL682n2K3qy1N+bxPsW7vFSb10d
Xa/SI6Feu4o1XrhHSm1Ijfixju8NrlWoWT4S3xNcK1IzrhPfJ/4GbY2uxb7Q
Y0P0ngO13vrCWoPmMFdODe73zdfzZ4V7tvjjxmg/pYdB7UMN9KH47uC1wpp5
RzwzuNai5vpAfFdwbUeNtxbtD66Pro2uv+gZspZYU+8KZwXXrtSw74tnB9e2
1LjviW8Lrh2pIdmvoAZGO9CQtzU+I7jevSa6nqbHSC+KntQgHbcI7lXRs6KX
untwr4ueF73zlsF7Cewp0CvbMXivgT0HemU7Be9dsIdBL6xJ8N4HeyD0XncO
1mI0Ga0+Nlh70CC07+Rg7URD0aLewVqL5qLNhwdrNZqN1p4UvJdC8X6ynnYJ
3kshL9Kb2yF4r4Y9G3pv2wfvPbAHMVDcPLj3Rg+OvYzdgvcqqHv6lt6zYC+B
PQX2KhoE7+2wx0PvrmHw3gR7FOy11AreC2JPiF7edsF7NezZsPdTO3ivhT0X
9na2Da6vr9fnb1u4p0uvhp4N/F3p+n52dO+O+pf6/vZo/abnhzagEdTuNwSv
ZdY0vYLrg9cia5Ja/abgtcsapja/MVh70CC0fFrw2kcD6JVcHay9aDBaflWw
tqFxaNXYYC1D09DmccHagsbgVVODtRWNRVsuDdYiNAltnxJcy1DT9CxdQ6AF
aEKL0jX4Y9w75mDpa0KtQc3B/elfuFanZt+ndE1EXbA+ef+PPUK0EE1EOy8L
1k40FG2aFKy1aC5adnmwV+AZaPdw8S7RNSy1687Z6/F8sggb23gBnoCWjgnu
n8yK9mN65vSvZkb7NT1y+m0zov2ZHjT9rhuj+zX0+OnP3BXtt+xJ0F+5LVof
6bnTX7pbvFvhPQr6QXdE+zV7CvR77oz2Y/Y46K/dEN0fop7lWnJNK4s/Lt2f
uS66f0OPHe/EQ/Ge84O9Fs/FG0cFZzEyGV5ycbCX4ql4zXnB2o7G05u7Obj/
OT26H0aPn/7pTdH9K/Y86JfeEt2PYo+F/ujN0f0q9ljIRmQkvHZYcC+Yeors
1Tk4+5EByQJDgntx7MewpxYK62uv5F4gPTTmxnbJesYcYW+wYbLesUeIvjQh
TxbOhOjTzsn6Q0bCPw5P/n30HPGbw5LXFz1J/ObQ5PVFj4zvu31yLUNNQ++P
Hna1wj1A9q4aJOsPe1jspdZJ1jP2VNnLqp2sn+xpsfdaP1mv2YNlb7Zesp6x
R8teKnuqA8TNguvR9lnX2ItFf3dKzp5kYvzo4GS9oAfI3m3d5L9nD5e9s22T
9Zw9NPxw12T9JoOzV1Iz2Q+OzP53SLIeLc/59L7otcz/iSD7koHJ3scEZ3Ey
OdltcPaXKnocXHjPGj2vnLzXTn8NPS2T61P2wPGfzZL78+x5o+dbJ+szeyr4
2TbJesweDPpfLXmvmT1o/G+rZH1nTwb/qpqs5+zBo9c0K6mv2SNH7/+Nrr/Z
k8Yfqyf7C3tC7E2zR8371w/O/tQAXO/u2c8a6XFB4RoCf9w82Q/4PwLsJdVK
9lP2lPDDxsnznZqCvaoaevQrvGeF31Qk1+f8HwT8KSXX2/tl/4rJ/Sf2xPHD
Ssn1Ov+HgfXTNPl+TMp+0jlZr8mc+OsWyf7F/1nAT7om6yUZj6zRM7mXTuZA
P1sk+zmZm7zSI9lP6LmjD92S9XdxXt/Nk/2cGgi/2TfZX8j8+FPHZH0lI5PF
yeRk0YnZf9ol6zWZmjzUPdmv6PlTD90TXW+wJ4W/7ZfsV2RcagdqCLL9yOD6
6t7oeoU9Uvob/0T3U9jzIl+xx7CmcI8eP2ybrE+zc147KNlPqYHwvz2T358a
A/9ohgYWrhnxww7iRYUzOnq7e/J6oMYhe5PB0a/rsl/tnay31Aj4217J+kzm
x9/aJ+s3NQJ+vE+yXs/JefCAZP+lpiSfHpjs19R06Htrrlnhmht9b5msr9RM
5ItOydefmgH/a5Psh9RE1G7k52WFazj8pFVyfqYmI390SfZjaoj/Aj92vX4=

             "]], Polygon3DBox[CompressedData["
1:eJwt12eYVOUVAODZnQGkiYhAEFCRYqQZqYYauqFLTWhGqlGKSjNSlS5NBYFI
01gTUWOoKqChiQVQEVBpiu3BAoiUKC3vee78OM93znvP7O7ce7+y5foO6zQ0
N5VKvS3yiE2ZVOrXdCpVEFbNSaWqiS/lL7MCxirqWvoeVH8rnmBvsM3sDvUX
4gG2mD3NjshfYvmNlVlN9q78H+yk+gpRmm1ly9kP6owowd5hT7Gf1JeLq9lG
9gT7Rl0snK3zN59gP6rzicvE+/qeYafkV4my+o6qF4tr5CXYi3q2iyfZCXUh
Ucq1HexZdjon6Yv+/uoafs/4uBdsDdsg/zv/Wl1UFGbr2SL2lbpI/Ez2BlvI
voweUZB9xJ5jv8T3EuXZx+wFdk5dRlRk0/zOa+NvFmXkDfVsFkvV3+lJxfcz
bGHL2PfqXFGcjdFfWFR2rQf7s5iuLqfvOlFW3si1TWKJ+qjrF32umJjsWin2
G1FKXk/Pe+Jp9c/6roy/Ud+N6mtdb+LavexvrC87IsbEz2XPsPvimYmZbAVb
xfqof+ez98f3Zq+w3uwmNpo9z15mvVh1NiruGXuJdWdV2T3x/NgLrD27kd0Z
z4AtZ11ZFTYs3i/2PPte/iovZqzFGrB26t/qGxTPii1jK9TVxMh4H+J7iGfV
N4iBbIH68bhn6tpiUm62RzTy8yqwP7Hp6rl+XktWif2FPcIWsVasIrudzWUL
2RJ1edGdTWNTxS36yrGObGI8R323qR/iH8sXx30Vd8W7Jx6KZ6VvhWt11dfr
vY09yGawe+O9FQ+zF9lK1k1dWV8sCMvYc2yKujS/OkJe37XLLBSN5Y/JV8az
FBPVRfVcIUrE/XDtTPb+jchN7lPcr56ufy6Gs/nqpX5HD/VhcR+bx5awzuqD
YjCbHfeZ9Ys5JMbG+x/3mT3q518nbmX3s9FivfqUvvMx72P+xj1kZWMOidLy
BvpnxH2OexPzS96YdZIfEHfLZ/nc/LjP6v3iLjaTzWNd1IfEEDYnvhsb72cU
jHVSXCWv6dpDxuJRx1yS141nYCymvlKUlNdh42KuqgvFeymvwTJxP+Meynv7
Hf39jjQrwqqyXqwfyxs/i93EbmcDYy1nRVl11ocNYLnsclaF9WR92QR1kXBR
XF7Ltd0x99S/xtosKsRaom7i+uOubY31lX0q/yfPMV7PKrOf5Wl9ZYxtWWd2
Kr5L3H9jO9aFnZPnZxWMXVgvdr86N9431oa1Fj/KL8b9MzZXt9X3Q3Z+dMtN
nnc89wZ6PhRd2Ej1eH111DtFB3ZP9LEL8gI+W9HYlfVmx2IDZCWMLVn7+B3y
S3FPjC1YO3ZcnqOvpLEV68B2yn/Wd1Z9g7iJnWZ59F1jbM+6soZ6PhJd2Sg2
gQ3OvqcXsvts7Ldfu34+noexkbqFvu/k/45nbKzJ6rO9Mb/Ypfidog7bw06z
i+rqojb7la2Kd9zYjLVh38gvxHtkbMxasrfkx2NPV5cU17LzMdfjXhs7x9xl
Z+X5Ys4ZO7Lu7ER2TRyQm6xVsWadkeeNvcvYQd1N3y+xXsQ6Zmwaz5ftkp9k
Z9SV4u9m9dUfiM6ujWDjYk/J7vHHsvM55vU2139ix+Pvjc+nkvn8VjrZ177J
JHO7lnhftGND9Y1KJXvgm+lkP/06k+yHR7NrSSt2p76/xjvNt4imrJ96cJwj
5K/E/DLWYPVYRfV/08ka8m281/Ka4j3Rlg3RN1JfFfVW0Yz1Z0NYDfW7og0b
zEaweupdohMbzsbGnufnHov1Myc548RZJ84GG9PJevZVJjknNBN7RK9YV/RM
8dmmsU+Inmwsm8yaqHeLHmwMm8TaqD8V/dhkNpu1VX8m+rMpbA5rrt4rerPx
sb6y1upPRF82ic1itdU7RHs2LNZnVkm9SfyB3RH3mVVXbxct2SB2D6umflu0
YAPZMNZCvU/0YRPiXWPDs2fWQqxBzA/xlfwcK2xsqG6u75D8LMtjrM0asiHq
W3x+GlvLNrJXs/v55Nxkb4s97m59ddgUtjr2mJi/rC6bytawDey12Ov4F+r8
Eexm9TuitWt3s+FsXDwnn13I3mY72Sr5o7HXqC8kS1LqgbhPkvmubeHvsZVx
fohnoj4Xe4KYFeucvudd28cPsdmsI3uBfcIOs9Xyx2KPU1/KnvkHxruqb0K8
13wtG8p+z6azdexNNoDdzMaxl9hqtj/ODzxtrBBrGDsgX8EyxoqxtrHX5QvY
EXVBUYCtyb7Ph9V5RN5499X1+Cz969Vb4vmy+mw228C2xr3KJGeQeWwz2yQG
xVxnE2O9VK/TNzrWAvYIe4ttZyNjvrA5bGOsI2xUrAVsLnszJ/l/aGa8t+w5
tpcdZGvl82PvV6djDsb3YPPYQXVOfI9Usr+/lk7OQYcyyV4f56j16eQsfSST
nKnizLQuney7BzPJ+amkeCOdnBU+j30pnZwhXk8nZ4XDmeQ8EeeZDenkTPZl
JjnbnJT/x1jKWM/f0szfclj+C8tnrMsas/zq1fE8WSfWgx2U/4/lNdZhjdi7
2T356txkXsX82pP9v+LG3GSPjr06zj1r0sm5ZX8mOQPFuWJtOjkHHcgkZ4xp
MQ/kT7EPfe7TODex5mwR2852sbGx5rIFbBvbwabHGsmeZrvZZ+zhWNfZs2wP
O8BmxJrLnmEfs/3sM/m/eK6xPKuSSs7OLfQtYe/nJOfoSbEGsaVsR3xXdlFe
kFUydmN92GR9rdgytpPtZZfkhWIvNHZnt7Op+v7InmQfsE/iTM1uZcvZLraP
VWXb4j6wAWwo+z9nGNI8
             "]]},
           Annotation[#, "Charting`Private`Tag$70947#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
       {GrayLevel[0.2], 
        Line3DBox[{251, 474, 1106, 252, 488, 280, 1211, 503, 295, 1216, 518, 
         310, 1223, 533, 325, 1233, 548, 340, 1244, 563, 1150, 355, 578, 1164,
          370, 1259, 593, 385, 1263, 608, 400, 1268, 623, 415, 1275, 638, 430,
          1284, 653, 445, 1295, 668, 460}], 
        Line3DBox[{253, 475, 1107, 254, 489, 1118, 281, 504, 296, 1217, 519, 
         311, 1224, 534, 326, 1234, 549, 341, 1245, 564, 1151, 356, 579, 1165,
          371, 594, 1176, 386, 609, 401, 1269, 624, 416, 1276, 639, 431, 1285,
          654, 446, 1296, 669, 461}], 
        Line3DBox[{255, 476, 1108, 256, 490, 1119, 282, 505, 1129, 297, 520, 
         312, 1225, 535, 327, 1235, 550, 342, 1246, 565, 1152, 357, 580, 1166,
          372, 595, 1177, 387, 610, 1186, 402, 625, 417, 1277, 640, 432, 1286,
          655, 447, 1297, 670, 462}], 
        Line3DBox[{257, 477, 1109, 258, 491, 1120, 283, 506, 1130, 298, 521, 
         1137, 313, 536, 328, 1236, 551, 343, 1247, 566, 1153, 358, 581, 1167,
          373, 596, 1178, 388, 611, 1187, 403, 626, 1194, 418, 641, 433, 1287,
          656, 448, 1298, 671, 463}], 
        Line3DBox[{259, 478, 1110, 260, 492, 1121, 284, 507, 1131, 299, 522, 
         1138, 314, 537, 1143, 329, 552, 344, 1248, 567, 1154, 359, 582, 1168,
          374, 597, 1179, 389, 612, 1188, 404, 627, 1195, 419, 642, 1200, 434,
          657, 449, 1299, 672, 464}], 
        Line3DBox[{261, 479, 1111, 263, 493, 1122, 285, 508, 1132, 300, 523, 
         1139, 315, 538, 1144, 330, 553, 1147, 345, 568, 1155, 360, 583, 1169,
          375, 598, 1180, 390, 613, 1189, 405, 628, 1196, 420, 643, 1201, 435,
          658, 1204, 450, 1300, 673, 465}], 
        Line3DBox[{265, 481, 1112, 266, 1209, 495, 287, 1213, 510, 302, 1219, 
         525, 317, 1227, 540, 332, 1238, 555, 347, 1250, 570, 1156, 362, 585, 
         377, 1261, 600, 392, 1265, 615, 407, 1271, 630, 422, 1279, 645, 437, 
         1289, 660, 452, 1302, 675, 467}], 
        Line3DBox[{267, 482, 1113, 268, 496, 1123, 288, 1214, 511, 303, 1220, 
         526, 318, 1228, 541, 333, 1239, 556, 348, 1251, 571, 1157, 363, 586, 
         1170, 378, 601, 393, 1266, 616, 408, 1272, 631, 423, 1280, 646, 438, 
         1290, 661, 453, 1303, 676, 468}], 
        Line3DBox[{269, 483, 1114, 270, 497, 1124, 289, 512, 304, 1221, 527, 
         319, 1229, 542, 334, 1240, 557, 349, 1252, 572, 1158, 364, 587, 1171,
          379, 602, 1181, 394, 617, 409, 1273, 632, 424, 1281, 647, 439, 1291,
          662, 454, 1304, 677, 469}], 
        Line3DBox[{271, 484, 1115, 272, 498, 1125, 290, 513, 1133, 305, 528, 
         320, 1230, 543, 335, 1241, 558, 350, 1253, 573, 1159, 365, 588, 1172,
          380, 603, 1182, 395, 618, 1190, 410, 633, 425, 1282, 648, 440, 1292,
          663, 455, 1305, 678, 470}], 
        Line3DBox[{273, 485, 1116, 274, 499, 1126, 291, 514, 1134, 306, 529, 
         1140, 321, 1231, 544, 336, 1242, 559, 351, 1254, 574, 1160, 366, 589,
          1173, 381, 604, 1183, 396, 619, 1191, 411, 634, 1197, 426, 649, 441,
          1293, 664, 456, 1306, 679, 471}], 
        Line3DBox[{275, 486, 1117, 276, 500, 1127, 292, 515, 1135, 307, 530, 
         1141, 322, 545, 1145, 337, 560, 352, 1255, 575, 1161, 367, 590, 1174,
          382, 605, 1184, 397, 620, 1192, 412, 635, 1198, 427, 650, 1202, 442,
          665, 457, 1307, 680, 472}], 
        Line3DBox[{277, 682, 1308, 683, 278, 501, 1128, 293, 516, 1136, 308, 
         531, 1142, 323, 546, 1146, 338, 561, 1148, 353, 576, 1162, 1163, 368,
          591, 1175, 383, 606, 1185, 398, 621, 1193, 413, 636, 1199, 428, 651,
          1203, 443, 666, 1205, 458, 685, 686, 687}], 
        Line3DBox[{459, 667, 684, 1294, 444, 652, 1283, 429, 637, 1274, 414, 
         622, 1267, 399, 607, 1262, 384, 592, 1258, 369, 577, 1256, 354, 1149,
          562, 1243, 339, 547, 1232, 324, 532, 1222, 309, 517, 1215, 294, 502,
          1210, 279, 487, 1207, 250, 473, 681, 688}], 
        Line3DBox[{466, 674, 1301, 451, 659, 1288, 436, 644, 1278, 421, 629, 
         1270, 406, 614, 1264, 391, 599, 1260, 376, 584, 1257, 361, 569, 1249,
          346, 554, 1237, 331, 539, 1226, 316, 524, 1218, 301, 509, 1212, 286,
          494, 1208, 264, 480, 1206, 262}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{690, 1000, 473, 689, 1106, 912, 691, 1107, 913, 692, 1108, 
         914, 693, 1109, 915, 694, 1110, 916, 695, 1111, 1006, 1206, 696, 
         1112, 917, 697, 1113, 918, 698, 1114, 919, 699, 1115, 920, 700, 1116,
          921, 701, 1117, 922, 702, 1308, 1001, 923, 1002}], 
        Line3DBox[{704, 1007, 1207, 703, 488, 705, 1118, 924, 706, 1119, 925, 
         707, 1120, 926, 708, 1121, 927, 709, 1122, 1008, 1208, 710, 1009, 
         1209, 711, 1123, 928, 712, 1124, 929, 713, 1125, 930, 714, 1126, 931,
          715, 1127, 932, 716, 1128, 933, 717}], 
        Line3DBox[{719, 1010, 1210, 718, 1011, 1211, 720, 504, 721, 1129, 934,
          722, 1130, 935, 723, 1131, 936, 724, 1132, 1012, 1212, 725, 1013, 
         1213, 726, 1014, 1214, 727, 512, 728, 1133, 937, 729, 1134, 938, 730,
          1135, 939, 731, 1136, 940, 732}], 
        Line3DBox[{734, 1015, 1215, 733, 1016, 1216, 735, 1017, 1217, 736, 
         520, 737, 1137, 941, 738, 1138, 942, 739, 1139, 1018, 1218, 740, 
         1019, 1219, 741, 1020, 1220, 742, 1021, 1221, 743, 528, 744, 1140, 
         943, 745, 1141, 944, 746, 1142, 945, 747}], 
        Line3DBox[{749, 1022, 1222, 748, 1023, 1223, 750, 1024, 1224, 751, 
         1025, 1225, 752, 536, 753, 1143, 946, 754, 1144, 1026, 1226, 755, 
         1027, 1227, 756, 1028, 1228, 757, 1029, 1229, 758, 1030, 1230, 759, 
         1031, 1231, 760, 1145, 947, 761, 1146, 948, 762}], 
        Line3DBox[{764, 1032, 1232, 763, 1033, 1233, 765, 1034, 1234, 766, 
         1035, 1235, 767, 1036, 1236, 768, 552, 769, 1147, 1037, 1237, 770, 
         1038, 1238, 771, 1039, 1239, 772, 1040, 1240, 773, 1041, 1241, 774, 
         1042, 1242, 775, 560, 776, 1148, 949, 777}], 
        Line3DBox[{781, 1149, 950, 779, 1150, 951, 783, 1151, 952, 785, 1152, 
         953, 787, 1153, 954, 789, 1154, 955, 791, 1155, 569, 793, 1156, 956, 
         795, 1157, 957, 797, 1158, 958, 799, 1159, 959, 801, 1160, 960, 803, 
         1161, 961, 805, 1163, 963, 807}], 
        Line3DBox[{806, 962, 1162, 804, 1255, 1054, 802, 1254, 1053, 800, 
         1253, 1052, 798, 1252, 1051, 796, 1251, 1050, 794, 1250, 1049, 792, 
         1249, 568, 790, 1248, 1048, 788, 1247, 1047, 786, 1246, 1046, 784, 
         1245, 1045, 782, 1244, 1044, 778, 1243, 1043, 780}], 
        Line3DBox[{809, 1055, 1256, 808, 1164, 964, 810, 1165, 965, 811, 1166,
          966, 812, 1167, 967, 813, 1168, 968, 814, 1169, 1056, 1257, 815, 
         585, 816, 1170, 969, 817, 1171, 970, 818, 1172, 971, 819, 1173, 972, 
         820, 1174, 973, 821, 1175, 974, 822}], 
        Line3DBox[{824, 1057, 1258, 823, 1058, 1259, 825, 1176, 975, 826, 
         1177, 976, 827, 1178, 977, 828, 1179, 978, 829, 1180, 1059, 1260, 
         830, 1060, 1261, 831, 601, 832, 1181, 979, 833, 1182, 980, 834, 1183,
          981, 835, 1184, 982, 836, 1185, 983, 837}], 
        Line3DBox[{839, 1061, 1262, 838, 1062, 1263, 840, 609, 841, 1186, 984,
          842, 1187, 985, 843, 1188, 986, 844, 1189, 1063, 1264, 845, 1064, 
         1265, 846, 1065, 1266, 847, 617, 848, 1190, 987, 849, 1191, 988, 850,
          1192, 989, 851, 1193, 990, 852}], 
        Line3DBox[{854, 1066, 1267, 853, 1067, 1268, 855, 1068, 1269, 856, 
         625, 857, 1194, 991, 858, 1195, 992, 859, 1196, 1069, 1270, 860, 
         1070, 1271, 861, 1071, 1272, 862, 1072, 1273, 863, 633, 864, 1197, 
         993, 865, 1198, 994, 866, 1199, 995, 867}], 
        Line3DBox[{869, 1073, 1274, 868, 1074, 1275, 870, 1075, 1276, 871, 
         1076, 1277, 872, 641, 873, 1200, 996, 874, 1201, 1077, 1278, 875, 
         1078, 1279, 876, 1079, 1280, 877, 1080, 1281, 878, 1081, 1282, 879, 
         649, 880, 1202, 997, 881, 1203, 998, 882}], 
        Line3DBox[{884, 1082, 1283, 883, 1083, 1284, 885, 1084, 1285, 886, 
         1085, 1286, 887, 1086, 1287, 888, 657, 889, 1204, 1087, 1288, 890, 
         1088, 1289, 891, 1089, 1290, 892, 1090, 1291, 893, 1091, 1292, 894, 
         1092, 1293, 895, 665, 896, 1205, 999, 897}], 
        Line3DBox[{911, 1005, 685, 910, 1307, 1104, 909, 1306, 1103, 908, 
         1305, 1102, 907, 1304, 1101, 906, 1303, 1100, 905, 1302, 1099, 904, 
         1301, 1300, 1098, 903, 1299, 1097, 902, 1298, 1096, 901, 1297, 1095, 
         900, 1296, 1094, 899, 1295, 1093, 898, 1105, 1294, 1003, 1004}]}}},
     VertexNormals->CompressedData["
1:eJyFfHdYVEnzNYoJMaGYUEyoCOaAiiJlwoSCqIgZMWfFLKgoZhADi4A5izlg
RMUSV0VAcpAMMwwMGTMG1G/c7rr72e/e57f/3Gdm26a6urrqnNM1t/Ws5ePm
VtbS0mpeVUtLW/M8ejSyd8AGJdDzu1PD2b+fl39et30+OQe0RnT43tA3G0IK
6m7+/bn/pgYPdvdQwYR9ezq6pKaD2zvX/N+fn7sfVIR8U8Ej4+ntK397AwtS
Uho803zu+vzo4ICAXHDu96Hs9v44aLjZfe3vz+9HeyXkdc6DModJUdUnh4FJ
2F0dteZz4hbzNyO35UH0/UG7jz8Mgj1nu9Qepfm8druT9YlTeaDF/ttS5cOx
rb8/C+ORxgvzI80v2INkj2A/kv3CepHWK/gHyT+CP5H8SX6kf0fjL+ZNqDZ9
tUJ62nVMn9V4ugpKC6a5r7FRgmKHVcrf7pmwfOpw6z1Tc6GiovbqKIMc+PZ9
vlWDDSlw/Gr7+u9G5sHegoldzkXmgOc/z3gY5mLQ5JCBGnpNGp7XdIoKysJ1
eka2iYBwvYMvVj1Rw60tG7v2uKOCQq0LPiVHHsHqa5+aHTDOh+wFi+xGxKsk
P/fb3OdwgnW+OB5pvDA/0vyCPUj2CPYj2S+sF2m9gn+Q/CP4U/I/xSXtG+0X
+ZH+Ds2vrG+y5ox+tvSk+Amz6qd3ICMbBuqY3m1akQqRLZrf9z2mhmYe33zf
7VdAcbJjfusGieBR8/bqcb750OzO7UVRhkooL96xblPFazBr6Fi1dFoBaJuc
6fB7/xfXOZ7qvD8YOrgPz9iWUQDjap4J2nJYKfnZfGFumkHNQnE80nhhfqT5
BXuQ7BHsR7JfWK90XgT/SP4X/CnFP51zOjd0XiguaZ9pf8mPZBfZM752rw8v
ndOl536P1WP35eSD4eWF++c/y4BDsP9KpF0SkH90jFYNOhqbyZ9RsHFVXtMF
5YWg93fTscXuWfyJcKVZpxr7vYugd8vBtsFPsyQ/P6j7Tn3+VZE4Hmm8MD/S
/II9SPYI9iPZL6xX8r/gHyn+BX9K+YfyJuUtyld0zumc0fmiuKS4oHggP9I6
yH7nwne9sla/kZ4eDW5NuDG9CHybpQ6wnZUMc+pbmHgMioFaKodagSuLIenF
ukW6v5LBPMX2WPXLT8Hh7xV+XiYlsKpWi8ZfzVIkP0+pvE5xZmGJOB5pvDA/
0vyCPUj2CPZL/hfWK8W/4B8p/wj+lPI/1SGqG1QvKG9SnqP8RuecziWdR4pL
iiOKH/IjrZvWO84tq02/jzHS880UoyrzrpSA3n7X6A6LY/kzBKqMMb6zy7UU
ohpovax+KFbyszreUhX5vFQcjzRemB9pfsEeyf+C/VL8C+uV8o/gHyn/C/6U
6i/VdarblH+oDlGdofpCeZPyIuVDOud0jun8UlxS3FG8kR/JT+SfzXtrFCwv
DpGeK4dUtHk+vQyKXroYNzF4Jvn5ySXtg5evlYnjkcYL80v+F+yR4l+wX8o/
wnql/C/4R6q/gj+lfE52E24ivETfU52n+k7fU12i80XfUx6l/Enf07mn807f
U5xSfNL35Ffyp9Z//vdW+p6PR3E8nx+F+bW4PSjYo8XtR8F+Lb5eFNarxf2D
gn+0uD+R/Em4UyaeUSaeUSaeUSaeUSaeUSaeUSaekdYhxDPKxDPKxDPKxDPK
xDPKxDPKxDOK8Uw4XiY/o0x+Rpn8jDL5GWXyM8rkZ5TJz5KfhfyMMvkZZfIz
yuRnlMnPKJOfUSY/o5ifiRfJ4A2UwRsogzdQBm+gDN5AGbyBMnhD8rOAN1AG
b6AM3kAZvIEyeANl8AbK4A0U8QbxTBn8jDL4GWXwM8rgZ5TBzyiDn1EGP0t+
FvAzyuBnlMHPKIOfUQY/owx+Rhn8jCJ+Jt4uwwdRhg+iDB9EGT6IMnwQZfgg
yvBByc8CH0QZPogyfBBl+CDK8EGU4YMowwdR5IOkg8joGyijb6CMvoEy+gbK
6Bsoo2+gjL4h+VnQN1BG30AZfQNl9A2U0TdQRt9AGX0DRX2DdCUZvQ5l9DqU
0etQRq9DGb0OZfQ6lNHrJD8Leh3K6HUoo9ehjF6HMnodyuh1KKPXoajXnWig
a71b69+nXUJsc53ZOTB0pfatIQcUgPu8trUuVMKjAuXN309hPMqMR2E8ysyP
MvOjOD/NS/+OxtO/p78v8704HsXxgj3S+C1Xpp8eDv/f01+xZlTx/3yPwvco
Mx7F8aedBuhUqa6EyBE/+r67pYQxXyLm/n7SZ/7/Ufge6d/R9zSO/r/MPOJ4
EMcL84j2oGiPIm7wydTJCng/KrRwYqACFo8cV2hiqYKjS1os7fkrBz4PeHSl
y4cM8EjWPf77c4NZ2k3uGyjBonXT8Oans+Co8otRx5a5UHdZjebVfvOH8MqL
j8WnwHeLgDG/P69Nfnxta5wSKunN2FR5dhrodh7v5vcpF3b/9Nx5Z2IudDv2
LtphVCLY3r0Z9Pvz3cMpT2M35EAzv/XHMy8lwdVcw8HhD/Kg/jSbCHVWLljk
R2qXzogBp/xHv35/3hzrtHRFDQ0u+TIldu7GWJg0/HOtLo5qaNHoQZPVI/Kg
YcDdImt4CQFmrWx+fz5zslVgk7UqGKOvfpYUHwrD3KvrGGapoZ6/7rX2Hnnw
ddaUw64778Hqzno5vz//qecfsKD8YL4w7dm6Ryo4eW/2YveOD2Dx/LPvdbuJ
urSPBeVtmv8tmx9pfprnEJsHaR6yX4/Zj6L9I5n9OJzbT/7px/yDs7h/NnH/
zGX+wcncP+T/Lsz/SP6/w/3flPkfyf+0v6vY/qK4v1psf5H2l+LnE4sfpPjR
5/HTn8UPUvxYR0VErbHMgb+nbB/RITEbi4cVVfz+LMQnUnweNtB5XHtsJuzY
87bWnL1KePZKP0anby7kVRhdT3yeBfvvXr8cfT4b+p3q0bXCIg+07Z/fnqqp
Nxbbu2y2+pgOQ6+31lL3VUPazGUZ/S0UUD7T0Glo3WT4OMEiqVXrfGj6esCP
IREKmOqy1ODe6TiouVp3sWNBPpQ8Dj8yrp8SqnnuK62zLgwm9Kk/MnV7AbQa
FKpuulUJa+Fbu+nKINjc38n2nboAxnOdohLFA8dLNH4JG480vpTPr83mR3s+
P9kzmdmDZA/Z/4nZj5+4/ZX5evux9SKtl/yzj/kHyT+CP5H8OdlleGB36xTY
NmFB3oRJOVBaueatiNZ5cC603K74ZCos8N/tmLVcAfpJ+36VWmvwTN0lfkYl
aRBX8jZ31ZpMqD+7rqPb8nzIWl2msGibATq9vuWeXZQCO0Kj3O+6FYDlpdtO
N3pmQsGgo5+1nsWDe1D8HfOlhXBAterYsRpZ4Lxn792cRhHgve7byD3GRbDd
eE6J48EsWBoUcWa5/yPo417UvdfJIujDdR/ycxDH/zR+NhuPNP4gn38pmx9p
fuD2qJk9SPZkc/trMPtxJ7ef1hvL1ou03vPcP/OZf5D8M4X70535E8u4P5d3
f6a1KSAe3rb/tGRbTRWs+9ipdv3SPIhc7j16w4sEeFh74OxjbZQwyQcXPOif
D+2/eG3dnp0Inj82zXeLyoIG7QNM3u4ogJnahsYfipJg3sM5Sy6cT4UxJnWH
vAsuBMhc2+TdmzfgH3Bp9ozwBDib5dlraGwRVEn/7JXjnQytK3qGo99ruGJV
qaHjlWLo+GNWpEI3BXZN1M9w7xYMnxsE3N3VV9TPfSyIz9L4jWw80nia35DN
j1f5/GSPL7MHyR6yfzazH8l+Y75eD7Ze1OfrFfyD5B/Bn0j+PDB/LL4qCoda
KbMqBvuq4MiGtCzbfWpodaDNLFvP1zDOdF2x7U0l5L96eCv3az5Mr2Pgeco0
SoMD3kzycs6GGuO/PRg9txCqXaxRv/xeNERubxH36VwapA8ftbLJ0yK4cDtN
VW1vDATnPnsXdSYRxl9W29f6VAy3Zq76VrdpLFxq9ah0R2IkZJzTskwvKoEj
BrPGvFsdC0OqxBq6bnsCkWFnD1zYK+rn/hakz9D4Pmw80nia/xybH2l+such
swfJnhrc/ghmP5L9wnpRh69X8A8WcP8c5P7UZf5E8uecPlPC2zo9gvJJVruj
ylQwu4vLIq1Palg7t/Lx4MbBMGrp97ZvdHPgetu57V+uLoCRBkmuFTFPYFSH
7nvORmRD+pPvnTI+F0LQO+MTzhZPwdmi2tmLo9PB3DqrSejCYphU7dHijd+e
Qr0hXW806pEE/qHB2lPulYB7xYZrnf8Kga2V/ioffikKzswbbX4gpBRqxtx0
NCgPAed1Y/2WzUPQXRu9ctmKMijmOm8l7mfkeiONn8PGI43fyud3ZfMjzU/2
1GH2INlD9i9n9mM/br/1n+vFDL5ewT9I/hH8ieRP4i0Oyq8Pb9TJhfDo8IBF
Tf7VgWOqRY7w6JgDqbUXu008WSB9r3Sw6vu9MBu0Dm04uMPkX51Zqb3XxGpX
OlSvfyXG4Hyx9H394DHOTnOSwGh7y3r9v/2rV2d82+Wv+BAFZQHjm2fX+lf3
1nka2tv/HoLl6XGN856K+rm/BXv+q5//wH/Gozg+mc2P4vz1mD0o2pPN7Mca
gv0Ktl6sJKw3mvkH0wT/TGT+xAjuT+5/lIlnlIlnlIlnlIlnlIlnlIlnlIln
lIlnlIlnlIlnlIlnlIlnlIlnlIlnFOOZ52eUyc8ok59RJj+jTH5GmfyMMvkZ
ZfIzyuRnlMnPKJOfUSY/o0x+Rpn8jDL5GcX8zOsjyuANlMEbKIM3UAZvoAze
QBm8gTJ4A2XwBsrgDZTBGyiDN1AGb6AM3kAZvIEi3uD4GWXwM8rgZ5TBzyiD
n1EGP6MMfkYZ/Iwy+Bll8DPK4GeUwc8og59RBj+jDH5GET9z/oIyfBBl+CDK
8EGU4YMowwdRhg+iDB9EGT6IMnwQZfggyvBBlOGDKMMHUYYPosgHOR9HUS/i
uhCKuhDXB1DUf7jOg6LOw/UcFPUcrnugqNtw/QRldBgpb5AOQ+NFvYXmF3UV
rp+gqJ9wnQRFnYTWK+ohXPdAUfcQ/CnpG6OYHoLPmR4CpIdwXQVFXY7rMyjq
b1znQVFn43oRinoa151Q1M24foUy+hj387/6GI0X9S6aX9S1yB5RvyL7RZ2K
1ivqUeQfUXf6yz8hQ9dfIT3LZ31faNtSBYPqhC0d6aMEuy2VXhr3yAKXS5t/
rM1UwV/f5xnv2p0DnZtf/mL2PBXGfbYPd9mZC39H7Z/wZJFmf+x2+6QUJsID
90PrnujlwYfYmb1798iFbslrjKbfi4GurX4cGrM+D+6se1I1LSkXplwzGxO8
6SWc3bls9o/beWD3WGkxclweFAx4t8t+9z2osR5TVoXkCfrhASlu817uOq76
rIK5s0LOb+78ABdODb7iU6GGRY9n6N8oUcHIQv/B6qOhOOTLRS19FzUEztvY
fkmwZh5lQEaOaSyOt8l/dzUqD163m7h82FIVROlHFc3TS8I60y88elU1DxKt
7cNvVlFBnol//gDXVLQuSn3XwzQX+pYWegV45EDmFpup5Qszse7wywtaWqmg
ts+ub8mpmTC9+UyTY85KmDvbST3GMBdU65uNilyeLT2795nhrvczF/QsRhxp
u1Tj/261Ils5pENLw7enakfkQf6Fh/28pilhzSqjrN62b0BVZZybzQaN/Sqb
5u175YDBSLcf997EwuqlbS9p/1TD9SF1/LoX5kDT67MXfGz4Cv4e9EHfYmw+
9PEqab50rQqGzPilNuryAKb97KPesShfVn8ztXXutzhcCWd3TCjsnBuE5fHH
ZxQEFsA79xd7p0Yqob1nSEITyzDcNKr9T0XzAuix0cq1+UXNPBNSjY/ZxOG6
2BPrNtnnw+u/T0e2nqWEBYErE9JWv8Fe5q+d9y5WQ/35pv0HaythYlDo9gLd
dEzzsFCnLMmDgGo6yzK8FdBT79yri7rZeLPZa0vFnFywP9X3kFNjBeh28hxj
FqPAaU8WeiydpoKUSTYDLPJTIOHgzc0/IAemDXpfZZ/O73s6t/quqjT49rhR
WdkABdSaaqql0FPD6JTDcw4pMqSnf1pRzuga+eBaW6fwc2QWrNzzanJIYDKE
rNh8p39WPhgEhq4bGZ4NtYONYO2POGjtV+q8cncB3NyXlbF7vwIchx8LPf8w
DL52S1TNKC+AXg2tLV07KWFj8nXnWnlB0LFKRI8dRoXQV0Z/q3Tks1aPNtlw
qKHlwWnHHqHdMtd0i8VFkD6uY2rHPtmwYZjhnvKscJzhZPfuZkghRPbf3Xla
22zoOTl4lLNzPM7+mFOvYUYBjB60f9IRRRZMP63V5WliMtY47JDUJyYfPr74
cNRxRBa8yWirs8kvA0fn1x4456oa2ox6WBLnmQmFA6orBmRm4yjzlMl33fJg
S/gcg68PMsDVtdYpn4tKnDq+ac3rE3LhtcXduzoTE8DfZbu5/ucc8E0a+yQq
JQ9cnKZktOyZBN7XCj4WlyugTqlztFXNfNjwvIbbuubJcCRs8NfAMVmQvLLV
grGdNLwmcJPvisqp0tN9oeH9pK6adYWbZ22OSQPrrZvMI5skwOgJMVVKKxeB
1dJs29fLMsBxZeD24ZMiYFD3UPMAnyJ4mL86asWLTDheevPnyuOPwL5twM8l
yUWwWkZ/q/HG3KaFMgW+rZ8+K9osGDse2G98SqcECvbf2nNgQCocehJYNnn+
azS8N6FoqG0xBMDbno9sUiG72V5/B/cE7KN63Nfatgju3x49LLhVKtxlT1yY
X7Q9uFUhnOiAlXRDUiBkxMCAqzpZOP/uxkM3k/NhuM+IIbMGpEAj3Zqd/M8o
0O5J+/Dmu9WQvqqF2aAzyWB92D5miXMOVptl23N2/zzY72VqZjz/NVzeg4Nh
lwpixmW+8HJTg3pW4V77G9FwT/3Dz/qAEhTXP+vqJ+bD+iUZnwy9Y6Hp4VrW
vQdmw7kdNd7otC6ExoWxnw0d4kE38cbefu3SQL9xZZs5dkUQ1Mp85Q/9ROk5
dYNf5cixxRqcPOJo6J0kePCzU+mj2NfwyXJElUCNf3LXPUlTa/bxfsUUkyp9
giFywOde2xeVQPQf+puPxO9ufBmuXLA0DrImRGQM83iCzu36VXydXwrNrrf2
OFgtHr5E4vaBtyJxQM9vKdZnSyBwct0Xx2fGg0N5vfFhixKxIe6qMWtfMbyZ
X8e6ydZ4CDAY3fWxRRqG5j/YrTe0CHqxuIfX7BxI8T8p5sJQlUU8nDDqPb7z
aCXG5M8OsV6qyT/jD7huKI2D+bPLkz+1UOG5xl1a6GqrwXeZ/5REDV9dXN17
8S61Cvb8GtmgfokaRhzKvJCRGwKjVjk3PvRVCe3USZ16zSyAMM8OnqefP4f1
JjPm7b+eDTv+svpgFV0I6Sv8A+rFhsLsXfEmH36mAd6o1q+/cTHEnyxvafE+
HKJve2/vlpIIenl2mQPHauLQsk3i10pR0tN2qOvUy900vNh3sbt6fgzUOD30
4wzPJ/Bt1ZiN92+VQukf/av+FtTvd61b65bKFs/hi7+h2d5liBP9T2+aPbUM
/Gq/8J2f8gJ6DXMxf+4bhepT4e7PfUvB0L52vI15KGxKNvC6oqlr4y4sz9y9
vgTuzdu9J8L8FaybnvoirXY6ju65pG2pYTHMOvnCapbiFRR1uFu39bFsrG+/
rf2+M4XQieV9eMvqgJT/J4TdH3F9ZhiM3WjS2e+cCqv0q3rK9LgaGrQpQ6en
eyAl0NPlV+1c2LPGa0uHJvmg57rmYkLAUViQNmS/oYmmjo3/uX3x8QKoPc+7
r3X/C3Dj2ZCg8Nxs2G9XP+KCURG8DO7vu+bkDViV1OR867Xp0KinhWOeXzG0
0Hp4xazgDnS//9Vq4pgkyGjw7qWtogQ63HJw1Ov7EH4pT8WefhYFL3qssdqb
UwpeD9Tvey9H6dl36o9KHtvKJP+K+luKaWH4kLbeEBfe9OxaRCwd2L1sLZZB
mcPaWoUVp8Hy/ouUKuVRaD31/KN11cug613TYYX9L8P+wuKIpk5JqPfE3Gxq
WQn8/dDMofHDm5AZ2HfnANd0nDeoqpmnTzGMvj14TubT27C4Ts/u47OysbfZ
zpqV9Yug9dpAh/Te9+Dl18MY0jQH3VqY6tfeWQArGb6BXIZ3JJyzhOMe/j3Q
9wZsHuTzwGY+jxX7u8j/LtDfvc/sRAWzE8jOpmxd6M3WBbSuFOYHHMr8AOSH
y8xvmMn8BuS3Ahn9bSvbD6Qn7Utzto/4he0j0j42YPuO3di+Yybf95ssTtCZ
xQk25nHya+4/cYU8rpDi6rvLP3GI81kcIsVhcet/4hZ53CLF7TgW52jH4hwo
zk04HiJ8tJmfi5nsHGExO0dA5+gWO3fows4dWPNz15idU3Rj5xTs+Dk9yM41
mrNzDXSuL7I8gFUO/5MHgPLAaxn9zY/lGfxx6p88g995nqnE8hHSk/JSFMtj
GMXyGNbneSyJ5T10YnkPn/K895LlSVzH8iTu4nlyKMurOJLlVaS86s3yMPI8
jJSHw1neRp63gfK2A8vzeJLleYjleZ7wEOEjqgsJrI7gJVZHgOrIDVZ3cAqr
O0B1pwmrU/iD1SmgOnWN1TUsYnUNqK6t/EN/85fwRg6rm3iV1U2kumnB6ize
ZnUWqc7eZ/UY6TmN1+WGrI5jTVbHsSGv4+tY3Ude9/E8r/sqhhOQ4wRUcpzg
xXAFclyBhCvSGA5BjkOAcMgwhluwMcMtQLjlGMM5+IzhHJjHcQ7hIcJHhIvO
MRyFOQxHQW+Oo/IY7sIjDHcB4a5qDKdh1Q3/4DQgnNZbRn8LYjgQfRgOxIkc
Bw5huBEnM9yIhBs5zsRRDGfiGI4zZzE8ivQkXLqe4Vg8zHAspnAcu4HhXuS4
Fwn3hjOcjBwnox/HyW4MVyPH1UC4muNwLGI4HKw5Dn/PcDumMNwOhNtHMJyP
jgznA+F8wkNmHB9R/HMegZsZjwDiEb8O/8M78ATjHUC8Q05/47wGVzJeg8Rr
bjAehFMZD8JvnAc1ZbwJdRlvwjacN3Gehc6MZ+EzzrOsGR9Deh7mvIzzOPzO
eBwSj0tmvA8578PpnPdNYDwROU8E4omcV2IvxiuBeKUe46HIeSgQD41gvBUX
M94KZpy3dmc8F6swngvEcwkPET4iXNSB8Wi8yng0EI+W0996M56O5oyn43TO
0zmvx4aM1+NzzutvMR0AmzAdANdwHUDNdANcxXQDzOW6AdcZ0JvpDNiK6wxc
j0B69uC6RC2mYyDXMXAe1zFKlOGJJlVzcEXX4I193meDuX9oy7jpOdCH6SGY
xfQQqMf1kASmn2A+00+A9JMIprdgLNNbgPSWW0yfQW2mzwDpM1zPwTFMzwHS
cwgPLef4iPDPn/qbj6S/cX0JFUxfQtKXuB6FE5kehee4HsX1K+zK9Csk/Yrr
XTiC6V1IehfXx7AT08eQ9DGup+FYpqch6WncnyD6s/TP75G+F/Q6/ML1Ovos
6njC99L40j/3UZqf95uh2G/GdVcQdVfSu6kfjXRaGkf/jsbTPQT1VZF+TvdA
1FdF90F0D0d9K3R/RPeg1LdC93d0D019AXR/Sn0AdI9N/QDCeOm+VZhfuh8U
7JHuswT7kewX1ivdFwh+k/RtuiegflLSw0nXpv5B0m/p/ob61+iegu7PqB+N
7ono/pL6g+ieju6PqZ+F7pHp/p76L+iemvonyJ/URyGMl+61hfmR5hfske4N
Bfuley5hvdK9jOA3lPGbpHvTvQv1adJ9BN0TUF8n6ed0H0b9knRPRPeR1O9G
93R0H0z9aHQvTPfx1E9E9/LUD0H9PtQXIfWj0H+8T0MYjzRemB9pfsEeJHsE
+6V7RmG90r2Y4DeU8Zt070D3WNS/TPdBdO9C/bZ0f0H3i9S/SfeMdL9L/ZJ0
z0v369QfR/fU1N9A/WjUJ0D9JdR/RH0m1N9DbqY+H2E80nhhfqkPQbBHujcX
7EeyX1gv0noFv6GM36R7H7oXpL5vuh+keyzqg6b7LLqvpf5Zuiel+3LqP6V7
aupXoP5E6hOgfhHqp6M+DerXof4v6pOhfinyM/UpCeOlvhphfqkPRLBH6lsQ
7Jfu2YX1SvfCgt9Qxm9IfqN7Vuo3p/tWuhek/nS6v6P7b+qPpntw6j+gfl7q
E6D+D+oPpT4Q6r+hfkbqk6H+J+rvoz4l6j8jP1OfmDBe6msS5pf6cAR7kOwR
7Jf6HIT1Iq1X8BvK+E2696R7a/odAN1HE54Tf/9O96/0ewK6V6X7QvF39NR/
QP3m1FdA/Ifux4gHUV8I9U1TvweNpz5r4qfUr0P9v9SHQ/aLv7unPirqY6X+
KNIXxN/jU38b9WNS3xrpa9S/STob9R1SPPzZT0i6J/33VpwfZeZHml+wH2Xs
l37vL/gHZfwjvQdA8D/K+B/J/8L+osz+Iu2vEG8oE28oE28oE2/Sewaor0KM
Z+oDEOOW+l3E+KR+IzEOqd9LjDfqtxPjivodxfihflMxToTxUjwI80v7Ltgj
7a9gv7SPwnql/RL8hjJ+k/xPfSqUn6lfhfoqxPxM/UP0+xLqI6L+rYNCfqb+
OcrP1EdH/Ytifqb+0a1Cfqb+XTE/C+Ol/CzML+VnwR6pr0+wX8rPwnqlvinB
byjjNyk/U98P/Y6K+n+oT4XwBvWrUD+WiDeoHw4EvEH9iCLeoH5QEW9QP66I
N6gfWsQbwngJbwjzS3hDsEfCG4L9Et4Q1ivhDcFvKOM3qc+H+qjuCPiZ+n5E
/Ez9bdLvnziepP5C+r0O9RlSf6eIn6m/toaAn6m/mfAz9TlTfzn5mfrMhfFS
X7Qwv4SfBXsk/CzYL/VJCuuV+voEv6GM3yT8TH1pIh+kPiqRD1K/YGWBD1K/
psgHqV+Wfq+j/ycfROKDOn/yQaTfQ1DfOPXrk58r/ckHabzUZy7ML/VFC/ZI
fbyC/RIfFNYr8UHBbyjjN4kPUp+fvqBvUF+aqG9Q/6Wob1D/6/n/1jdQRt9A
0jcK/tQ3UNQ36PcP5Oe0P/UNlNE3aH6pz1ywR9I3BPslfUNYr6RvCH5DGb9J
+gb1TYq6HPWtivob9Q3T7/DK/tTfUNTfqG/+4H/rbyjqb/S7EfJnxJ/6G4r6
mzC/qL+hqL8J9kv9z8J6Rf0NRf2NdE/SQUm3dK605vsJZyVcmtK3XnZqJtzN
qZE6wjAXOpuaeGsPzIEz+rabbPJTwOljo8nbdPIgf7pphuHnHMg7Um+V6cQE
yDEt0MGUPJiwspHJ6F0qGHvI8t72+a/hjMumFa5uamiuinh8SK3h7e1xeMD2
J/DOSu1UqUQt9TcuFvob370afSDgnApqj3evPmpmGGpN3lLD6LgaLk6u3kW/
pQp6nY3s3q40Dn2HjCutpK2GS+1f53s758Do5bU9FKeTEdqbzJrWPw96VYxa
+vCiEu6MzZp39kEGPjzsG395Qi7EO1ftPj5GASedit8PbqzA5sVNm/2+TyGd
mu4BSDdOVl/d8HWAApb1sO/mrUqD7epURZyeGvYWff+i9UUBe6sZJDj0TIKh
RsoSk5r54LJh+JiFB5Qw53FlG92b0bCl9SWHsoR8aGHy48j9r0o4X+1U6IO8
EHi07N6dejP/7T805fftdM9e+Pyc9cTRSuhUv4eTq0U83vQYdH/Q0nzwcnbf
nnpGAZaJAbqvLFJwRetmi/V3q8Hf+POqHZnZ4Bg3bpGFZybOqFbwItAtD17s
1DfN0c2G3W6u+ee9NXGh71kvZ04uDH1c3LTvokz4bPUywNMjBzc9vlaljZUK
ArYdHq0YkwXd7Vqcu9Y8GdS2VWqadSqAh39p+c8emA1bvhzX8vGOhWs1vWJT
WhXC/eBWu8KuZ0P7/m2ClC+eQ9Ia8371owth5t7zyzrWzIIx1XftdX+agkMW
rZh8NTkfvke9uNfJPwM+JnQZeWd4Fnabcezd3KtqWOm8tdmOWumg1NY796Oy
ErfVODkpe0kevN9X8cPXNRXcjW2HeFVR4aDHjtf7muZC3InH233apcFIj0Or
tjnEw7fQrT/62xXB3DVTh3r8SoMwnaSfbnGhkN66hUVl42KIvviz4aikZCja
re9gqNDUh6bdXQfE5MN5w1Zl69e8gadHnXYrnJRo1XiJl99iNYDZwbev9JLg
iv/poW2WqvD5x6pBsVU1PHvw8A13UhIh55nBzqkfwqGgXPd547El0LHSr8iq
tnEwvoqy78cAJd4s7bN2t30+DAnSNzfvGAtthw38aBOswq7ls5fdj8qDUykl
H6yPaeybUVHtZIkKFV7B35u50O/7Dv6PDsD4nff/8HfifX0Fns7m8bVY/Z/v
wfOxiP7P9+D5W5QK78EjXlwg8GIaH/mf77vztVgp8Fyap7fAZ+V4qxw/XSbT
L0TjRX66JlVRbqkKQq3EQd5u4UpwP3Z3UGZgAew53bev45FHuOz0gvRZbbLh
3rhWrTosLoLzVuGb43sE4/3qY1eGKFOgo9eUyF06JWA3p374zZ1PcNDFW+8t
l8VBjtaoj+r5pdD5qmEH48WId6cnrD/Q6jnMdFyW5Di1DHb/KO6xas8T1GpX
pceq+TFYeUy9q1G3SkHvXJ24kb2CcV/iOUO75sm4qZNr6bVFJTBkZUmV1xp7
Co3VKaXPM9Fyb7dFR5OLoOD1jY/lOUG4eJrzN5tOSkzoMK/PVaNCcKwc/CKy
0wPsnZoYNEHDa+4O3Xjm5KJ8cA8pavBgl4boehtch3EaXtNtySW3kDxIXhR6
uCQzHG0nlFd16pMNBj2HLTwdUgiDV+7aYj/3Nd602jhijWUq9Lj0dWQ322Io
XnLF7MT1SAx/6tPzTfV4qKY4HzHobAk07/55pZlPFJ763uVzjfQXsGrD96nR
vqWw+YT1yRMxr1G/YtVIqztJ+PRmYdcMjd+6tUlxT58YgTu7GH8xX5aB+sGK
EJVPEXjY7G20MCgMO1z48ctuvwI7+D486ldeAOmdo1Y3b/gK9XxCqtQvzMED
CZttZ4/Nh0LrrtH2m17i55Ch86KScrF8z7C3de/kwa7iKffPbk3ACdHam2fb
pkLPvUVrhtpq4j9q0oRjCxNxxEnH0hineOiZ4Tl53r5i8C4I67+iXhL2GNYw
92f/UPji0enX6fUlYGnX7dyCJgm42fRkh/YxaVh+fdCBxtpFEKFMza30Iw7t
OxwINAzPxvsdi9PO7S4A89tdL09/E4tmx32Ma/bKwbfjzp0z/amG+Mvt+3W9
F4M662asM+2RixHrMns6/b5X1W3csJFFGi69cuxN5NZ4CK2+1NNgaBG0ib7r
8KNWOu6r99o5qf8r8Nm7aI1Oi2L4bKAI8gxMxmmfLYeERWbhwrlzjzlk5cOG
2Wue/7J5gyUvPdUbpinxXWLmqMUb1HDa/vKKoMJE/PzY0+ruIhUGxATFR+nl
gdtT0xfFR7PRYPjT20uVr6Bf+Ke2J88UwtyObvk6Dul4qrlxz2ZLFej86VNp
s4g86GPjq9X2eSre+OA4cuvuHBxhOPP2jp254LfeIaRVjyzU+px/fpiPEt+3
v9VoY+b/1E34v+5zhftTCYfQfW2pMI+AW0BmvFSv79/qdbZmnVyY6xbxbcKL
PVCl86HFLTR4zJ/ZD9x+eMftH7Nr/ae+Jjng6JNv1OfaUbA0Vxy0P14AQX+F
RF5rmgO5P6+qI/rcw+ujK2OTnQXQl/kHuH9gOPcP9yecZP4E8ufzijovvuVm
w0Xvpbkb4QLMvh65YodREZwx/PjLKCsb/Ht+8M18dhst5w082lS/iPYLmrL9
Qtqvs2x/ge8vXOD768riAXg8AMVDOYsfmM7iBxbw+OnvuH/35bXpkJ+WlBF1
7gY4b3ab/cSvGCoS7UacdkmHy6vCtQ2Cb+IX/WP6V3yKoS2LT9jD4hP/4vH5
nMUzLGDxjC95PCew+Ace/xDO478/Oy/AzwuU8fMSyc4XTGTnC+h8DWLnEbaw
8wif+XnsObxf73djksCkNK3Jp6I78DPrTMeOihLYurFIOXpmEoy/kbCl05DL
eH3zMCPXshI4xM47dGbnHem8a7P8AFYsPyDlBw+WT2AcyydI+cRMpk+7lOUl
KGd5CT7zvJTN8hjwPAb7eR7bz/IemLK8B8Y875mxPAm7WZ6EBjxPbmN5FRqx
vArI8+qo0AH39v4dBSPAcuov84fQJd6w6bqcUvA9OrDt3E9R0CvueJtI7TM4
7+GlS17Vy6ANy9twhOVtpLz9nuV5CGV5HinPD2d1Aa6zuoA9eV1IZ3UEbFgd
QaojHqzuwFNWd+ACrzsLWZ2CPqxOAdWpT6yuwRJW14Dq2hhWB6GY1UEYwOug
IaubcJDVTaC66cPqLGizOguVeJ1t2vV8ddtghNxlx3K1O3tj75GVx2zGMujL
6jXcYPUanXi9ns7qO1iy+o4qXt9vMTwAdxgewE4cD3gz/ABLGX5Awg9uDG/A
r4R/8AZu43hjHuc5xHsWcdxSl9mJjZf/Yyf04XYeY/gQMxg+BMKHxjJ9uQfY
vuNItu9A+z6UxQlasDjBrjxOBjNcihyXAuHSDgzH4gSGY+EGx7Fu7HzhMna+
4AY/X93ZecRW7DziL34eKzOcjJkMJyPh5AEMV+NVhqvhb46rzzIcjiEMhwPh
8CiG27GU4XYg3P6d5Su8zfIVUL7qy/IbRrP8hpTf5jBegM8ZL0DiBbGMR+Bw
xiPwO+cR7xjvQM47gHjHCsZTMIfxFHDnPOUr4zX4mfEaIF4zg/EgtGE8CIgH
nWb5H0+y/A+U/3m9wGOsXuAcXi84z8K2jGch8awgxstwM+NleJ3zMs7jsBvj
cUg8bjDjfch5HxDve854InKeCNmcJ/oxXokzGa8E4pV7GQ9FzkNhOeehnLdi
F8Zb4QbnrQ9YPcVSVk+B6imvvziM1V+k+sv5Mp5hfBkfc77M+TXOZPwaiV9z
Po6ejI+jFefjnL/jEsbfkfh7HNMB8BTTAYB0gJ5MN8B7TDcA0g24zoC2TGeA
gVxnCGC6BJoxXQJIl+A6BuoxHQMqcR2DeMsaoa+P4xYcyHALEm4xZPoJTmD6
Cb7n+gnXW9CG6S14lustaqbPYC7TZ1DF9ZlOTM/B00zPQdJzuP6DXP9B0n/k
+u4GdX934paDEryy02I+L8yC7+aKAzq/VNC5IsbqcF0NXhqcPutqlzRY0ufC
thqxubDDzMntwb0c6Pe6ro7CJQmMzJxuR+zPg9Rphk9Lh6rglgPo+tvHwkCD
cnP9HmrQD700wiBQBUeGjHnVS8OP7Y/Hvjh/Xa3hbUWN9cpVYOoZnmn37j5E
e23r6/hDLfs72W8GDmPaaOY5ZdDCs/2DUKzI6lWUpTmPfvsdywdo4t3P73XE
GadYNDV6ZrSvqxqWfuwzaMb9HKjoOKVs9/YkPJW6aUHc3jxo2XaZ99F6OTDZ
K+ZVjlkahg7olJoXmQvXG5v46U5Wgn2rzNfflmWhxbTN5759V0HIqtxGVdor
4JVJZOjIvelQ7WnBBeu3eYBZAesWRSpAN2Cm6ZGbb8DDwLT0UJQark2p+XHI
dCU4rz3Se9+4OIh+5zB0mVc+dKp4MNP3tRJsGqw/trRKGDxeP9i3XusCyA5/
Od+mQQ4sfTjH7MbCINAZ9qZn2eZ/dSRjQUdqtzpjYF1HJRSXLjfIXhSHeYq7
C/fsyoewddmTIEYBw49Gn3P9+w2+br1++bNQNYTNXz/itYkCvE6p9SMOp2MX
g8mhgwryoNg/KWna6mxop5fTwXx1Nn6aY1RtcnkuDO7gmGm0PAscCqbu+TpJ
idf7Ta31XeOHH3pjRpm1y4Jbqd3P1lMmwxzDFcrAGgXgajQssF3LbMgpG3p0
uE08BKSOn1SQVwCBb0JNs/ZmQ6vmJ4a4Lg2HzOhX27r7FMKSjXW/fo/LhvGt
v9yLUz2EXm7PVtTT4MAZtYs61OyVBb2+xfnNrUjGBqv9I7f9yAc/7UBl3ocM
sD5lWdXtQwY+a3EnSFsTJ8GmEbYdj6RDoEXdTWdMFGisXbPOEM26WubO0zLs
nQYbzxm+2FFPk4fyx9bL1+zvqsfJno+qp0H7Wn6G5pYJYPRX/+nPuhTBo2k9
TR8kpsG95U907F5FQPIBv5Nty4ugjztmtJmSDjvNWpl9HfcYdLa3/2S8vhjm
B5rXe1CRDBdaDRjwd88sHFfsNX6Hxk7dDinFGX+/gXu7rMIMNHnIs+TO0Bca
/3/XaX391fYkcKjc/K+R93NwylmHvxI0cThj286bYa8S4f7o9M6LK0XC+ilb
BkX1LIGQBX91azwgCayXnRrreDIYDpi3uxz/sgTG7hoY12ZxHJh6pDp8m6FE
Zd+7e/dq9v3LscNvU51ioXYP+9guVioMP7Es/YAm/h+/mxbrfz8KqoWPr7Tg
1hMo+Dx5waP4UlhR4DJ+4YNQ8Frfr1azQBVWPaGnr7z6r0713++h8rb47/dQ
+Vj893uofC3++z1UPhbie6hIR8rkfUBv/3hPlL/Ff7+Hyt9CfN8UzZPC76tp
nkrcHj1+v9r2j/dN+Vv89/umfCz++31TPhbi+6b+L/1KfA9VB7vqg/MCgtDs
Zu2Flppzf8L+amElzXnfv66o1fw2j/CyjbubQXw2bNv/Sq965SKYFNu+VpTn
Y5xk5GGi1sTjpO53K+uvK4ZDS2uG1ooKxszty5z2WCbB0jyHXgkvSmDZyMV6
RjFP8Nn70SsrHkVBWMTsl9/iNPv+vJbNtg2IBss9DE66ICSu2Tip57YyUDfc
nLjk5hNs6t71dMf7UbhW197wpSZOkqc03lB6PBhP7HrhmGiRhF08t9/I1cTh
w6lN32yxe4yz2+uvL5ucjtMb+R7ppzkXG6uetziS8xB11k45XByXje2uOGW3
0Jzr9i5HG6QuCMLFU+wGDG+Qg473qivLNevdYR9dXPD2PjpcNEioU65CVc/O
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
      "]], {}}, 
   {RGBColor[0, 0, 1], Thickness[Large], 
    TagBox[
     TooltipBox[Arrow3DBox[{{-0.5, 0.5, -0.25}, {0.5, 0.5, 0.25}}],
      TemplateBox[{
        TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
           RowBox[{
             AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
           FontTracking -> "Condensed", AutoSpacing -> False]& ), 
         InterpretationFunction :> (ReleaseHold[
           RowBox[{"mvDownUp", "@@", 
             MakeExpression[{
               Take[{
                 SlotSequence[1]}, 
                Length[{1}]], 
               Take[{
                 SlotSequence[1]}, {Length[{1}] + 1, 
                 Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
         Tooltip -> "mvDownUp[{1}, {}]"], 
        TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
           StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
           RowBox[{#, ",", #2}]]& ), Tooltip -> None], "\"SaddleSurfaceCS\"", 
        
        TemplateBox[{
          RowBox[{"-", "0.5`"}], "0.5`"}, "mvPoint", 
         InterpretationFunction -> (RowBox[{"mvPoint", "[", 
            RowBox[{"{", 
              RowBox[{
                TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
         DisplayFunction -> (RowBox[{
            TemplateSlotSequence[1, ","]}]& ), Tooltip -> "SaddleSurfaceCS"]},
        "\[DoubleStruckE]", DisplayFunction :> (StyleBox[
         RowBox[{
           RowBox[{
             StyleBox[
             "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
           RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
         "Condensed"]& ), 
       InterpretationFunction :> (
        RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", "[", #4, 
          "]"}]& ), SyntaxForm -> "fish", Tooltip -> "Cl[3, 0, 0]"]],
     Annotation[#, 
      GeometricAlgebra`\[DoubleStruckE][
       GeometricAlgebra`mvDownUp[{1}, {}], 
       GeometricAlgebra`Cl[3, 0, 0], "SaddleSurfaceCS"][
       GeometricAlgebra`mvPoint[{-0.5, 0.5}]], "Tooltip"]& ], 
    TagBox[
     TooltipBox[Arrow3DBox[{{-0.5, 0.5, -0.25}, {-0.5, 1.5, -0.75}}],
      TemplateBox[{
        TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
           RowBox[{
             AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
           FontTracking -> "Condensed", AutoSpacing -> False]& ), 
         InterpretationFunction :> (ReleaseHold[
           RowBox[{"mvDownUp", "@@", 
             MakeExpression[{
               Take[{
                 SlotSequence[1]}, 
                Length[{2}]], 
               Take[{
                 SlotSequence[1]}, {Length[{2}] + 1, 
                 Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
         Tooltip -> "mvDownUp[{2}, {}]"], 
        TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
           StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
           RowBox[{#, ",", #2}]]& ), Tooltip -> None], "\"SaddleSurfaceCS\"", 
        
        TemplateBox[{
          RowBox[{"-", "0.5`"}], "0.5`"}, "mvPoint", 
         InterpretationFunction -> (RowBox[{"mvPoint", "[", 
            RowBox[{"{", 
              RowBox[{
                TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
         DisplayFunction -> (RowBox[{
            TemplateSlotSequence[1, ","]}]& ), Tooltip -> "SaddleSurfaceCS"]},
        "\[DoubleStruckE]", DisplayFunction :> (StyleBox[
         RowBox[{
           RowBox[{
             StyleBox[
             "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
           RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
         "Condensed"]& ), 
       InterpretationFunction :> (
        RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", "[", #4, 
          "]"}]& ), SyntaxForm -> "fish", Tooltip -> "Cl[3, 0, 0]"]],
     Annotation[#, 
      GeometricAlgebra`\[DoubleStruckE][
       GeometricAlgebra`mvDownUp[{2}, {}], 
       GeometricAlgebra`Cl[3, 0, 0], "SaddleSurfaceCS"][
       GeometricAlgebra`mvPoint[{-0.5, 0.5}]], "Tooltip"]& ]}, 
   {RGBColor[0, 0, 1], Thickness[Large], 
    TagBox[
     TooltipBox[Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}],
      TemplateBox[{
        TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
           RowBox[{
             AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
           FontTracking -> "Condensed", AutoSpacing -> False]& ), 
         InterpretationFunction :> (ReleaseHold[
           RowBox[{"mvDownUp", "@@", 
             MakeExpression[{
               Take[{
                 SlotSequence[1]}, 
                Length[{1}]], 
               Take[{
                 SlotSequence[1]}, {Length[{1}] + 1, 
                 Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
         Tooltip -> "mvDownUp[{1}, {}]"], 
        TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
           StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
           RowBox[{#, ",", #2}]]& ), Tooltip -> None], "\"SaddleSurfaceCS\"", 
        
        TemplateBox[{"0.`", "0.`"}, "mvPoint", 
         InterpretationFunction -> (RowBox[{"mvPoint", "[", 
            RowBox[{"{", 
              RowBox[{
                TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
         DisplayFunction -> (RowBox[{
            TemplateSlotSequence[1, ","]}]& ), Tooltip -> "SaddleSurfaceCS"]},
        "\[DoubleStruckE]", DisplayFunction :> (StyleBox[
         RowBox[{
           RowBox[{
             StyleBox[
             "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
           RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
         "Condensed"]& ), 
       InterpretationFunction :> (
        RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", "[", #4, 
          "]"}]& ), SyntaxForm -> "fish", Tooltip -> "Cl[3, 0, 0]"]],
     Annotation[#, 
      GeometricAlgebra`\[DoubleStruckE][
       GeometricAlgebra`mvDownUp[{1}, {}], 
       GeometricAlgebra`Cl[3, 0, 0], "SaddleSurfaceCS"][
       GeometricAlgebra`mvPoint[{0., 0.}]], "Tooltip"]& ], 
    TagBox[
     TooltipBox[Arrow3DBox[{{0, 0, 0}, {0, 1, 0}}],
      TemplateBox[{
        TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
           RowBox[{
             AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
           FontTracking -> "Condensed", AutoSpacing -> False]& ), 
         InterpretationFunction :> (ReleaseHold[
           RowBox[{"mvDownUp", "@@", 
             MakeExpression[{
               Take[{
                 SlotSequence[1]}, 
                Length[{2}]], 
               Take[{
                 SlotSequence[1]}, {Length[{2}] + 1, 
                 Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
         Tooltip -> "mvDownUp[{2}, {}]"], 
        TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
           StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
           RowBox[{#, ",", #2}]]& ), Tooltip -> None], "\"SaddleSurfaceCS\"", 
        
        TemplateBox[{"0.`", "0.`"}, "mvPoint", 
         InterpretationFunction -> (RowBox[{"mvPoint", "[", 
            RowBox[{"{", 
              RowBox[{
                TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
         DisplayFunction -> (RowBox[{
            TemplateSlotSequence[1, ","]}]& ), Tooltip -> "SaddleSurfaceCS"]},
        "\[DoubleStruckE]", DisplayFunction :> (StyleBox[
         RowBox[{
           RowBox[{
             StyleBox[
             "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
           RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
         "Condensed"]& ), 
       InterpretationFunction :> (
        RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", "[", #4, 
          "]"}]& ), SyntaxForm -> "fish", Tooltip -> "Cl[3, 0, 0]"]],
     Annotation[#, 
      GeometricAlgebra`\[DoubleStruckE][
       GeometricAlgebra`mvDownUp[{2}, {}], 
       GeometricAlgebra`Cl[3, 0, 0], "SaddleSurfaceCS"][
       GeometricAlgebra`mvPoint[{0., 0.}]], "Tooltip"]& ]}, 
   {RGBColor[0, 0, 1], Thickness[Large], 
    TagBox[
     TooltipBox[
      Arrow3DBox[{{0.6666666666666666, -0.5, -0.3333333333333333}, {
       1.6666666666666665`, -0.5, -0.8333333333333333}}],
      TemplateBox[{
        TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
           RowBox[{
             AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
           FontTracking -> "Condensed", AutoSpacing -> False]& ), 
         InterpretationFunction :> (ReleaseHold[
           RowBox[{"mvDownUp", "@@", 
             MakeExpression[{
               Take[{
                 SlotSequence[1]}, 
                Length[{1}]], 
               Take[{
                 SlotSequence[1]}, {Length[{1}] + 1, 
                 Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
         Tooltip -> "mvDownUp[{1}, {}]"], 
        TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
           StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
           RowBox[{#, ",", #2}]]& ), Tooltip -> None], "\"SaddleSurfaceCS\"", 
        
        TemplateBox[{"0.6666666666666666`", 
          RowBox[{"-", "0.5`"}]}, "mvPoint", 
         InterpretationFunction -> (RowBox[{"mvPoint", "[", 
            RowBox[{"{", 
              RowBox[{
                TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
         DisplayFunction -> (RowBox[{
            TemplateSlotSequence[1, ","]}]& ), Tooltip -> "SaddleSurfaceCS"]},
        "\[DoubleStruckE]", DisplayFunction :> (StyleBox[
         RowBox[{
           RowBox[{
             StyleBox[
             "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
           RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
         "Condensed"]& ), 
       InterpretationFunction :> (
        RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", "[", #4, 
          "]"}]& ), SyntaxForm -> "fish", Tooltip -> "Cl[3, 0, 0]"]],
     Annotation[#, 
      GeometricAlgebra`\[DoubleStruckE][
       GeometricAlgebra`mvDownUp[{1}, {}], 
       GeometricAlgebra`Cl[3, 0, 0], "SaddleSurfaceCS"][
       GeometricAlgebra`mvPoint[{0.6666666666666666, -0.5}]], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      Arrow3DBox[{{0.6666666666666666, -0.5, -0.3333333333333333}, {
       0.6666666666666666, 0.5, 0.3333333333333333}}],
      TemplateBox[{
        TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
           RowBox[{
             AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
           FontTracking -> "Condensed", AutoSpacing -> False]& ), 
         InterpretationFunction :> (ReleaseHold[
           RowBox[{"mvDownUp", "@@", 
             MakeExpression[{
               Take[{
                 SlotSequence[1]}, 
                Length[{2}]], 
               Take[{
                 SlotSequence[1]}, {Length[{2}] + 1, 
                 Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
         Tooltip -> "mvDownUp[{2}, {}]"], 
        TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
           StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
           RowBox[{#, ",", #2}]]& ), Tooltip -> None], "\"SaddleSurfaceCS\"", 
        
        TemplateBox[{"0.6666666666666666`", 
          RowBox[{"-", "0.5`"}]}, "mvPoint", 
         InterpretationFunction -> (RowBox[{"mvPoint", "[", 
            RowBox[{"{", 
              RowBox[{
                TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
         DisplayFunction -> (RowBox[{
            TemplateSlotSequence[1, ","]}]& ), Tooltip -> "SaddleSurfaceCS"]},
        "\[DoubleStruckE]", DisplayFunction :> (StyleBox[
         RowBox[{
           RowBox[{
             StyleBox[
             "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
           RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
         "Condensed"]& ), 
       InterpretationFunction :> (
        RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", "[", #4, 
          "]"}]& ), SyntaxForm -> "fish", Tooltip -> "Cl[3, 0, 0]"]],
     Annotation[#, 
      GeometricAlgebra`\[DoubleStruckE][
       GeometricAlgebra`mvDownUp[{2}, {}], 
       GeometricAlgebra`Cl[3, 0, 0], "SaddleSurfaceCS"][
       GeometricAlgebra`mvPoint[{0.6666666666666666, -0.5}]], 
      "Tooltip"]& ]}, 
   {RGBColor[0, 0, 1], Thickness[Large], 
    TagBox[
     TooltipBox[
      Arrow3DBox[{{0.6666666666666666, 0.75, 0.5}, {1.6666666666666665`, 0.75,
        1.25}}],
      TemplateBox[{
        TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
           RowBox[{
             AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
           FontTracking -> "Condensed", AutoSpacing -> False]& ), 
         InterpretationFunction :> (ReleaseHold[
           RowBox[{"mvDownUp", "@@", 
             MakeExpression[{
               Take[{
                 SlotSequence[1]}, 
                Length[{1}]], 
               Take[{
                 SlotSequence[1]}, {Length[{1}] + 1, 
                 Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
         Tooltip -> "mvDownUp[{1}, {}]"], 
        TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
           StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
           RowBox[{#, ",", #2}]]& ), Tooltip -> None], "\"SaddleSurfaceCS\"", 
        
        TemplateBox[{"0.6666666666666666`", "0.75`"}, "mvPoint", 
         InterpretationFunction -> (RowBox[{"mvPoint", "[", 
            RowBox[{"{", 
              RowBox[{
                TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
         DisplayFunction -> (RowBox[{
            TemplateSlotSequence[1, ","]}]& ), Tooltip -> "SaddleSurfaceCS"]},
        "\[DoubleStruckE]", DisplayFunction :> (StyleBox[
         RowBox[{
           RowBox[{
             StyleBox[
             "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
           RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
         "Condensed"]& ), 
       InterpretationFunction :> (
        RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", "[", #4, 
          "]"}]& ), SyntaxForm -> "fish", Tooltip -> "Cl[3, 0, 0]"]],
     Annotation[#, 
      GeometricAlgebra`\[DoubleStruckE][
       GeometricAlgebra`mvDownUp[{1}, {}], 
       GeometricAlgebra`Cl[3, 0, 0], "SaddleSurfaceCS"][
       GeometricAlgebra`mvPoint[{0.6666666666666666, 0.75}]], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      Arrow3DBox[{{0.6666666666666666, 0.75, 0.5}, {0.6666666666666666, 1.75, 
       1.1666666666666665`}}],
      TemplateBox[{
        TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
           RowBox[{
             AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
           FontTracking -> "Condensed", AutoSpacing -> False]& ), 
         InterpretationFunction :> (ReleaseHold[
           RowBox[{"mvDownUp", "@@", 
             MakeExpression[{
               Take[{
                 SlotSequence[1]}, 
                Length[{2}]], 
               Take[{
                 SlotSequence[1]}, {Length[{2}] + 1, 
                 Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
         Tooltip -> "mvDownUp[{2}, {}]"], 
        TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
           StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
           RowBox[{#, ",", #2}]]& ), Tooltip -> None], "\"SaddleSurfaceCS\"", 
        
        TemplateBox[{"0.6666666666666666`", "0.75`"}, "mvPoint", 
         InterpretationFunction -> (RowBox[{"mvPoint", "[", 
            RowBox[{"{", 
              RowBox[{
                TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
         DisplayFunction -> (RowBox[{
            TemplateSlotSequence[1, ","]}]& ), Tooltip -> "SaddleSurfaceCS"]},
        "\[DoubleStruckE]", DisplayFunction :> (StyleBox[
         RowBox[{
           RowBox[{
             StyleBox[
             "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
           RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
         "Condensed"]& ), 
       InterpretationFunction :> (
        RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", "[", #4, 
          "]"}]& ), SyntaxForm -> "fish", Tooltip -> "Cl[3, 0, 0]"]],
     Annotation[#, 
      GeometricAlgebra`\[DoubleStruckE][
       GeometricAlgebra`mvDownUp[{2}, {}], 
       GeometricAlgebra`Cl[3, 0, 0], "SaddleSurfaceCS"][
       GeometricAlgebra`mvPoint[{0.6666666666666666, 0.75}]], 
      "Tooltip"]& ]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    TagBox[
     TooltipBox[
      Arrow3DBox[{{-0.5, 0.5, -0.25}, {-0.9082482904638631, 
       0.9082482904638631, 0.5664965809277261}}],
      "\"N\"",
      TooltipStyle->"TextStyling"],
     Annotation[#, "N", "Tooltip"]& ]}, 
   {RGBColor[0, 1, 0], Thickness[Large], 
    TagBox[
     TooltipBox[Arrow3DBox[{{0, 0, 0}, {0, 0, 1.}}],
      "\"N\"",
      TooltipStyle->"TextStyling"],
     Annotation[#, "N", "Tooltip"]& ]}, 
   {RGBColor[1, 0, 1], Thickness[Large], 
    TagBox[
     TooltipBox[
      Arrow3DBox[{{0.6666666666666666, -0.5, -0.3333333333333333}, {
       1.0507773064653545`, -1.012147519731584, 0.43488794626404254`}}],
      "\"N\"",
      TooltipStyle->"TextStyling"],
     Annotation[#, "N", "Tooltip"]& ]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    TagBox[
     TooltipBox[
      Arrow3DBox[{{0.6666666666666666, 0.75, 0.5}, {0.13725490196078438`, 
       0.2794117647058824, 1.2058823529411764`}}],
      "\"N\"",
      TooltipStyle->"TextStyling"],
     Annotation[#, "N", "Tooltip"]& ]}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{299.2127240519997, 287.17609840334035`},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{All, All, All},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.44673133600490184`, -3.2008303749090876`, 1.002554748874409},
  ViewVertical->{-0.04374888007564278, -0.2830455827838302, 
   0.9581081533724097}]], "Output",
 CellLabel->"Out[40]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
I3oQUYvzWx6a17117vgaBOyGyX399eMH+ZsmJ/xtE1f5d43b5i8fvcW/Y+Ji
f/3oh1q3T9qYeWj69a3JqZWZ++b0annmxquEgX9pUb4V82+ZWu1vmlXRsndu
9+aXFue3/qheUEHmiYVAwLdPq0qvreuXXi2aePZ+s6HQO7+h0PbObyoUcZkA
r/fZ5kLvd9g6ehc2dwR2Ta+f3Q/YNDNpx7V+z8M9fcvzBB+CHrtkyq++lJ5b
3ZSeV30itX/OZuG/dvYu309OwNcPqJCpNZiOJ7BCvggBu08C9jsCLE5dMlYf
x2mhttBqZDA1lFLm0pVVnAFrhjBqI0bjjE8opM+MqH6RJx6xlBMjdLx7xlAu
RLZwcXw+cCUZd47IAbIfAid+hEHPR1cUdMNcYpUBTaNojaDpJm+pdXSbnUcg
BGAG/FdILAjvjy8ZXwpNyE+A0AX8ud4NAyEWmjS0Al7hOxsebcCJ1RPwk1kt
uEw8Q2s9sLBX5r7remV+vLC7/8TcHv4jiWv8dZP6ZlZOLW+9bdIQf8n4if7S
ScP9u8ev8reKNn/kMn/eiGX+mpEPtd49YWPrg7NG+ksT1f6SKdXNz9+Q3/L0
QoFS/wfzhGxabxPIvUP8jnA5BHJfuCnfyku9sSzfO7OmML1qRr/UIwt7emfX
FaYeu7EnoFVIXOBV6FMiN/X4TSUAWlvgtaMNdQdWvl/y2IrUa8smAasCqXqX
dmDE5WWEmf9il/BDv7y3s9WFEQruKiSWvD8/iMG817oHEFpk0imhUyulF8g8
KJAJJt4P5zG7oTcKeOJ1oMFa0OJU0z19XIyXqOADVnjAK3yHq5NiVPMGO4YA
IHErq0UTT3MI9FYvF2N1mTEiqw3NDcIjG2qKXEWYFBWRx8l+Z9L/VW/NvcwZ
hmcjMtilTpIlIpFjlzhHMMSHYJahxeBNHCBIwDufGFl1afqYQVYBvBNSGDOs
FgFZj2CER/fk0/Pzmn8uMCgaYM+GF07LTwXHlbYcvuGq1h/O6On//cSr/dem
d2y9e9a1rbclKjOP1XfPPHZ9d79u3ODMikS5v3jsRH/d5NH+8lFJ/zqBycXD
7/LvGL7XXyHaHZMnti6fUtl6Z921LffP6p750fyumf0Lujb/bGEePIvWPbNj
Vq/zK6f2tdMrpgsvMjNrfG1qf31P76M1sOWRAKkN6BT9/fW6Qu+TDdR+I/CI
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
MUFtBWAIrJ8QDeAr/4+jhw26nBgzGI6f3Dcj3vzUvDz0tXbM7p3eNqt357Zx
5Ri4ovxHx/ScURXpeWMrA2zNFNi6uuCP/qCKe/26AXf586r2pteOWpoeWfJa
5poOfyBK6+IP6XevP7XvC+ntk5ald05ZRjHoHRGYknj6teZ5fSYs4u9EExRm
Yy64q55pQwYLHK89RSGj2EU3iph1kwxGfhezF2EqT8eTvzRxm+/NP+B7C2D5
7QdqB97rxbF6bBbV/aDvlWraIfhoVwUxmIIUsBVGAb2gAahCkQC6Wuhb5Qwt
KwwIGXfsHabZQE5caBGkw9xEHryCEM0acLJWNBtwkofQKQAYsTPVsnDiwBe3
T8pHWlo6qbL1vlk90eJ1jrB4AyOgQxtMdwZaSs8dU+lPr1nkTxh4iz+k7FHk
nRoBHZrUXeY9vSDfO1yf7z17Q356VMlr6VGlr7nEWYOu+dCqhBxZendiGWJH
eFMCOx0BO+n/v7dvgY6zus6dzEvCloQQxkiWJY+xZfkRGxNfP+XH+CFbfkYE
mxpwnCHYwjbgGjDUgIuHOMbYFAxJHYfCjX9wEi6QWGnaXkJo1iQ0QENCybM3
vS1rknC7WG1zS9PcXFZW171zz36d/+z/P78ezlp31tJYGskz59/7O9/+9j77
nP8mgxmDnfLrEdX+A8KNUlSGj6obqWvMLdNi+POAJ3huoDN4bk8n0BEBJwQP
Rb46ajUgOqp8akdv7ba1dxronAD42EPOit3fFuiAvsoQcrhjrFV0FSPHKWJA
OjlLChi4RWxC1lmqRT6KMFE0O4QVAsgONRPtc7u8CEbZ0ubpGbcLi9ahsgIi
ARJDSGpf8AVQonpDhuoPpJlS+EyCqk60+Y92rJjyzoPrW967fulkgFPxYN/E
1MUeOM0iikICKqccjqJJ0lw4sChVvnbRxNoSg6dlXftrM6+4FzG1avr+Wl/X
J6rrPrS6snXp1ODA6rbyk4Sr8tmt9cGN826pTpvAimtybXzDz2CVCsqvlcMr
bwg+098TPHh1e3DimnZMCF+VhHC/QMtSUuWxD38Uy2KGkzjMNbuqSq8CfHg6
1SSOt1QO0goAwcqWxOoAVoAq+gqXpWrXrdhpTFHedEIBastJAFVYmsjIrljz
LwLqXGtGo8o9muoF1FIMKNqLkCnCRi55ONrcl/JpQJVigHKIKO9iSHCESglQ
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
g3+jjt+XMOn9jFhfjNJwxCLU/Z6YFrENXOKz27+1DVQrIdtALRw4kLAPaoyN
sQENqtGtiX1l4cIXavPmfRU0xmk2gY/reBW2rjBYqi999eNjkU8j182mT7xo
+ngVJOz5zvqilVLji1bK+Wb/BVIjykgrVqCvapdc8o+1xsZfgkQl6Zj3XV7x
5T0NXWLoYfIEJhwBqvh4+CtUmp4ba9WsJqpt8mUgIykPoV7xkQJJmhz41lH9
TcUXDcl1j/Cq+XadZf47/IkuOXvSmUInI5ZAobnNY5MBz/U75QB4r2hyO0y5
ho9FdUlARoio/gvjdnPlpRd3N84Y4UVLw6jnLWUEgnbtfqUUt1pDDPhhPTYO
62GKKPD+ct3RxWkYJFeJin9GEMef5E4O8YvOumiB7x1bRECUdWn9+RjsldJj
2Ksz3nf5LUCsq8oabtgarqzB9bZiRAOwFQovlurtZcxKdr2yoM8ElAYrVpfa
K8/doeygXvsYO81VMnJHKmdKJEHCF8XcagRKFx8V9IWXby+1zhPEaSoqLrcE
rS9V6det4Wu2yrETn5uLjrvFzz/866lTa69Nm1b9L0uWnGSGi7KbFAz4BEA1
vTexFd2rySdejaVsuVGbvhC1X3dr+JoVZ9fjc1M0+rz95QULal9auPDdz6xb
B3/7bHnr1lpl5sza9664ovT12bPFJ1K7cQe7SV9UojtojlumFdvoC1BKcqvn
NVKcF49m+aH2w87O2i8bG2u/zWaRo309slSdiE2/DZ6Lu8hzcZTSWUbdxniO
X5ztA+KAorQimXKkiXCUQXxbA7jFpeJeqpzfH5tY6zzeHevhEEoqLY0KKfDF
TvBcmCOMrSjsjV/sKMruuMaKzaNpuGB7W8L4zAI/leW1izyXQ7IxK5chRanh
L0fJvRXh5fiq2sME/iaP7+o8vvNNwH7PdeY910nppD1TWHhBX6dK7/g61Zas
RaNyW5TUuTJVca8z77nOhOl4jedSM4mXmnEvM6Wv05e3KXH3Ie1PfxbqLwtL
76TnIhXnJE7Ea/EXZXt1Rfkl36FMgCegHB+7tPmRIKAO7poVd+E25pQEF7pQ
nexxYc5zddJW4E7JvTR+sZiATY/fl07K+PAnynIafX0Tw+UXVIPxIc4ebO3M
LB6uEJ1gRg/XlyYpndTpN/ddcWZILpsPz+r2SF89Y2giW3KTuOFegpvfKNXz
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
1Af+H6HNu/8=\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"b1cde8c5-15e2-4336-a8e0-67a956b38ed6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gaCoordinateChart", "[", "\"\<SaddleSurfaceCS\>\"", "]"}], "[", 
   "gaRunningPatch", "]"}], "[", "\"\<NormalToSurface\>\"", "]"}]], "Input",
 CellLabel->"In[41]:=",ExpressionUUID->"45dca353-aa1a-4059-835a-c8ca3f514e59"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "v"}], " ", 
    TemplateBox[{
      TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
         RowBox[{
           AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
         FontTracking -> "Condensed", AutoSpacing -> False]& ), 
       InterpretationFunction :> (ReleaseHold[
         RowBox[{"mvDownUp", "@@", 
           MakeExpression[{
             Take[{
               SlotSequence[1]}, 
              Length[{1}]], 
             Take[{
               SlotSequence[1]}, {Length[{1}] + 1, 
               Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
       Tooltip -> "mvDownUp[{1}, {}]"], 
      TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
         StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
         RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
     "\[DoubleStruckE]",
     DisplayFunction:>(StyleBox[
       RowBox[{
         StyleBox["\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}],
        AutoSpacing -> False, FontTracking -> "Condensed"]& ),
     InterpretationFunction:>(
      RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
     SyntaxForm->"fish",
     Tooltip->"Cl[3, 0, 0]"]}], "-", 
   RowBox[{"u", " ", 
    TemplateBox[{
      TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
         RowBox[{
           AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
         FontTracking -> "Condensed", AutoSpacing -> False]& ), 
       InterpretationFunction :> (ReleaseHold[
         RowBox[{"mvDownUp", "@@", 
           MakeExpression[{
             Take[{
               SlotSequence[1]}, 
              Length[{2}]], 
             Take[{
               SlotSequence[1]}, {Length[{2}] + 1, 
               Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
       Tooltip -> "mvDownUp[{2}, {}]"], 
      TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
         StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
         RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
     "\[DoubleStruckE]",
     DisplayFunction:>(StyleBox[
       RowBox[{
         StyleBox["\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}],
        AutoSpacing -> False, FontTracking -> "Condensed"]& ),
     InterpretationFunction:>(
      RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
     SyntaxForm->"fish",
     Tooltip->"Cl[3, 0, 0]"]}], "+", 
   TemplateBox[{
     TemplateBox[{"3"}, "mvDownUp", DisplayFunction :> (StyleBox[
        RowBox[{
          AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
        FontTracking -> "Condensed", AutoSpacing -> False]& ), 
      InterpretationFunction :> (ReleaseHold[
        RowBox[{"mvDownUp", "@@", 
          MakeExpression[{
            Take[{
              SlotSequence[1]}, 
             Length[{3}]], 
            Take[{
              SlotSequence[1]}, {Length[{3}] + 1, 
              Length[{3}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
      Tooltip -> "mvDownUp[{3}, {}]"], 
     TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ), Tooltip -> None]},
    "\[DoubleStruckE]",
    DisplayFunction:>(StyleBox[
      RowBox[{
        StyleBox["\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
      AutoSpacing -> False, FontTracking -> "Condensed"]& ),
    InterpretationFunction:>(
     RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, "]"}]& ),
    SyntaxForm->"fish",
    Tooltip->"Cl[3, 0, 0]"]}], 
  SqrtBox[
   RowBox[{"1", "+", 
    SuperscriptBox["u", "2"], "+", 
    SuperscriptBox["v", "2"]}]]]], "Output",
 CellLabel->"Out[41]=",ExpressionUUID->"e80ab23e-8bfa-4e6a-9067-60ce916f3500"]
}, Open  ]],

Cell["We can multiply basis elements on surface", "Text",ExpressionUUID->"eb8a359c-6245-47c4-afe9-53baeb0164e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckE]", "[", "1", "]"}], "[", "]"}], 
  "\[GeometricProduct]", 
  RowBox[{
   RowBox[{"\[DoubleStruckE]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], "[", "]"}]}]], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"195dc5f0-056a-406a-a1b9-cc18f812855d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "u"}], " ", "v", " ", 
   TemplateBox[{
     TemplateBox[{"1"}, "mvDownUp", DisplayFunction :> (StyleBox[
        RowBox[{
          AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
        FontTracking -> "Condensed", AutoSpacing -> False]& ), 
      InterpretationFunction :> (ReleaseHold[
        RowBox[{"mvDownUp", "@@", 
          MakeExpression[{
            Take[{
              SlotSequence[1]}, 
             Length[{1}]], 
            Take[{
              SlotSequence[1]}, {Length[{1}] + 1, 
              Length[{1}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
      Tooltip -> "mvDownUp[{1}, {}]"], 
     TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ), Tooltip -> None], "\"SaddleSurfaceCS\"", 
     TemplateBox[{"u", "v"}, "mvPoint", 
      InterpretationFunction -> (RowBox[{"mvPoint", "[", 
         RowBox[{"{", 
           RowBox[{
             TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
      DisplayFunction -> (RowBox[{
         TemplateSlotSequence[1, ","]}]& ), Tooltip -> "SaddleSurfaceCS"]},
    "\[DoubleStruckE]",
    DisplayFunction:>(StyleBox[
      RowBox[{
        RowBox[{
          StyleBox[
          "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
        RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
      "Condensed"]& ),
    InterpretationFunction:>(
     RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", "[", #4, 
       "]"}]& ),
    SyntaxForm->"fish",
    Tooltip->"Cl[3, 0, 0]"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["v", "2"]}], ")"}], " ", 
   TemplateBox[{
     TemplateBox[{"2"}, "mvDownUp", DisplayFunction :> (StyleBox[
        RowBox[{
          AdjustmentBox[#, BoxBaselineShift -> 1]}], FontSize -> Small, 
        FontTracking -> "Condensed", AutoSpacing -> False]& ), 
      InterpretationFunction :> (ReleaseHold[
        RowBox[{"mvDownUp", "@@", 
          MakeExpression[{
            Take[{
              SlotSequence[1]}, 
             Length[{2}]], 
            Take[{
              SlotSequence[1]}, {Length[{2}] + 1, 
              Length[{2}]}]}, StandardForm]}]]& ), SyntaxForm -> "fish", 
      Tooltip -> "mvDownUp[{2}, {}]"], 
     TemplateBox[{"3", "0", "0"}, "Cl", DisplayFunction -> (SubscriptBox[
        StyleBox["Cl", {FontColor -> RGBColor[0., 0., 1.]}], 
        RowBox[{#, ",", #2}]]& ), Tooltip -> None], "\"SaddleSurfaceCS\"", 
     TemplateBox[{"u", "v"}, "mvPoint", 
      InterpretationFunction -> (RowBox[{"mvPoint", "[", 
         RowBox[{"{", 
           RowBox[{
             TemplateSlotSequence[1, ","]}], "}"}], "]"}]& ), 
      DisplayFunction -> (RowBox[{
         TemplateSlotSequence[1, ","]}]& ), Tooltip -> "SaddleSurfaceCS"]},
    "\[DoubleStruckE]",
    DisplayFunction:>(StyleBox[
      RowBox[{
        RowBox[{
          StyleBox[
          "\[DoubleStruckE]", FontColor -> RGBColor[0., 0., 1.]], #}], 
        RowBox[{"[", #4, "]"}]}], AutoSpacing -> False, FontTracking -> 
      "Condensed"]& ),
    InterpretationFunction:>(
     RowBox[{"\[DoubleStruckE]", "[", #, ",", #2, ",", #3, "]", "[", #4, 
       "]"}]& ),
    SyntaxForm->"fish",
    Tooltip->"Cl[3, 0, 0]"]}]}]], "Output",
 CellLabel->"Out[42]=",ExpressionUUID->"7d2ca9b1-4fde-48e0-8b07-7f032419ce48"]
}, Open  ]],

Cell["Many to add...", "Text",ExpressionUUID->"55f4ccc3-df3c-4819-8899-f969b9ca2526"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{993.75, 1122.},
WindowMargins->{{30.75, Automatic}, {Automatic, 2.25}},
ShowSelection->True,
InputAutoReplacements->{
 "gaDD" -> "\[DoubleStruckCapitalD]", "e" -> "\[DoubleStruckE]"},
FrontEndVersion->"13.2 for Linux x86 (64-bit) (December 7, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9305a230-3b81-47c0-a6ed-b220cc70ae01"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 9741, 198, 175, InheritFromParent,ExpressionUUID->"4d2653ff-482c-4210-80ab-abe83adb06f6"],
Cell[CellGroupData[{
Cell[10324, 222, 224, 5, 68, "Section",ExpressionUUID->"12e3f015-6a95-4081-999c-690d7638afc6"],
Cell[10551, 229, 143, 5, 36, "Text",ExpressionUUID->"7aeb1ba3-38a1-4e81-882b-de2ba4d7a620"],
Cell[CellGroupData[{
Cell[10719, 238, 166, 3, 54, "Subsection",ExpressionUUID->"0f6ffdb4-291c-414d-bef4-8be88320e9ec"],
Cell[10888, 243, 392, 10, 35, "Text",ExpressionUUID->"2af2f46b-a932-4178-a424-d9202a6684a1"],
Cell[11283, 255, 952, 17, 29, "Input",ExpressionUUID->"65da44db-a4b4-4f2c-be27-ce3928fb520f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12272, 277, 101, 0, 54, "Subsection",ExpressionUUID->"8ef18f9a-720f-4412-86dd-c009466c60a7"],
Cell[12376, 279, 844, 18, 82, "Text",ExpressionUUID->"1bcd8f16-71fc-4bab-b0c5-bd489a41a9e5"],
Cell[CellGroupData[{
Cell[13245, 301, 966, 15, 51, "Input",ExpressionUUID->"67d2764e-7520-4278-8fed-45e09373adcd"],
Cell[CellGroupData[{
Cell[14236, 320, 479, 14, 26, "Echo",ExpressionUUID->"2d658779-bbef-4b96-b323-5b32e2784a16"],
Cell[14718, 336, 357, 10, 26, "Echo",ExpressionUUID->"ceaf95b7-d04d-4863-bdd0-8146138362af"]
}, Open  ]],
Cell[15090, 349, 8622, 197, 37, "Output",ExpressionUUID->"47d1eb78-2856-4676-aa94-8e0bcd1b15fe"]
}, Open  ]],
Cell[23727, 549, 224, 3, 35, "Text",ExpressionUUID->"338f73ef-6ae3-4db7-b71f-3e809b1e1297"],
Cell[CellGroupData[{
Cell[23976, 556, 1979, 38, 54, "Input",ExpressionUUID->"3b55591c-57b4-4017-8cf1-fc41270614be"],
Cell[25958, 596, 5490, 123, 83, "Output",ExpressionUUID->"aee03146-456f-473c-b7e7-c9c05656bc0c"]
}, Open  ]],
Cell[31463, 722, 157, 2, 35, "Text",ExpressionUUID->"7acdb459-2f17-483a-9445-7ba18b025001"],
Cell[CellGroupData[{
Cell[31645, 728, 259, 5, 29, "Input",ExpressionUUID->"946ce42b-03af-4ce2-8921-43477022457c"],
Cell[31907, 735, 831, 15, 44, "Message",ExpressionUUID->"34d2bba9-5254-42c8-99e2-82c16ef103df"],
Cell[CellGroupData[{
Cell[32763, 754, 182, 4, 26, "Echo",ExpressionUUID->"07177e89-a8c2-4895-8138-51de4755c744"],
Cell[32948, 760, 192, 4, 26, "Echo",ExpressionUUID->"703bb24f-97d5-4eb7-8720-2535d9e81ee9"],
Cell[33143, 766, 198, 4, 26, "Echo",ExpressionUUID->"a4ad1ccc-5d04-4d49-a636-48b3ba4a225f"],
Cell[33344, 772, 183, 4, 26, "Echo",ExpressionUUID->"6e011c4f-61d4-4126-bccd-69351ac70776"],
Cell[33530, 778, 187, 4, 26, "Echo",ExpressionUUID->"393dba14-8588-4957-84b4-a4ee82769c65"],
Cell[33720, 784, 195, 4, 26, "Echo",ExpressionUUID->"a14c1e52-08a5-4846-9177-59ed58390d0f"],
Cell[33918, 790, 189, 4, 26, "Echo",ExpressionUUID->"f1738ed1-b992-421d-b77d-bb550ebf0bc5"],
Cell[34110, 796, 197, 4, 26, "Echo",ExpressionUUID->"3cfd7b61-4c2b-4c64-a58f-ff30cf614191"],
Cell[34310, 802, 209, 4, 26, "Echo",ExpressionUUID->"1e7f2864-7e8c-4894-9476-aea7f338543d"]
}, Open  ]],
Cell[34534, 809, 357, 8, 28, "Message",ExpressionUUID->"6937165b-6464-4e3f-b55b-df79e61ad88f"],
Cell[34894, 819, 258, 5, 26, "Echo",ExpressionUUID->"27c574b1-43aa-47a9-81ba-1d182112a3f2"],
Cell[35155, 826, 90165, 1997, 342, "Output",ExpressionUUID->"672907bf-a992-4da6-8af4-8a3b3352d3b7"]
}, Open  ]],
Cell[125335, 2826, 114, 0, 35, "Text",ExpressionUUID->"aaec6fac-3ad0-4dcf-a5e7-3347d49eec46"],
Cell[CellGroupData[{
Cell[125474, 2830, 143, 1, 29, "Input",ExpressionUUID->"b0871fbd-e98f-4d39-838e-7eb71f6510db"],
Cell[125620, 2833, 467, 8, 55, "Output",ExpressionUUID->"50b13976-2d5f-4a9e-b2c5-d7826ce52b8a"]
}, Open  ]],
Cell[126102, 2844, 127, 0, 35, "Text",ExpressionUUID->"c5c9fa3a-c754-46c0-a8f4-12df7bd2ef2f"],
Cell[CellGroupData[{
Cell[126254, 2848, 2142, 64, 154, "Input",ExpressionUUID->"8da90d90-7d2b-46cb-bd2b-c91ab3510e23"],
Cell[CellGroupData[{
Cell[128421, 2916, 182, 5, 26, "Echo",ExpressionUUID->"92403ac5-e5aa-484e-b115-295728500888"],
Cell[128606, 2923, 335, 9, 26, "Echo",ExpressionUUID->"6ea98b14-b7ee-4467-9d0e-2242292f7393"],
Cell[128944, 2934, 246, 7, 26, "Echo",ExpressionUUID->"b77a7ab0-39ed-460d-9c94-57ce5ecaa67e"],
Cell[129193, 2943, 2738, 79, 73, "Echo",ExpressionUUID->"13ad2769-e32f-4b7d-967f-54a67d4cae5d"],
Cell[131934, 3024, 1575, 49, 38, "Print",ExpressionUUID->"e1151e2e-2d33-4090-9599-17d7672d5cfc"],
Cell[133512, 3075, 2736, 79, 73, "Echo",ExpressionUUID->"b8b5b69e-767a-4deb-809d-0920a1f24a00"]
}, Open  ]],
Cell[136263, 3157, 127638, 2194, 304, 73416, 1304, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"b1cde8c5-15e2-4336-a8e0-67a956b38ed6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263938, 5356, 267, 5, 29, "Input",ExpressionUUID->"45dca353-aa1a-4059-835a-c8ca3f514e59"],
Cell[264208, 5363, 3824, 91, 57, "Output",ExpressionUUID->"e80ab23e-8bfa-4e6a-9067-60ce916f3500"]
}, Open  ]],
Cell[268047, 5457, 112, 0, 35, "Text",ExpressionUUID->"eb8a359c-6245-47c4-afe9-53baeb0164e5"],
Cell[CellGroupData[{
Cell[268184, 5461, 308, 8, 30, "Input",ExpressionUUID->"195dc5f0-056a-406a-a1b9-cc18f812855d"],
Cell[268495, 5471, 3446, 84, 37, "Output",ExpressionUUID->"7d2ca9b1-4fde-48e0-8b07-7f032419ce48"]
}, Open  ]],
Cell[271956, 5558, 85, 0, 35, "Text",ExpressionUUID->"55f4ccc3-df3c-4819-8899-f969b9ca2526"]
}, Open  ]]
}, Open  ]]
}
]
*)

